{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/ataglance/DataFilter.jsx","js/utils/Formatting.js","js/utils/Weekdays.js","js/utils/DateUtils.js","js/selectors/index.js","js/components/ataglance/datasets/EngineValues.jsx","js/components/ataglance/datasets/OverviewValues.jsx","js/components/ataglance/datasets/ResightingValues.jsx","js/components/ataglance/datasets/ScheduleValues.jsx","js/components/ataglance/AtAGlance.jsx","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/utils/Months.js","js/components/chart/DateLine.jsx","js/components/chart/Chart.jsx","js/components/detail/EngineDetail.jsx","js/components/menu/AddEngine.jsx","js/components/detail/EditEntry.jsx","js/components/detail/EntryDetail.jsx","js/components/detail/ResightingDetail.jsx","js/components/menu/About.jsx","js/components/menu/AddEntry.jsx","js/components/menu/AddLine.jsx","js/components/menu/Contact.jsx","js/components/menu/Login.jsx","js/components/menu/Menu.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","entryAdded","json","type","data","showDetail","contentType","hideDetail","showMenu","hideMenu","addEntry","_ref2","date","direction","engines","id","time","notes","dispatch","fetch","method","headers","Headers","Accept","Content-Type","body","JSON","stringify","then","response","rootReducer","combineReducers","entryData","state","arguments","length","undefined","isFetching","items","detail","action","Object","objectSpread","isOpen","menu","trainLines","userStatus","isLoggedIn","isLoginError","success","DataFilter","onFilterClick","_this$props","_this","props","label","_this$props2","this","isActive","react_default","a","createElement","key","className","onClick","Component","formatDateForDB","arr","split","concat","formatTimeForDB","timeValues","hours","parseInt","amPm","formatDateForSelect","value","getDate","toString","month","getMonth","getFullYear","formatTimeForSelect","mins","_arr","slicedToArray","getHours","getMinutes","createEntryId","dateArr","timeArr","getRandomNumberKey","Math","round","random","Weekdays","full","short","index","addMonths","months","d","setMonth","setDate","convertTimeToMinutesElapsed","timeVals","indexOf","getTimeFromPercentage","perc","totalMins","ceil","parseFloat","hrs","floor","ampm","getEntryData","getTrainlines","groupAllEntriesByDayAndTime","createSelector","groups","map","entry","engine","push","line","number","day","Date","getDay","percentTime","color","find","name","_id","reduce","acc","current","groupItem","values","filter","occurance","g","sort","b","localeCompare","_ref","objectWithoutProperties","getResightings","allEntryEngines","forEach","entryId","duplicates","Set","size","add","match","dates","getLineWithMostSightings","getInitialSightingMonthStart","days","weekdays","toConsumableArray","initial","getInitialSightingDate","EngineValues","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tableRef","React","createRef","_this2","setTimeout","classList","remove","entries","_this3","initialSightingDate","lineWithMostSightings","trainLineList","maxEngineCt","xAxisInterval","dataSet","ct","ref","trainLine","bgStyle","backgroundColor","transform","getEngineCountByLine","style","item","connect","OveviewValues","north","Number","isNaN","resightings","c","array","date1","date2","min","distinctResightings","getDistinctResightings","mostSightingsByLine","avgResightingDays","minResightingDays","Infinity","mostSightingsByEngine","sightingEngine","sightingCt","getDirectionPercentage","max","ResightingValues","yAxis","scrollIndicatorRef","handleScroll","bind","assertThisInitialized","onEntryClick","scrollIndicatorTimer","removeEventListener","querySelector","addEventListener","window","clearInterval","initialSightingMonthStart","endDate","startDate","now","getRoundedEndDate","i","substr","getMonthsByInterval","prevLeft","left","getDatePositionInRange","lineStyle","width","bindActionCreators","ScheduleValues","startTime","endTime","groupStyle","top","itemStyle","height","defaultProps","AtAGlance","activeSet","handleDataSetChange","dataSets","setState","ataglance_DataFilter","OverviewValues","datasets_ResightingValues","datasets_EngineValues","datasets_ScheduleValues","Entry","divRef","pct","toFixed","setAttribute","EntriesForDate","entryHeight","chart_Entry","Months","DateLine","activeMonth","isMonthLabel","year","data-month","chart_EntriesForDate","Chart","currentMonth","chartWrapperRef","scrollTop","pageYOffset","document","documentElement","querySelectorAll","parentNode","getBoundingClientRect","getAttribute","chart_DateLine","replace","EngineDetail","loadedClass","timer","e","onDetailClose","role","cellPadding","cellSpacing","colSpan","AddEngine","location","handleLineChange","handleNumberChange","handleLocationChange","isEngineValid","handleRemove","updateEngines","_this$state","event","target","removeEngine","_this$state2","_this$state3","htmlFor","onChange","EditEntry","idIter","isEntryValid","handleDateChange","handleTimeChange","handleDirectionChange","handleNotesChange","handleSubmit","handleCancel","showForm","hideForm","addEngine","isValid","preventDefault","order","_ref3","entryDeleted","removeEntry","findIndex","splice","errorDisplayClass","onSubmit","menu_AddEngine","EntryDetail","onResightingClick","trainline","sighting","formatDate","formatTime","matches","findMatches","detail_EditEntry","ResightingDetail","onDateClick","engineData","About","AddEntry","displayForm","reset","today","setActiveMenuItem","AddLine","lineName","lineShortName","lineColor","handleLineNameChange","handleLineShortNameChange","handleLineColorChange","_ref4","addTrainLine","toLowerCase","Contact","href","Login","user","password","handleUserChange","handlePasswordChange","logout","loginAttempt","login","Menu","activeMenuItem","menuDisplayClass","clearTimeout","onMenuClick","menu_About","menu_Contact","menu_AddEntry","menu_AddLine","menu_Login","App","receiveEntries","receiveTrainLines","detailContentType","detailData","isDetailOpen","isMenuOpen","src","logo","alt","menu_Menu","ataglance_AtAGlance","chart_Chart","detail_EntryDetail","detail_ResightingDetail","detail_EngineDetail","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","render","es","containers_App","getElementById"],"mappings":"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","file":"static/js/main.b3385c86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const SUBMIT_TRAIN_LINE = 'SUBMIT_TRAIN_LINE';\nexport const TRAIN_LINE_ADDED = 'TRAIN_LINE_ADDED';\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\nexport const REQUEST_TRAIN_LINES = 'REQUEST_LINES';\nexport const RECEIVE_TRAIN_LINES = 'RECEIVE_LINES';\nexport const SUBMIT_ENTRY = 'SUBMIT_ENTRY';\nexport const ENTRY_ADDED = 'ENTRY_ADDED';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\nexport const ENTRY_DELETED = 'ENTRY_DELETED';\nexport const SHOW_DETAIL = 'SHOW_DETAIL';\nexport const HIDE_DETAIL = 'HIDE_DETAIL';\nexport const SHOW_MENU = 'SHOW_MENU';\nexport const HIDE_MENU = 'HIDE_MENU';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n});\n\nexport const requestTrainLines = () => ({\n  type: REQUEST_TRAIN_LINES,\n});\n\nexport const receiveTrainLines = json => ({\n  type: RECEIVE_TRAIN_LINES,\n  data: json,\n});\n\nexport const submitTrainLine = () => ({\n  type: SUBMIT_TRAIN_LINE,\n});\n\nexport const trainLineAdded = json => ({\n  type: TRAIN_LINE_ADDED,\n  data: json,\n});\n\nexport const submitEntry = () => ({\n  type: SUBMIT_ENTRY,\n});\n\nexport const entryAdded = json => ({\n  type: ENTRY_ADDED,\n  data: json,\n});\n\nexport const deleteEntry = () => ({\n  type: DELETE_ENTRY,\n});\n\nexport const entryDeleted = json => ({\n  type: ENTRY_DELETED,\n  data: json,\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n\nexport const fetchTrainLines = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestTrainLines());\n  return fetch('/getLines')\n    .then(response => response.json())\n    .then(json => dispatch(receiveTrainLines(json)));\n};\n\nexport const showDetail = (data, contentType) => ({\n  type: SHOW_DETAIL,\n  data,\n  contentType,\n});\n\nexport const hideDetail = () => ({\n  type: HIDE_DETAIL,\n});\n\nexport const showMenu = () => ({\n  type: SHOW_MENU,\n});\n\nexport const hideMenu = () => ({\n  type: HIDE_MENU,\n});\n\nexport const loginAttempt = json => ({\n  type: LOG_IN,\n  data: json,\n});\n\nexport const login = ({ user, password }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/login', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      user,\n      password,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(loginAttempt(json)));\n};\n\nexport const logout = () => ({\n  type: LOG_OUT,\n});\n\nexport const addEntry = ({ date, direction, engines, id, time, notes }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitEntry());\n  return fetch('/addEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      date,\n      time,\n      direction,\n      engines,\n      id,\n      notes,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const removeEntry = ({ id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(deleteEntry());\n  return fetch('/deleteEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryDeleted(json)));\n};\n\nexport const addTrainLine = ({ lineName, lineShortName, lineColor, id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitTrainLine());\n  return fetch('/addTrainLine', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      lineName,\n      lineShortName,\n      lineColor,\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  SUBMIT_TRAIN_LINE,\n  TRAIN_LINE_ADDED,\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n  REQUEST_TRAIN_LINES,\n  RECEIVE_TRAIN_LINES,\n  SUBMIT_ENTRY,\n  ENTRY_ADDED,\n  DELETE_ENTRY,\n  ENTRY_DELETED,\n  SHOW_DETAIL,\n  HIDE_DETAIL,\n  SHOW_MENU,\n  HIDE_MENU,\n  LOG_IN,\n  LOG_OUT,\n} from '../actions';\n\n\nconst entryData = (state = {\n  isFetching: false,\n  items: [],\n  detail: {},\n  id: '',\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n    case SUBMIT_ENTRY:\n    case DELETE_ENTRY:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n    case ENTRY_ADDED:\n    case ENTRY_DELETED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst detail = (state = {\n  isOpen: false,\n  data: {},\n  contentType: '',\n}, action) => {\n  switch (action.type) {\n    case SHOW_DETAIL:\n      return {\n        ...state,\n        isOpen: true,\n        data: action.data,\n        contentType: action.contentType,\n      };\n    case HIDE_DETAIL:\n      return {\n        ...state,\n        isOpen: false,\n        data: action.data,\n        contentType: action.contentType,\n      };\n    default:\n      return state;\n  }\n};\n\nconst menu = (state = {\n  isOpen: false,\n}, action) => {\n  switch (action.type) {\n    case SHOW_MENU:\n      return {\n        ...state,\n        isOpen: true,\n      };\n    case HIDE_MENU:\n      return {\n        ...state,\n        isOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userStatus = (state = {\n  isLoggedIn: false,\n  isLoginError: false,\n  response: [{ success: 'error' }],\n}, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      if (action.data[0].success === 'success') {\n        return {\n          ...state,\n          isLoggedIn: true,\n          isLoginError: false,\n          response: action.data,\n        };\n      }\n      return {\n        ...state,\n        isLoggedIn: false,\n        isLoginError: true,\n        response: action.data,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst trainLines = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_TRAIN_LINES:\n    case SUBMIT_TRAIN_LINE:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_TRAIN_LINES:\n    case TRAIN_LINE_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryData,\n  detail,\n  menu,\n  trainLines,\n  userStatus,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DataFilter extends Component {\n  onFilterClick = () => {\n    const { label, onFilterClick } = this.props;\n    onFilterClick(label);\n  }\n\n  render() {\n    const { isActive, label } = this.props;\n    return (\n      <li key={label}>\n        <button className={isActive ? 'active' : ''} onClick={this.onFilterClick} type=\"button\">\n          <span>{label}</span>\n        </button>\n      </li>\n    );\n  }\n}\n\nDataFilter.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  onFilterClick: PropTypes.func.isRequired,\n};\n\nexport default DataFilter;\n","export function formatDate(date, months) {\n  const arr = date.split('/');\n  return `${months[arr[0] - 1]} ${arr[1]}, ${arr[2]}`;\n}\n\nexport function formatTime(time) {\n  const arr = time.split(':');\n  let ampm = 'a.m.';\n  if (time.indexOf('PM') !== -1) {\n    ampm = 'p.m.';\n  }\n  return `${arr[0]}:${arr[1]} ${ampm}`;\n}\n\nexport function formatDateForDB(date) {\n  const arr = date.split('-');\n  return `${arr[1]}/${arr[2]}/${arr[0]}`;\n}\n\nexport function formatTimeForDB(time) {\n  const timeValues = time.split(':');\n  let hours = parseInt(timeValues[0], 10);\n  let amPm = 'AM';\n  if (hours > 12) {\n    hours -= 12;\n    amPm = 'PM';\n  } else if (hours === 12) {\n    amPm = 'PM';\n  } else if (hours === 0) {\n    hours = 12;\n  }\n  return `${hours}:${timeValues[1]}:00 ${amPm}`;\n}\n\nexport function formatDateForSelect(value) {\n  let date = value.getDate().toString();\n  if (date.length === 1) {\n    date = `0${date}`;\n  }\n  let month = (value.getMonth() + 1).toString();\n  if (month.length === 1) {\n    month = `0${month}`;\n  }\n  return `${value.getFullYear()}-${month}-${date}`;\n}\n\nexport function formatTimeForSelect(value) {\n  let hours = '';\n  let mins = '';\n  if (typeof value === 'string') {\n    const arr = value.split(':');\n    const [arrHours, arrMins] = arr;\n    hours = arrHours;\n    mins = arrMins;\n  } else {\n    hours = value.getHours().toString();\n    mins = value.getMinutes().toString();\n  }\n  if (hours.length === 1) {\n    hours = `0${hours}`;\n  }\n  if (mins.length === 1) {\n    mins = `0${mins}`;\n  }\n  return `${hours}:${mins}`;\n}\n\nexport function createEntryId(date, time) {\n  const dateArr = date.split('-');\n  const timeArr = time.split(':');\n  return `${dateArr[0]}${dateArr[1]}${dateArr[2]}${timeArr[0]}${timeArr[1]}`;\n}\n\nexport function getRandomNumberKey() {\n  return `key-${Math.round(Math.random() * 1000 * Math.random() * 1000 / Math.random() * 1000 + Math.random() * 1000)}`;\n}\n","const Weekdays = [\n  {\n    full: 'Sunday',\n    short: 'S',\n    index: 0,\n  },\n  {\n    full: 'Monday',\n    short: 'M',\n    index: 1,\n  },\n  {\n    full: 'Tuesday',\n    short: 'T',\n    index: 2,\n  },\n  {\n    full: 'Wednesday',\n    short: 'W',\n    index: 3,\n  },\n  {\n    full: 'Thursday',\n    short: 'T',\n    index: 4,\n  },\n  {\n    full: 'Friday',\n    short: 'F',\n    index: 5,\n  },\n  {\n    full: 'Saturday',\n    short: 'S',\n    index: 6,\n  },\n];\n\nexport default Weekdays;\n","/* eslint-disable no-console */\nfunction addMonths(date, months) {\n  const d = date.getDate();\n  date.setMonth(date.getMonth() + months);\n  if (date.getDate() !== d) {\n    date.setDate(0);\n  }\n  return date;\n}\n\nfunction getRoundedEndDate(startDate, now) {\n  let endDate = addMonths(now, 1);\n  let months = (endDate.getFullYear() - startDate.getFullYear()) * 12;\n  months -= startDate.getMonth();\n  months += endDate.getMonth() + 2;\n  if (months % 2 !== 0) {\n    endDate = addMonths(now, 1);\n  }\n  return new Date(`${endDate.getMonth() + 1}/1/${endDate.getFullYear()}`);\n}\n\nfunction getMonthsByInterval(startDate, now) {\n  // Get number of months between then and now\n  let months = (now.getFullYear() - startDate.getFullYear()) * 12;\n  months -= startDate.getMonth();\n  months += now.getMonth() + 1;\n  const arr = [];\n  let i = 0;\n  let date = startDate;\n  do {\n    arr.push(`${date.getMonth() + 1}/${date.getFullYear().toString().substr(2)}`);\n    date = addMonths(date, 2);\n    i += 1;\n  }\n  while (i <= months / 2);\n  return arr;\n}\n\nfunction getDaysBetweenDates(date1, date2) {\n  return Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\n}\n\nfunction getDatePositionInRange(date, startDate, now) {\n  return ((date - startDate) / (now - startDate));\n}\n\nfunction convertTimeToMinutesElapsed(time) {\n  const timeVals = time.split(':');\n  let mins = parseInt(timeVals[1], 10);\n  if (timeVals[2].indexOf('PM') !== -1 && timeVals[0] !== '12') {\n    mins += (parseInt(timeVals[0], 10) + 12) * 60;\n  } else {\n    mins += parseInt(timeVals[0], 10) * 60;\n  }\n  return mins;\n}\n\nfunction getTimeFromPercentage(perc) {\n  const totalMins = Math.ceil(14.4 * parseFloat(perc, 10));\n  let hrs = Math.floor(totalMins / 60);\n  if (hrs > 12) {\n    hrs -= 12;\n  }\n  let mins = totalMins % 60;\n  if (mins < 10) {\n    mins = `0${mins}`;\n  }\n  const ampm = totalMins >= 720 ? 'PM' : 'AM';\n  return `${hrs}:${mins} ${ampm}`;\n}\n\nexport {\n  convertTimeToMinutesElapsed,\n  getRoundedEndDate,\n  getMonthsByInterval,\n  getDaysBetweenDates,\n  getDatePositionInRange,\n  getTimeFromPercentage,\n};\n/* eslint-enable no-console */\n","/* eslint-disable no-console, arrow-body-style */\nimport { createSelector } from 'reselect';\nimport weekdays from '../utils/Weekdays';\nimport { convertTimeToMinutesElapsed } from '../utils/DateUtils';\n\n\nconst getEntryData = state => state.entryData.items;\nconst getTrainlines = state => state.trainLines.items;\n\nconst groupAllEntriesByDayAndTime = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    // Build list of all engines with entry keys, dates, colors\n    const groups = [];\n    entryData.map(entry => entry.engines.map(engine => groups.push({\n      line: engine.line,\n      number: engine.number,\n      date: entry.date,\n      day: new Date(entry.date).getDay(),\n      time: entry.time,\n      percentTime: `${Math.round(convertTimeToMinutesElapsed(entry.time) / 14.4)}%`,\n      color: trainLines.find(line => engine.line === line.name).color,\n      id: entry._id, /* eslint-disable-line no-underscore-dangle */\n    })));\n    return groups\n      .reduce((acc, current) => {\n        const match = acc.find(entry => entry.day === current.day && entry.percentTime === current.percentTime);\n        // If match is false, then return accumulator w/ match addeed\n        if (!match) {\n          return acc.concat([current]);\n        }\n        // If exists, then just return accumulator as is\n        return acc;\n      }, [])\n      .map(groupItem => ({\n        ...groupItem,\n        values: groups\n          .filter(entry => entry.day === groupItem.day && entry.percentTime === groupItem.percentTime)\n          // Add number of engines w/ same line to property in each group item\n          .map(entry => ({\n            ...entry,\n            occurance: `${groups.filter(g => entry.day === g.day && entry.percentTime === g.percentTime && g.line === entry.line).length / groups.filter(g => entry.day === g.day && entry.percentTime === g.percentTime).length * 100}%`,\n          }))\n          // Remove duplicate lines\n          .reduce((acc, current) => {\n            const match = acc.find(entry => entry.line === current.line);\n            // If match is false, then return accumulator w/ match addeed\n            if (!match) {\n              return acc.concat([current]);\n            }\n            // If exists, then just return accumulator as is\n            return acc;\n          }, [])\n          // Sort alphabetically\n          .sort((a, b) => a.line.localeCompare(b.line))\n          .map(({\n            day,\n            date,\n            id,\n            line,\n            number,\n            percentTime,\n            time,\n            ...arr\n          }) => arr),\n        // All engines from this percentTime period\n        engines: groups\n          .filter(entry => entry.day === groupItem.day && entry.percentTime === groupItem.percentTime)\n          .sort((a, b) => a.time.localeCompare(b.time)),\n      }))\n      // Remove unneeded props\n      .map(({\n        color,\n        date,\n        id,\n        line,\n        number,\n        occurance,\n        time,\n        ...arr\n      }) => arr);\n  },\n);\n\nconst getResightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    // Build list of all engines with entry keys, dates, colors\n    const allEntryEngines = [];\n    entryData.forEach(entry => entry.engines.forEach(engine => allEntryEngines.push({\n      engine: `${trainLines.find(line => engine.line === line.name).short}, ${engine.number}`,\n      line: engine.line,\n      number: engine.number,\n      entryId: entry._id, /* eslint-disable-line no-underscore-dangle */\n      date: entry.date,\n      color: trainLines.find(line => engine.line === line.name).color,\n    })));\n    // Find all engines seen more than once\n    const duplicates = new Set();\n    const resightings = allEntryEngines\n      .filter(entry => duplicates.size === duplicates.add(entry.engine).size)\n      // But there can be more than 2 matches... so now need to remove duplicates\n      .reduce((acc, current) => {\n        const match = acc.find(entry => entry.engine === current.engine);\n        // If match is false, then return accumulator w/ match added\n        if (!match) {\n          return acc.concat([current]);\n        }\n        // If exists, then just return accumulator as is\n        return acc;\n      }, [])\n      .map((match) => {\n        // Find all sighting dates\n        const dates = allEntryEngines\n          .filter(entry => match.engine === entry.engine)\n          .map(entry => ({ date: entry.date, entryId: entry.entryId }))\n          .sort((a, b) => new Date(a.date) - new Date(b.date));\n        return {\n          engine: match.engine,\n          line: match.line,\n          number: match.number,\n          dates,\n          entryId: match.entryId,\n          color: match.color,\n        };\n      })\n      .sort((a, b) => new Date(a.dates[0].date) - new Date(b.dates[0].date));\n    return resightings;\n  },\n);\n\nconst getLineWithMostSightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    return trainLines\n      .map(line => ({\n        name: line.name,\n        value: entryData.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name).length), 0),\n      }))\n      .sort((a, b) => b.value - a.value)[0];\n  },\n);\n\nconst getLinesByDayOfWeek = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    return trainLines\n      .map(line => ({\n        name: line.name,\n        days: weekdays\n          .map(day => ({\n            full: day.full,\n            short: day.short,\n            index: day.index,\n            value: entryData.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name && new Date(b.date).getDay() === day.index).length), 0),\n          })),\n      }));\n  },\n);\n\nconst getInitialSightingMonthStart = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData) => {\n    const dates = [...entryData].sort((a, b) => new Date(a.date) - new Date(b.date));\n    // Get 1st day of the start month\n    const initial = new Date(dates[0].date);\n    // return initial;\n    return `${initial.getMonth() + 1}/1/${initial.getFullYear()}`;\n  },\n);\n\nconst getInitialSightingDate = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData) => {\n    const dates = [...entryData].sort((a, b) => new Date(a.date) - new Date(b.date));\n    // Get 1st day of the start month\n    const initial = new Date(dates[0].date);\n    // return initial;\n    return `${initial.getMonth() + 1}/${initial.getDate()}/${initial.getFullYear()}`;\n  },\n);\n\nexport {\n  getInitialSightingDate,\n  getInitialSightingMonthStart,\n  getLinesByDayOfWeek,\n  getLineWithMostSightings,\n  getResightings,\n  groupAllEntriesByDayAndTime,\n};\n/* eslint-enable no-console, arrow-body-style */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { getInitialSightingDate, getLineWithMostSightings } from '../../../selectors';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRef = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.tableRef.current.classList.remove('initial-state');\n    }, 100);\n  }\n\n  getEngineCountByLine(line) {\n    const { entries } = this.props;\n    return entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line).length), 0);\n  }\n\n  render() {\n    const { entries, initialSightingDate, lineWithMostSightings, trainLineList } = this.props;\n    // Get line w/ max number of entries, round to nearest 100\n    // Divide by 10 (start at 0)\n    const maxEngineCt = Math.ceil(lineWithMostSightings.value / 100) * 100;\n    const xAxisInterval = maxEngineCt / 10;\n    const dataSet = [0];\n    let ct = 0;\n    do {\n      ct += xAxisInterval;\n      dataSet.push(ct);\n    }\n    while (ct < maxEngineCt);\n    return (\n      <div className=\"data-table engine-values-table initial-state\" ref={this.tableRef}>\n        <div className=\"table-title\">\n          <h3>\n            { entries.reduce((a, b) => (a + b.engines.length), 0) }\n            &nbsp;diesel engines have been observed since&nbsp;\n            { initialSightingDate }\n          </h3>\n        </div>\n        <div className=\"y-axis\">\n          {\n            trainLineList.map((trainLine) => {\n              const bgStyle = {\n                backgroundColor: trainLine.color,\n                transform: `scaleX(${this.getEngineCountByLine(trainLine.name) / maxEngineCt})`,\n              };\n              return (\n                <div className=\"y-axis-row\" key={trainLine.id}>\n                  <div className=\"row-label\">{trainLine.name}</div>\n                  <div className=\"row-axis\" />\n                  <div className=\"value-display\" style={bgStyle} />\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  initialSightingDate: PropTypes.string.isRequired,\n  lineWithMostSightings: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.number,\n  }),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, trainLines } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const initialSightingDate = getInitialSightingDate(state);\n  const lineWithMostSightings = getLineWithMostSightings(state);\n  return {\n    entries,\n    initialSightingDate,\n    lineWithMostSightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDaysBetweenDates } from '../../../utils/DateUtils';\nimport { getLineWithMostSightings, getResightings } from '../../../selectors';\n\nclass OveviewValues extends Component {\n  getDirectionPercentage() {\n    const { entries } = this.props;\n    const north = entries.filter(entry => entry.direction === 'north');\n    const perc = Math.round(north.length / entries.length * 100);\n    return `${Number.isNaN(perc) ? '...' : perc}%`;\n  }\n\n  getLineWithMostSightings() {\n    const { entries, trainLineList } = this.props;\n    return trainLineList\n      .map(line => ({\n        name: line.name,\n        value: entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name).length), 0),\n      }))\n      .sort((a, b) => b.value - a.value)[0];\n  }\n\n  getDistinctResightings() {\n    const { resightings } = this.props;\n    // Need to create a second array because there are more resightings,\n    // than items in the resightings array (one engine can have more than\n    // one resighting...\n    const arr = [];\n    resightings\n      // It's actually fine, prob somewhat inefficient, if we're looking\n      // for the duration of the last item in the array and itself... it'll just be 0\n      .map(item => item.dates.reduce((a, b, c, array) => arr.push({ engine: item.engine, time: getDaysBetweenDates(new Date(b.date), new Date(array[Math.min(c + 1, array.length - 1)].date)) }), 0));\n    // Filter out all the 0's here\n    return arr.filter(item => item.time !== 0);\n  }\n\n  render() {\n    const { trainLineList, entries, lineWithMostSightings, resightings } = this.props;\n    const distinctResightings = this.getDistinctResightings();\n    let mostSightingsByLine = lineWithMostSightings;\n    if (!mostSightingsByLine) {\n      mostSightingsByLine = {\n        name: '',\n        value: '...',\n      };\n    }\n    let avgResightingDays = Math.round(distinctResightings.reduce((a, b) => (a + b.time), 0) / distinctResightings.length);\n    if (Number.isNaN(avgResightingDays)) {\n      avgResightingDays = 0;\n    }\n    let minResightingDays = distinctResightings.reduce((a, b) => Math.min(a, b.time), Infinity);\n    if (minResightingDays === Infinity) {\n      minResightingDays = 0;\n    }\n    let mostSightingsByEngine = [...resightings].sort((a, b) => b.dates.length - a.dates.length)[0];\n    let sightingEngine = {\n      line: '',\n      number: '',\n    };\n    let sightingCt = 0;\n    if (mostSightingsByEngine) {\n      sightingEngine = mostSightingsByEngine.engine;\n      sightingCt = mostSightingsByEngine.dates.length;\n      mostSightingsByEngine = entries.find(entry => entry._id === mostSightingsByEngine.entryId); /* eslint-disable-line no-underscore-dangle */\n      sightingEngine = mostSightingsByEngine.engines.find(engine => sightingEngine.indexOf(engine.number) !== -1);\n    }\n\n    return (\n      <div className=\"data-table\">\n        <div className=\"table-title\">\n          <h3>Overview of findings based on observational train data</h3>\n        </div>\n        <div className=\"table-values-grid\">\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ trainLineList.length }</div>\n            <div className=\"body-copy\">Different Freight Lines Observed</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.length }</div>\n            <div className=\"body-copy\">Number of Trains Observed</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.reduce((a, b) => (a + b.engines.length), 0) }</div>\n            <div className=\"body-copy\">Number of Diesel Engines</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ mostSightingsByLine.value }</div>\n            <div className=\"body-copy\">\n              { mostSightingsByLine.name }\n              &nbsp;is Observed Most Often\n            </div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ this.getDirectionPercentage() }</div>\n            <div className=\"body-copy\">Percentage of Trains Headed North</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ resightings.reduce((a, b) => a + b.dates.length - 1, 0) }</div>\n            <div className=\"body-copy\">Number of Engine Resightings*</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ avgResightingDays }</div>\n            <div className=\"body-copy\">Average Number of Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ minResightingDays }</div>\n            <div className=\"body-copy\">Fewest Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ distinctResightings.reduce((a, b) => Math.max(a, b.time), 0) }</div>\n            <div className=\"body-copy\">Most Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ sightingCt }</div>\n            <div className=\"body-copy\">\n              {sightingEngine.line}\n              &nbsp;\n              {sightingEngine.number}\n              &nbsp;Has the Most Resightings\n            </div>\n          </div>\n        </div>\n        <div className=\"table-notes\">\n          <p className=\"body-xsmall\">*Resightings are the engines I&rsquo;ve observed on multiple occasions. It&rsquo;s entirely possible, more so likely, that these and others have passed back and forth at off hours. Some other observations:</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nOveviewValues.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  lineWithMostSightings: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.number,\n  }),\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const resightings = getResightings(state);\n  const lineWithMostSightings = getLineWithMostSightings(state);\n  return {\n    entries,\n    lineWithMostSightings,\n    resightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(OveviewValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDatePositionInRange, getMonthsByInterval, getRoundedEndDate } from '../../../utils/DateUtils';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { showDetail } from '../../../actions';\nimport { getResightings, getInitialSightingDate, getInitialSightingMonthStart } from '../../../selectors';\n\nclass ResightingValues extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRef = React.createRef();\n    this.yAxis = null;\n    this.scrollIndicatorRef = React.createRef();\n    this.handleScroll = this.handleScroll.bind(this);\n    this.onEntryClick = this.onEntryClick.bind(this);\n    this.scrollIndicatorTimer = null;\n  }\n\n  componentDidMount() {\n    this.scrollIndicatorTimer = setTimeout(() => {\n      this.scrollIndicatorRef.current.classList.add('hidden');\n      this.yAxis.removeEventListener('scroll', this.handleScroll);\n    }, 3000);\n    this.yAxis = this.tableRef.current.querySelector('.y-axis');\n    this.yAxis.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n    clearInterval(this.scrollIndicatorTimer);\n  }\n\n  onEntryClick(entry) {\n    const { dispatch } = this.props;\n    dispatch(showDetail({ line: entry.line, number: entry.number, engines: entry.dates }, 'resighting'));\n  }\n\n  handleScroll() {\n    this.scrollIndicatorRef.current.classList.add('hidden');\n    this.yAxis.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const { initialSightingDate, initialSightingMonthStart, resightings } = this.props;\n    const endDate = getRoundedEndDate(new Date(initialSightingMonthStart), new Date());\n    const dataSet = getMonthsByInterval(new Date(initialSightingMonthStart), endDate);\n    let prevLeft = '';\n    return (\n      <div className=\"data-table resightings-values-table\" ref={this.tableRef}>\n        <div className=\"table-title\">\n          <h3>\n            { resightings.reduce((a, b) => a + b.dates.length - 1, 0) }\n            &nbsp;repeated sightings of&nbsp;\n            { resightings.length }\n            &nbsp;engines since&nbsp;\n            { initialSightingDate }\n          </h3>\n        </div>\n        <div className=\"y-axis\">\n          {\n            resightings.map((entry) => {\n              prevLeft = '';\n              return (\n                <div className=\"y-axis-row\" key={getRandomNumberKey()}>\n                  <div className=\"row-label\">{entry.engine}</div>\n                  <div className=\"row-axis\">\n                    {\n                      entry.dates.map((date) => {\n                        const left = `${getDatePositionInRange(new Date(date.date), new Date(initialSightingMonthStart), endDate) * 100}%`;\n                        const bgStyle = {\n                          backgroundColor: entry.color,\n                          left,\n                        };\n                        const lineStyle = {\n                          backgroundColor: entry.color,\n                          left: prevLeft,\n                          width: `calc(${left} - ${prevLeft})`,\n                        };\n                        prevLeft = left;\n                        return (\n                          <div key={getRandomNumberKey()}>\n                            <button\n                              className=\"sighting-marker\"\n                              onClick={() => this.onEntryClick(entry)}\n                              style={bgStyle}\n                              type=\"button\"\n                            >\n                              <span>{entry.engine.substr(entry.engine.indexOf(',') + 2)}</span>\n                            </button>\n                            {(prevLeft !== '')\n                              && (\n                                <div\n                                  className=\"sighting-connector\"\n                                  style={lineStyle}\n                                />\n                              )\n                            }\n                          </div>\n                        );\n                      })\n                    }\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"scroll-indicator-icon\" ref={this.scrollIndicatorRef}>\n          <div />\n        </div>\n      </div>\n    );\n  }\n}\n\nResightingValues.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  initialSightingDate: PropTypes.string.isRequired,\n  initialSightingMonthStart: PropTypes.string.isRequired,\n  resightings: PropTypes.arrayOf(PropTypes.object),\n};\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const resightings = getResightings(state);\n  const initialSightingDate = getInitialSightingDate(state);\n  const initialSightingMonthStart = getInitialSightingMonthStart(state);\n  return {\n    initialSightingDate,\n    initialSightingMonthStart,\n    resightings,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResightingValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport weekdays from '../../../utils/Weekdays';\nimport { getTimeFromPercentage } from '../../../utils/DateUtils';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { showDetail } from '../../../actions';\nimport { groupAllEntriesByDayAndTime } from '../../../selectors';\n\nclass ScheduleValues extends Component {\n  constructor(props) {\n    super(props);\n    this.onEntryClick = this.onEntryClick.bind(this);\n  }\n\n  onEntryClick(entry) {\n    const { dispatch } = this.props;\n    dispatch(showDetail({\n      day: weekdays.find(day => day.index === entry.day).full,\n      startTime: getTimeFromPercentage(`${parseInt(entry.percentTime, 10) - 0.5}%`),\n      endTime: getTimeFromPercentage(`${parseInt(entry.percentTime, 10) + 0.5}%`),\n      engines: entry.engines,\n    }, 'engine'));\n  }\n\n  render() {\n    const { dataSet, entries } = this.props;\n    return (\n      <div className=\"data-table schedule-values-table\">\n        <div className=\"table-title\">\n          <h3>Times during the week when the various freight train lines have been observed</h3>\n        </div>\n        <div className=\"y-axis\">\n          {\n            weekdays.map(day => (\n              <div className=\"y-axis-row\" key={day.index}>\n                <div className=\"row-label\">{day.full}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"scatterplot\">\n          {\n            entries.map((entry) => {\n              const groupStyle = {\n                left: entry.percentTime,\n                top: `${40 * entry.day}px`,\n              };\n              return (\n                <button\n                  className=\"line-group\"\n                  onClick={() => this.onEntryClick(entry)}\n                  key={getRandomNumberKey()}\n                  style={groupStyle}\n                  type=\"button\"\n                >\n                  {\n                    entry.values.map((line) => {\n                      const itemStyle = {\n                        backgroundColor: line.color,\n                        height: line.occurance,\n                      };\n                      return (\n                        <div\n                          className=\"line-group-item\"\n                          key={getRandomNumberKey()}\n                          style={itemStyle}\n                        />\n                      );\n                    })\n                  }\n                </button>\n              );\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nScheduleValues.defaultProps = {\n  dataSet: ['12 AM', '2 AM', '4AM', '6 AM', '8 AM', ' 10 AM', '12 PM', '2 PM', '4 PM', '6 PM', '8 PM', '10 PM', '12 AM'],\n};\n\nScheduleValues.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n  entries: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const entries = groupAllEntriesByDayAndTime(state);\n  return {\n    entries,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DataFilter from './DataFilter';\nimport EngineValues from './datasets/EngineValues';\nimport OverviewValues from './datasets/OverviewValues';\nimport ResightingValues from './datasets/ResightingValues';\nimport ScheduleValues from './datasets/ScheduleValues';\n\nclass AtAGlance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSet: {\n        label: '',\n        values: [],\n      },\n    };\n    this.handleDataSetChange = this.handleDataSetChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { dataSets } = this.props;\n    this.setState({\n      activeSet: dataSets[0],\n    });\n  }\n\n  handleDataSetChange(value) {\n    const { dataSets } = this.props;\n    const dataSet = dataSets.find(item => item.label === value);\n    this.setState({ activeSet: dataSet });\n  }\n\n  render() {\n    const { dataSets } = this.props;\n    const { activeSet } = this.state;\n    return (\n      <div className=\"at-a-glance\">\n        <div className=\"page-heading-divider\">\n          <h2 className=\"heading-lg\">At A Glance</h2>\n        </div>\n        <div className=\"aggregate-data-visualization-module\">\n          <div className=\"module-inner\">\n            <div className=\"data-filters\">\n              <ul className=\"data-filters-inner\">\n                {\n                  dataSets.map(item => (\n                    <DataFilter\n                      isActive={item.label === activeSet.label}\n                      key={item.label}\n                      label={item.label}\n                      onFilterClick={this.handleDataSetChange}\n                    />\n                  ))\n                }\n              </ul>\n            </div>\n            <div className=\"data-visualization\">\n              {activeSet.label === 'Overview'\n                && (\n                  <OverviewValues />\n                )\n              }\n              {activeSet.label === 'Resightings'\n                && (\n                  <ResightingValues />\n                )\n              }\n              {activeSet.label === 'Engines'\n                && (\n                  <EngineValues />\n                )\n              }\n              {activeSet.label === 'Schedule'\n                && (\n                  <ScheduleValues />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAtAGlance.defaultProps = {\n  dataSets: [\n    {\n      label: 'Overview',\n    },\n    {\n      label: 'Resightings',\n    },\n    {\n      label: 'Engines',\n    },\n    {\n      label: 'Schedule',\n    },\n  ],\n};\n\nAtAGlance.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default AtAGlance;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.onEntryClick = this.onEntryClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1) {\n      if (entry.time.indexOf('12:') === -1 || entry.time.indexOf('12:') > 0) {\n        arr[0] = parseInt(arr[0], 10) + 12;\n      }\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') === 0) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  onEntryClick() {\n    const { entry, dispatch } = this.props;\n    dispatch(showDetail(entry, 'entry')); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  render() {\n    const { entry } = this.props;\n    return (\n      <button\n        className=\"engine-manifest\"\n        ref={this.divRef}\n        type=\"button\"\n        onClick={this.onEntryClick}\n      >\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n        <span className=\"engine-details-button\">...</span>\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => { /* eslint-disable-line arrow-body-style */\n  return bindActionCreators(\n    {\n      showDetail,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapDispatchToProps)(Entry);\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date, entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","const Months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default Months;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\nimport months from '../../utils/Months';\n\nclass DateLine extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  render() {\n    const {\n      activeMonth,\n      date,\n      entries,\n      isMonthLabel,\n    } = this.props;\n    const month = months[date.split('/')[0] - 1];\n    const year = date.split('/')[2];\n\n    return (\n      <div className=\"date-line\" ref={this.divRef}>\n        {isMonthLabel\n          && (\n            <div className={`month-display ${`${month}-${year}` === activeMonth ? 'sticky' : ''}`} data-month={`${month}-${year}`}>\n              <span>{`${month} ${year}`}</span>\n            </div>\n          )\n        }\n        <div className=\"date-display\">\n          <span>{date.split('/')[1]}</span>\n        </div>\n        <EntriesForDate\n          date={date}\n          entries={entries}\n        />\n      </div>\n    );\n  }\n}\n\nDateLine.propTypes = {\n  activeMonth: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isMonthLabel: PropTypes.bool.isRequired,\n};\n\nexport default DateLine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DateLine from './DateLine';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMonth: '',\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n    this.currentMonth = -1;\n    this.chartWrapperRef = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    let month = '';\n    [].map.call(document.querySelectorAll('.month-display'), (item) => {\n      if (item.parentNode.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        // Should set the active month to whatever the last item less than scrollTop is...\n        month = item.getAttribute('data-month');\n      }\n    });\n    this.setState({ activeMonth: month });\n    //\n    if (this.chartWrapperRef !== null) {\n      if (this.chartWrapperRef.current.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        this.chartWrapperRef.current.classList.add('sticky');\n      } else {\n        this.chartWrapperRef.current.classList.remove('sticky');\n      }\n    }\n  }\n\n  render() {\n    const { entries } = this.props;\n    const { activeMonth } = this.state;\n    const dates = [...new Set(entries.map(entry => entry.date))];\n    let isMonthLabel = false;\n\n    return (\n      <div className=\"train-chart-wrapper\" ref={this.chartWrapperRef}>\n        <div className=\"page-heading-divider fixed-page-heading-divider\">\n          <h2 className=\"heading-lg\">Sightings</h2>\n        </div>\n        <div className=\"train-chart\">\n          <div className=\"x-axis-header clearfix\">\n            <div className=\"page-heading-divider\">\n              <h2 className=\"heading-lg\">Sightings</h2>\n            </div>\n            <ul>\n              <li><span>12 AM</span></li>\n              <li><span>2 AM</span></li>\n              <li><span>4 AM</span></li>\n              <li><span>6 AM</span></li>\n              <li><span>8 AM</span></li>\n              <li><span>10 AM</span></li>\n              <li><span>12 PM</span></li>\n              <li><span>2 PM</span></li>\n              <li><span>4 PM</span></li>\n              <li><span>6 PM</span></li>\n              <li><span>8 PM</span></li>\n              <li><span>10 PM</span></li>\n            </ul>\n          </div>\n          <div className=\"time-table\">\n            <div className=\"month-bar\" />\n            {\n              dates.map((date) => {\n                if (this.currentMonth !== date.split('/')[0]) {\n                  this.currentMonth = date.split('/')[0]; /* eslint-disable-line prefer-destructuring */\n                  isMonthLabel = true;\n                } else {\n                  isMonthLabel = false;\n                }\n                return (\n                  <DateLine\n                    activeMonth={activeMonth}\n                    key={date.replace(/\\//, '')}\n                    date={date}\n                    entries={entries}\n                    isMonthLabel={isMonthLabel}\n                  />\n                );\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\nimport { getRandomNumberKey } from '../../utils/Formatting';\n\nclass EngineDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n    this.onEntryClick = this.onEntryClick.bind(this);\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  onEntryClick(id) {\n    const { dispatch, entries } = this.props;\n    dispatch(showDetail(entries.find(e => e._id === id), 'entry')); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  render() {\n    const { onDetailClose, data } = this.props;\n    const { loadedClass } = this.state;\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"header-title\">Engine Sightings</span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">{`${data.day}s`}</div>\n              <div className=\"detail-subhead\">{`${data.startTime}\\u2014${data.endTime}`}</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Time</th>\n                    <th>Date</th>\n                    <th>Line</th>\n                    <th>No.</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"row-spacer\">\n                    <td colSpan=\"4\" />\n                  </tr>\n                  {\n                    data.engines.map(engine => (\n                      <tr className=\"clickable-data-row\" key={getRandomNumberKey()} onClick={() => this.onEntryClick(engine.id)}>\n                        <td><span>{engine.time.replace(':00 ', ' ')}</span></td>\n                        <td><span>{engine.date}</span></td>\n                        <td><span>{engine.line}</span></td>\n                        <td><span>{engine.number}</span></td>\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </table>\n            </div>\n            <div className=\"detail-subhead\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  return {\n    entries,\n  };\n};\n\nEngineDetail.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape(),\n  entries: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EngineDetail);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      line: '',\n      location: '',\n      number: '',\n    };\n    this.handleLineChange = this.handleLineChange.bind(this);\n    this.handleNumberChange = this.handleNumberChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.isEngineValid = this.isEngineValid.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    const { line, location, number } = props;\n    this.setState({\n      line,\n      location,\n      number,\n    });\n  }\n\n  componentDidUpdate() {\n    const { id, updateEngines } = this.props;\n    const { line, location, number } = this.state;\n    updateEngines(id, this.isEngineValid(), line, location, number);\n  }\n\n  handleLineChange(event) {\n    this.setState({ line: event.target.value });\n  }\n\n  handleNumberChange(event) {\n    this.setState({ number: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleRemove() {\n    const { id, removeEngine } = this.props;\n    removeEngine(id);\n  }\n\n  isEngineValid() {\n    const { line, location, number } = this.state;\n    if (line === '' || location === '' || number === '') {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const { line, location, number } = this.state;\n    return (\n      <div className=\"flex-row add-engine-row\">\n        <label className=\"form-label form-select-label form-label-line\" htmlFor=\"line\">\n          <span>Line</span>\n          <select className=\"form-select\" id=\"line\" name=\"line\" value={line} onChange={this.handleLineChange}>\n            <option value=\"\">Select</option>\n            {\n              trainLineList.map(trainLine => (\n                <option value={trainLine.name} key={trainLine.id}>{trainLine.short}</option>\n              ))\n            }\n          </select>\n        </label>\n        <label className=\"form-label form-label-number\" htmlFor=\"number\">\n          <span>Number</span>\n          <input className=\"form-input\" id=\"number\" name=\"number\" type=\"number\" value={number} onChange={this.handleNumberChange} />\n        </label>\n        <label className=\"form-label form-select-label form-label-location\" htmlFor=\"location\">\n          <span>Location</span>\n          <select className=\"form-select\" id=\"location\" name=\"location\" value={location} onChange={this.handleLocationChange}>\n            <option value=\"\">Select</option>\n            <option value=\"front\">Front</option>\n            <option value=\"middle\">Middle</option>\n            <option value=\"end\">End</option>\n          </select>\n        </label>\n        <button className=\"remove-button\" type=\"button\" onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n\nAddEngine.propTypes = {\n  id: PropTypes.string.isRequired,\n  line: PropTypes.string,\n  location: PropTypes.string,\n  number: PropTypes.string,\n  removeEngine: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  updateEngines: PropTypes.func.isRequired,\n};\n\nexport default AddEngine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from '../menu/AddEngine';\nimport { addEntry, removeEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass EditEntry extends Component {\n  constructor(props) {\n    super(props);\n    const { entryData } = this.props;\n    // Map id property to engine objects\n    entryData.engines = entryData.engines.map((engine, index) => ({ ...engine, id: `engine-no-${index}` }));\n    // State defaults\n    this.state = {\n      date: formatDateForSelect(new Date(entryData.date)),\n      direction: entryData.direction,\n      engines: entryData.engines,\n      idIter: entryData.engines.length,\n      isActive: false,\n      isEntryValid: true,\n      notes: entryData.notes,\n      time: formatTimeForSelect(entryData.time),\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.showForm = this.showForm.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      this.hideForm();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel() {\n    this.hideForm();\n  }\n\n  handleRemove() {\n    const { dispatch, entryData } = this.props;\n    this.hideForm();\n    dispatch(removeEntry({\n      id: entryData._id, /* eslint-disable-line no-underscore-dangle */\n    }));\n  }\n\n  showForm() {\n    this.setState({ isActive: true });\n  }\n\n  hideForm() {\n    this.setState({ isActive: false });\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const {\n      date,\n      direction,\n      engines,\n      isActive,\n      isEntryValid,\n      notes,\n      time,\n    } = this.state;\n\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div className=\"form-wrapper\">\n        {\n          isActive\n            ? (\n              <button className=\"edit-entry-button\" onClick={this.hideForm} type=\"button\">\n                <div>\n                  <span className=\"text-button\">Close Edit</span>\n                </div>\n              </button>\n            ) : (\n              <button className=\"edit-entry-button\" onClick={this.showForm} type=\"button\">\n                <div>\n                  <span className=\"text-button\">Edit Entry</span>\n                </div>\n              </button>\n            )\n        }\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button\" type=\"submit\">Update Entry</button>\n            <button className=\"urgent-button\" type=\"button\" onClick={this.handleRemove}>Remove Entry</button>\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error updating the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nEditEntry.propTypes = {\n  dispatch: PropTypes.func,\n  entryData: PropTypes.shape({\n    date: PropTypes.string,\n    direction: PropTypes.string,\n    engines: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.string,\n    notes: PropTypes.string,\n    number: PropTypes.number,\n    time: PropTypes.string,\n    _id: PropTypes.string,\n  }),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EditEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport EditEntry from './EditEntry';\nimport months from '../../utils/Months';\nimport { showDetail } from '../../actions';\nimport { formatDate, formatTime } from '../../utils/Formatting';\nimport { getResightings } from '../../selectors';\n\nclass EntryDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n    this.onResightingClick = this.onResightingClick.bind(this);\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  onResightingClick(line, number, engines) {\n    const { dispatch } = this.props;\n    dispatch(showDetail({ line, number, engines }, 'resighting'));\n  }\n\n  findMatches(trainline, number) {\n    const { resightings, trainLineList } = this.props;\n    const engine = `${trainLineList.find(line => trainline === line.name).short}, ${number}`;\n    const sighting = resightings.find(entry => entry.engine === engine);\n    if (sighting) {\n      return sighting.dates;\n    }\n    return null;\n  }\n\n  render() {\n    const { onDetailClose, data, isLoggedIn } = this.props;\n    const { loadedClass } = this.state;\n\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"header-title\">\n                Entry No.&nbsp;\n                {data.number}\n              </span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">\n                {`${data.engines.length} engine train observed on ${formatDate(data.date, months)} at ${formatTime(data.time)} heading ${data.direction}.`}\n              </div>\n              <div className=\"detail-subhead\">Engines</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Ord.</th>\n                    <th>Line</th>\n                    <th>No.</th>\n                    <th>Loc.</th>\n                    <th>Sightings</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"row-spacer\">\n                    <td colSpan=\"5\" />\n                  </tr>\n                  {\n                    data.engines.map((engine) => {\n                      const bgStyle = {\n                        backgroundColor: engine.color,\n                      };\n                      const matches = this.findMatches(engine.line, engine.number);\n                      return (\n                        <tr key={engine.number}>\n                          <td><span className=\"engine-color-indicator\" style={bgStyle}>{engine.order}</span></td>\n                          <td><span>{engine.line}</span></td>\n                          <td><span>{engine.number}</span></td>\n                          <td><span>{engine.location}</span></td>\n                          <td>\n                            {matches\n                              ? <button className=\"engine-details-button\" type=\"button\" onClick={() => this.onResightingClick(engine.line, engine.number, matches)}>{`${matches.length}`}</button>\n                              : <span>1</span>\n                            }\n                          </td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n              <div className=\"detail-subhead\">Notes</div>\n              <p className=\"detail-notes\">{data.notes}</p>\n            </div>\n          </div>\n          {isLoggedIn\n            && (\n              <EditEntry\n                entryData={data}\n              />\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nEntryDetail.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired,\n  }),\n  isLoggedIn: PropTypes.bool.isRequired,\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const { trainLines, userStatus } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  const resightings = getResightings(state);\n  return {\n    isLoggedIn,\n    resightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EntryDetail);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\nimport { getRandomNumberKey } from '../../utils/Formatting';\n\nclass ResightingDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n    this.onDateClick = this.onDateClick.bind(this);\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  onDateClick(id) {\n    const { dispatch, entries } = this.props;\n    dispatch(showDetail(entries.find(e => e._id === id), 'entry')); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  render() {\n    const { onDetailClose, data, entries } = this.props;\n    const { loadedClass } = this.state;\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"header-title\">Engine</span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">{`${data.line} ${data.number}`}</div>\n              <div className=\"detail-subhead\">Sightings</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Time</th>\n                    <th>Dir.</th>\n                    <th>Pos.</th>\n                    <th>Loc.</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr className=\"row-spacer\">\n                    <td colSpan=\"5\" />\n                  </tr>\n                  {\n                    data.engines.map((engine) => {\n                      const entry = entries.find(e => e._id === engine.entryId); /* eslint-disable-line no-underscore-dangle */\n                      const engineData = entry.engines.find(e => e.line === data.line && e.number === data.number);\n                      return (\n                        <tr className=\"clickable-data-row\" key={getRandomNumberKey()} onClick={() => this.onDateClick(engine.entryId)}>\n                          <td><span>{engine.date}</span></td>\n                          <td><span>{entry.time.replace(':00 ', ' ')}</span></td>\n                          <td><span>{entry.direction}</span></td>\n                          <td><span>{`${engineData.order}/${entry.engines.length}`}</span></td>\n                          <td><span>{engineData.location}</span></td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n            </div>\n            <div className=\"detail-subhead\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  return {\n    entries,\n  };\n};\n\nResightingDetail.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    line: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  entries: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResightingDetail);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst About = () => (\n  <div>\n    <div className=\"menu-nav-item\">About the Project</div>\n    <p>\n      The Milwaukee District North tracks sit just beyond the alley in my backyard.\n       During off-peak hours, freight trains are cleared to run along this stretch of the Metra corridor.\n       They rumble past my home office window at seemingly random intervals while I work and attempt to apply structure to this new phase of my career.\n    </p>\n    <p>\n      This project also brought me up to speed with React/Redux and was developed using the MERN stack.\n    </p>\n  </div>\n);\n\nexport default About;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from './AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n      }],\n      notes: '',\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-entry');\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { isActive, trainLineList } = this.props;\n    const { date, direction, engines, isEntryValid, notes, time } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add an Entry</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddEntry.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(AddEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTrainLine } from '../../actions';\n\nclass AddLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n      isEntryValid: true,\n    };\n    this.handleLineNameChange = this.handleLineNameChange.bind(this);\n    this.handleLineShortNameChange = this.handleLineShortNameChange.bind(this);\n    this.handleLineColorChange = this.handleLineColorChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleLineNameChange(event) {\n    this.setState({ lineName: event.target.value });\n  }\n\n  handleLineShortNameChange(event) {\n    this.setState({ lineShortName: event.target.value });\n  }\n\n  handleLineColorChange(event) {\n    this.setState({ lineColor: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n    } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    if (lineName === '') {\n      isValid = false;\n    }\n    if (isValid) {\n      dispatch(addTrainLine({\n        lineName,\n        lineShortName,\n        lineColor,\n        id: lineName.toLowerCase().replace(/\\s/, '-'),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    this.setState({\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-line');\n  }\n\n  render() {\n    const { isActive } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n      isEntryValid,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add a Train Line</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-line-name\" htmlFor=\"lineName\">\n            <span>Name</span>\n            <input className=\"form-input\" id=\"lineName\" name=\"lineName\" type=\"text\" value={lineName} onChange={this.handleLineNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-short-name\" htmlFor=\"lineShortName\">\n            <span>Short Name</span>\n            <input className=\"form-input\" id=\"lineShortName\" name=\"lineShortName\" type=\"text\" value={lineShortName} onChange={this.handleLineShortNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-color\" htmlFor=\"lineColor\">\n            <span>Color</span>\n            <input className=\"form-input\" id=\"lineColor\" name=\"lineColor\" type=\"text\" value={lineColor} onChange={this.handleLineColorChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Line</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddLine.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nexport default connect()(AddLine);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst Contact = () => (\n  <div>\n    <div className=\"menu-nav-item\">Contact</div>\n    <p>\n      jef.a.mayer(at)gmail.com\n      <br />\n      <a className=\"inline-link\" href=\"https://jefmayer.com\">jefmayer.com</a>\n    </p>\n  </div>\n);\n\nexport default Contact;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../actions';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleUserChange(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { user, password } = this.state;\n    event.preventDefault();\n    dispatch(login({ user, password })); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('login');\n  }\n\n  logout() {\n    const { dispatch, setActiveMenuItem } = this.props;\n    setActiveMenuItem('');\n    // Clear inputs\n    dispatch(logout());\n  }\n\n  render() {\n    const { isActive, isLoggedIn, isLoginError } = this.props;\n    const { user, password } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (isLoginError) {\n      errorDisplayClass = '';\n    }\n    return (\n      !isLoggedIn\n        ? (\n          <div>\n            <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Login</button>\n            <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n              <label className=\"form-label\" htmlFor=\"user\">\n                <span>Name</span>\n                <input className=\"form-input\" id=\"user\" name=\"user\" type=\"text\" value={user} onChange={this.handleUserChange} />\n              </label>\n              <label className=\"form-label\" htmlFor=\"password\">\n                <span>Password</span>\n                <input className=\"form-input\" id=\"password\" name=\"password\" type=\"password\" value={password} onChange={this.handlePasswordChange} />\n              </label>\n              <input className=\"submit-button\" type=\"submit\" value=\"Login\" />\n              <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n            </form>\n          </div>\n        ) : (\n          <button className=\"menu-nav-item menu-nav-button\" type=\"button\" onClick={this.logout}>Logout</button>\n        )\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isLoginError: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n    isLoginError,\n  } = userStatus;\n  return {\n    isLoggedIn,\n    isLoginError,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport About from './About';\nimport AddEntry from './AddEntry';\nimport AddLine from './AddLine';\nimport Contact from './Contact';\nimport Login from './Login';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMenuItem: '',\n    };\n    this.divRef = React.createRef();\n    this.setActiveMenuItem = this.setActiveMenuItem.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { menuDisplayClass } = this.props;\n    if (menuDisplayClass === 'closed') {\n      const timer = setTimeout(() => {\n        this.divRef.current.setAttribute('style', 'position:absolute;');\n        clearTimeout(timer);\n      }, 150);\n    } else {\n      this.divRef.current.setAttribute('style', 'position:fixed;');\n    }\n  }\n\n  setActiveMenuItem(name) {\n    this.setState({ activeMenuItem: name });\n  }\n\n  render() {\n    const { activeMenuItem } = this.state;\n    const { isLoggedIn, menuDisplayClass, onMenuClick } = this.props;\n    return (\n      <div className={`menu-container ${menuDisplayClass}`} ref={this.divRef}>\n        <button className=\"menu-button\" onClick={onMenuClick} type=\"button\">\n          <span className=\"menu-icon\">\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n          </span>\n        </button>\n        <div className=\"menu-nav\">\n          <div className=\"menu-nav-inner\">\n            <About />\n            <Contact />\n            {isLoggedIn\n              && (\n                <div>\n                  <AddEntry\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-entry'}\n                  />\n                  <AddLine\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-line'}\n                  />\n                </div>\n              )\n            }\n            <Login\n              setActiveMenuItem={this.setActiveMenuItem}\n              isActive={activeMenuItem === 'login'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMenu.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  menuDisplayClass: PropTypes.string.isRequired,\n  onMenuClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  return {\n    isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(Menu);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries, fetchTrainLines, hideDetail, hideMenu, showMenu } from '../actions';\nimport AtAGlance from '../components/ataglance/AtAGlance';\nimport Chart from '../components/chart/Chart';\nimport EngineDetail from '../components/detail/EngineDetail';\nimport EntryDetail from '../components/detail/EntryDetail';\nimport ResightingDetail from '../components/detail/ResightingDetail';\nimport Menu from '../components/menu/Menu';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n    dispatch(fetchTrainLines());\n  }\n\n  render() {\n    const { detailContentType, detailData, dispatch, entries, isDetailOpen, isMenuOpen } = this.props;\n\n    function onDetailClose() {\n      dispatch(hideDetail());\n    }\n\n    function onMenuClick() {\n      if (!isMenuOpen) {\n        dispatch(showMenu());\n      } else {\n        dispatch(hideMenu());\n      }\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <div className=\"logo-wrapper\">\n            <img src={logo} className=\"logo-graphic\" alt=\"Trainspotted Logo\" />\n            <div className=\"logo-type\">Trainspotted</div>\n          </div>\n          <Menu\n            menuDisplayClass={isMenuOpen ? 'open' : 'closed'}\n            onMenuClick={onMenuClick}\n          />\n        </header>\n        <AtAGlance />\n        <Chart\n          entries={entries}\n        />\n        {isDetailOpen && detailContentType === 'entry'\n          && (\n            <EntryDetail\n              onDetailClose={onDetailClose}\n              data={detailData}\n            />\n          )\n        }\n        {isDetailOpen && detailContentType === 'resighting'\n          && (\n            <ResightingDetail\n              onDetailClose={onDetailClose}\n              data={detailData}\n            />\n          )\n        }\n        {isDetailOpen && detailContentType === 'engine'\n          && (\n            <EngineDetail\n              onDetailClose={onDetailClose}\n              data={detailData}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  detailContentType: PropTypes.string,\n  detailData: PropTypes.shape(),\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  isDetailOpen: PropTypes.bool,\n  isMenuOpen: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, detail, menu } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    contentType: detailContentType,\n    data: detailData,\n    isOpen: isDetailOpen,\n  } = detail;\n  const {\n    isOpen: isMenuOpen,\n  } = menu;\n  return {\n    detailData,\n    detailContentType,\n    entries,\n    isDetailOpen,\n    isMenuOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}