{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/ataglance/DataFilter.jsx","js/utils/Formatting.js","js/utils/Weekdays.js","js/selectors/index.js","js/components/ataglance/datasets/EngineValues.jsx","js/utils/DateUtils.js","js/components/ataglance/datasets/OverviewValues.jsx","js/components/ataglance/datasets/ResightingValues.jsx","js/components/ataglance/datasets/TimeValues.jsx","js/components/ataglance/datasets/WeekdayValues.jsx","js/components/ataglance/AtAGlance.jsx","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/utils/Months.js","js/components/chart/DateLine.jsx","js/components/chart/Chart.jsx","js/components/menu/AddEngine.jsx","js/components/detail/EditEntry.jsx","js/components/detail/Detail.jsx","js/components/menu/About.jsx","js/components/menu/AddEntry.jsx","js/components/menu/AddLine.jsx","js/components/menu/Contact.jsx","js/components/menu/Login.jsx","js/components/menu/Menu.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","entryAdded","json","type","data","showDetail","id","hideDetail","showMenu","hideMenu","addEntry","_ref2","date","direction","engines","time","notes","dispatch","fetch","method","headers","Headers","Accept","Content-Type","body","JSON","stringify","then","response","rootReducer","combineReducers","entryData","state","arguments","length","undefined","isFetching","items","action","Object","objectSpread","entryDetail","isOpen","menu","trainLines","userStatus","isLoggedIn","isLoginError","success","DataFilter","onFilterClick","_this$props","_this","props","label","_this$props2","this","isActive","react_default","a","createElement","key","className","onClick","Component","formatDateForDB","arr","split","concat","formatTimeForDB","timeValues","hours","parseInt","amPm","formatDateForSelect","value","getDate","toString","month","getMonth","getFullYear","formatTimeForSelect","getHours","mins","getMinutes","createEntryId","dateArr","timeArr","getRandomNumberKey","Math","round","random","Weekdays","full","short","index","getEntryData","getTrainlines","getResightings","createSelector","allEntryEngines","forEach","entry","engine","push","find","line","name","number","entryId","_id","color","duplicates","Set","filter","size","add","reduce","acc","current","map","match","dates","sort","b","Date","getLineWithMostSightings","getLinesByDayOfWeek","days","weekdays","day","getDay","EngineValues","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tableRef","React","createRef","_this2","setTimeout","classList","remove","entries","_this3","lineWithMostSightings","trainLineList","maxEngineCt","ceil","xAxisInterval","dataSet","ct","ref","trainLine","bgStyle","backgroundColor","transform","getEngineCountByLine","style","item","connect","addMonths","months","d","setMonth","setDate","OveviewValues","north","perc","Number","isNaN","resightings","c","array","date1","date2","min","distinctResightings","getDistinctResightings","sightingLeader","avgResightingDays","minResightingDays","Infinity","getDirectionPercentage","max","ResightingValues","initialSightingDate","getInitialSightingDate","yAxis","scrollIndicatorRef","handleScroll","bind","assertThisInitialized","scrollIndicatorTimer","removeEventListener","querySelector","addEventListener","window","clearInterval","slice","initial","endDate","startDate","now","getRoundedEndDate","console","log","i","substr","getMonthsByInterval","prevLeft","isPrevLeft","onEntryClick","left","getDatePositionInRange","lineStyle","width","onKeyDown","indexOf","bindActionCreators","TimeValues","defaultProps","linesByDayOfWeek","lineWeek","maxDiscSize","height","AtAGlance","activeSet","values","handleDataSetChange","dataSets","setState","ataglance_DataFilter","OverviewValues","datasets_ResightingValues","datasets_EngineValues","WeekdayValues","datasets_TimeValues","Entry","divRef","pct","toFixed","setAttribute","EntriesForDate","entryHeight","chart_Entry","Months","DateLine","activeMonth","isMonthLabel","year","data-month","chart_EntriesForDate","Chart","currentMonth","chartRef","scrollTop","pageYOffset","document","documentElement","querySelectorAll","parentNode","getBoundingClientRect","top","getAttribute","toConsumableArray","chart_DateLine","replace","AddEngine","location","handleLineChange","handleNumberChange","handleLocationChange","isEngineValid","handleRemove","updateEngines","_this$state","event","target","removeEngine","_this$state2","_this$state3","htmlFor","onChange","EditEntry","isValid","idIter","isEntryValid","handleDateChange","handleTimeChange","handleDirectionChange","handleNotesChange","handleSubmit","handleCancel","displayForm","addEngine","reset","today","preventDefault","order","findIndex","splice","errorDisplayClass","onSubmit","menu_AddEngine","Detail","loadedClass","timer","trainline","sighting","onDetailClose","role","formatDate","ampm","formatTime","cellPadding","cellSpacing","findMatches","detail_EditEntry","About","AddEntry","setActiveMenuItem","AddLine","lineName","lineShortName","lineColor","handleLineNameChange","handleLineShortNameChange","handleLineColorChange","_ref3","addTrainLine","toLowerCase","Contact","href","Login","user","password","handleUserChange","handlePasswordChange","logout","_ref","loginAttempt","login","Menu","activeMenuItem","menuDisplayClass","clearTimeout","onMenuClick","menu_About","menu_Contact","menu_AddEntry","menu_AddLine","menu_Login","App","receiveEntries","receiveTrainLines","detailId","isDetailOpen","isMenuOpen","src","logo","alt","menu_Menu","ataglance_AtAGlance","chart_Chart","detail_Detail","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","render","es","containers_App","getElementById"],"mappings":"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","file":"static/js/main.0ec17d79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const SUBMIT_TRAIN_LINE = 'SUBMIT_TRAIN_LINE';\nexport const TRAIN_LINE_ADDED = 'TRAIN_LINE_ADDED';\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\nexport const REQUEST_TRAIN_LINES = 'REQUEST_LINES';\nexport const RECEIVE_TRAIN_LINES = 'RECEIVE_LINES';\nexport const SUBMIT_ENTRY = 'SUBMIT_ENTRY';\nexport const ENTRY_ADDED = 'ENTRY_ADDED';\nexport const SHOW_DETAIL = 'SHOW_DETAIL';\nexport const HIDE_DETAIL = 'HIDE_DETAIL';\nexport const SHOW_MENU = 'SHOW_MENU';\nexport const HIDE_MENU = 'HIDE_MENU';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n});\n\nexport const requestTrainLines = () => ({\n  type: REQUEST_TRAIN_LINES,\n});\n\nexport const receiveTrainLines = json => ({\n  type: RECEIVE_TRAIN_LINES,\n  data: json,\n});\n\nexport const submitTrainLine = () => ({\n  type: SUBMIT_TRAIN_LINE,\n});\n\nexport const trainLineAdded = json => ({\n  type: TRAIN_LINE_ADDED,\n  data: json,\n});\n\nexport const submitEntry = () => ({\n  type: SUBMIT_ENTRY,\n});\n\nexport const entryAdded = json => ({\n  type: ENTRY_ADDED,\n  data: json,\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n\nexport const fetchTrainLines = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestTrainLines());\n  return fetch('/getLines')\n    .then(response => response.json())\n    .then(json => dispatch(receiveTrainLines(json)));\n};\n\nexport const showDetail = id => ({\n  type: SHOW_DETAIL,\n  data: id,\n});\n\nexport const hideDetail = () => ({\n  type: HIDE_DETAIL,\n});\n\nexport const showMenu = () => ({\n  type: SHOW_MENU,\n});\n\nexport const hideMenu = () => ({\n  type: HIDE_MENU,\n});\n\nexport const loginAttempt = json => ({\n  type: LOG_IN,\n  data: json,\n});\n\nexport const login = ({ user, password }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/login', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      user,\n      password,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(loginAttempt(json)));\n};\n\nexport const addEntry = ({ date, direction, engines, id, time, notes }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitEntry());\n  return fetch('/addEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      date,\n      time,\n      direction,\n      engines,\n      id,\n      notes,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const addTrainLine = ({ lineName, lineShortName, lineColor, id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitTrainLine());\n  return fetch('/addTrainLine', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      lineName,\n      lineShortName,\n      lineColor,\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const logout = () => ({\n  type: LOG_OUT,\n});\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  SUBMIT_TRAIN_LINE,\n  TRAIN_LINE_ADDED,\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n  REQUEST_TRAIN_LINES,\n  RECEIVE_TRAIN_LINES,\n  SUBMIT_ENTRY,\n  ENTRY_ADDED,\n  SHOW_DETAIL,\n  HIDE_DETAIL,\n  SHOW_MENU,\n  HIDE_MENU,\n  LOG_IN,\n  LOG_OUT,\n} from '../actions';\n\n\nconst entryData = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n    case SUBMIT_ENTRY:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n    case ENTRY_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst entryDetail = (state = {\n  isOpen: false,\n  id: '',\n}, action) => {\n  switch (action.type) {\n    case SHOW_DETAIL:\n      return {\n        ...state,\n        isOpen: true,\n        id: action.data,\n      };\n    case HIDE_DETAIL:\n      return {\n        ...state,\n        isOpen: false,\n        id: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst menu = (state = {\n  isOpen: false,\n}, action) => {\n  switch (action.type) {\n    case SHOW_MENU:\n      return {\n        ...state,\n        isOpen: true,\n      };\n    case HIDE_MENU:\n      return {\n        ...state,\n        isOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userStatus = (state = {\n  isLoggedIn: false,\n  isLoginError: false,\n  response: [{ success: 'error' }],\n}, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      if (action.data[0].success === 'success') {\n        return {\n          ...state,\n          isLoggedIn: true,\n          isLoginError: false,\n          response: action.data,\n        };\n      }\n      return {\n        ...state,\n        isLoggedIn: false,\n        isLoginError: true,\n        response: action.data,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst trainLines = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_TRAIN_LINES:\n    case SUBMIT_TRAIN_LINE:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_TRAIN_LINES:\n    case TRAIN_LINE_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryData,\n  entryDetail,\n  menu,\n  trainLines,\n  userStatus,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DataFilter extends Component {\n  onFilterClick = () => {\n    const { label, onFilterClick } = this.props;\n    onFilterClick(label);\n  }\n\n  render() {\n    const { isActive, label } = this.props;\n    return (\n      <li key={label}>\n        <button className={isActive ? 'active' : ''} onClick={this.onFilterClick} type=\"button\">\n          <span>{label}</span>\n        </button>\n      </li>\n    );\n  }\n}\n\nDataFilter.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  onFilterClick: PropTypes.func.isRequired,\n};\n\nexport default DataFilter;\n","export function formatDate(date, months) {\n  const arr = date.split('/');\n  return `${months[arr[0] - 1]} ${arr[1]}, ${arr[2]}`;\n}\n\nexport function formatTime(time) {\n  const arr = time.split(':');\n  let ampm = 'a.m.';\n  if (time.indexOf('PM') !== -1) {\n    ampm = 'p.m.';\n  }\n  return `${arr[0]}:${arr[1]} ${ampm}`;\n}\n\nexport function formatDateForDB(date) {\n  const arr = date.split('-');\n  return `${arr[1]}/${arr[2]}/${arr[0]}`;\n}\n\nexport function formatTimeForDB(time) {\n  const timeValues = time.split(':');\n  let hours = parseInt(timeValues[0], 10);\n  let amPm = 'AM';\n  if (hours > 12) {\n    hours -= 12;\n    amPm = 'PM';\n  } else if (hours === 12) {\n    amPm = 'PM';\n  } else if (hours === 0) {\n    hours = 12;\n  }\n  return `${hours}:${timeValues[1]}:00 ${amPm}`;\n}\n\nexport function formatDateForSelect(value) {\n  let date = value.getDate().toString();\n  if (date.length === 1) {\n    date = `0${date}`;\n  }\n  let month = (value.getMonth() + 1).toString();\n  if (month.length === 1) {\n    month = `0${month}`;\n  }\n  return `${value.getFullYear()}-${month}-${date}`;\n}\n\nexport function formatTimeForSelect(value) {\n  let hours = value.getHours().toString();\n  if (hours.length === 1) {\n    hours = `0${hours}`;\n  }\n  let mins = value.getMinutes().toString();\n  if (mins.length === 1) {\n    mins = `0${mins}`;\n  }\n  return `${hours}:${mins}`;\n}\n\nexport function createEntryId(date, time) {\n  const dateArr = date.split('-');\n  const timeArr = time.split(':');\n  return `${dateArr[0]}${dateArr[1]}${dateArr[2]}${timeArr[0]}${timeArr[1]}`;\n}\n\nexport function getRandomNumberKey() {\n  return `key-${Math.round(Math.random() * 1000 * Math.random() * 1000 / Math.random() * 1000 + Math.random() * 1000)}`;\n}\n","const Weekdays = [\n  {\n    full: 'Sunday',\n    short: 'S',\n    index: 0,\n  },\n  {\n    full: 'Monday',\n    short: 'M',\n    index: 1,\n  },\n  {\n    full: 'Tuesday',\n    short: 'T',\n    index: 2,\n  },\n  {\n    full: 'Wednesday',\n    short: 'W',\n    index: 3,\n  },\n  {\n    full: 'Thursday',\n    short: 'T',\n    index: 4,\n  },\n  {\n    full: 'Friday',\n    short: 'F',\n    index: 5,\n  },\n  {\n    full: 'Saturday',\n    short: 'S',\n    index: 6,\n  },\n];\n\nexport default Weekdays;\n","/* eslint-disable no-console, arrow-body-style */\nimport { createSelector } from 'reselect';\nimport weekdays from '../utils/Weekdays';\n\nconst getEntryData = state => state.entryData.items;\nconst getTrainlines = state => state.trainLines.items;\n\nconst getResightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    // Build list of all engines with entry keys, dates, colors\n    const allEntryEngines = [];\n    entryData.forEach(entry => entry.engines.forEach(engine => allEntryEngines.push({\n      engine: `${trainLines.find(line => engine.line === line.name).short}, ${engine.number}`,\n      entryId: entry._id, /* eslint-disable-line no-underscore-dangle */\n      date: entry.date,\n      color: trainLines.find(line => engine.line === line.name).color,\n    })));\n    // Find all engines seen more than once\n    const duplicates = new Set();\n    const resightings = allEntryEngines\n      .filter(entry => duplicates.size === duplicates.add(entry.engine).size)\n      // But there can be more than 2 matches... so now need to remove duplicates\n      .reduce((acc, current) => {\n        const match = acc.find(entry => entry.engine === current.engine);\n        // If match is false, then return accumulator w/ match addee\n        if (!match) {\n          return acc.concat([current]);\n        }\n        // If exists, then just return accumulator as is\n        return acc;\n      }, [])\n      .map((match) => {\n        // Find all sighting dates\n        const dates = allEntryEngines\n          .filter(entry => match.engine === entry.engine)\n          .map(entry => ({ date: entry.date, entryId: entry.entryId }))\n          .sort((a, b) => new Date(a.date) - new Date(b.date));\n        return {\n          engine: match.engine,\n          dates,\n          entryId: match.entryId,\n          color: match.color,\n        };\n      })\n      .sort((a, b) => new Date(a.dates[0].date) - new Date(b.dates[0].date));\n    return resightings;\n  },\n);\n\nconst getLineWithMostSightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    return trainLines\n      .map(line => ({\n        name: line.name,\n        value: entryData.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name).length), 0),\n      }))\n      .sort((a, b) => b.value - a.value)[0];\n  },\n);\n\nconst getLinesByDayOfWeek = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    return trainLines\n      .map(line => ({\n        name: line.name,\n        days: weekdays\n          .map(day => ({\n            full: day.full,\n            short: day.short,\n            index: day.index,\n            value: entryData.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name && new Date(b.date).getDay() === day.index).length), 0),\n          })),\n      }));\n  },\n);\n\nexport {\n  getLinesByDayOfWeek,\n  getLineWithMostSightings,\n  getResightings,\n};\n/* eslint-enable no-console, arrow-body-style */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { getLineWithMostSightings } from '../../../selectors';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRef = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.tableRef.current.classList.remove('initial-state');\n    }, 100);\n  }\n\n  getEngineCountByLine(line) {\n    const { entries } = this.props;\n    return entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line).length), 0);\n  }\n\n  render() {\n    const { lineWithMostSightings, trainLineList } = this.props;\n    // Get line w/ max number of entries, round to nearest 100\n    // Divide by 10 (start at 0)\n    const maxEngineCt = Math.ceil(lineWithMostSightings.value / 100) * 100;\n    const xAxisInterval = maxEngineCt / 10;\n    const dataSet = [0];\n    let ct = 0;\n    do {\n      ct += xAxisInterval;\n      dataSet.push(ct);\n    }\n    while (ct <= maxEngineCt);\n    return (\n      <div className=\"data-table engine-values-table initial-state\" ref={this.tableRef}>\n        <div className=\"y-axis\">\n          {\n            trainLineList.map((trainLine) => {\n              const bgStyle = {\n                backgroundColor: trainLine.color,\n                transform: `scaleX(${this.getEngineCountByLine(trainLine.name) / maxEngineCt})`,\n              };\n              return (\n                <div className=\"y-axis-row\" key={trainLine.id}>\n                  <div className=\"row-label\">{trainLine.name}</div>\n                  <div className=\"row-axis\" />\n                  <div className=\"value-display\" style={bgStyle} />\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  lineWithMostSightings: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.number,\n  }),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, trainLines } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const lineWithMostSightings = getLineWithMostSightings(state);\n  return {\n    entries,\n    lineWithMostSightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nfunction addMonths(date, months) {\n  const d = date.getDate();\n  date.setMonth(date.getMonth() + months);\n  if (date.getDate() !== d) {\n    date.setDate(0);\n  }\n  return date;\n}\n\nfunction getRoundedEndDate(startDate, now) {\n  let months = (now.getFullYear() - startDate.getFullYear()) * 12;\n  months -= startDate.getMonth();\n  months += now.getMonth() + 2;\n  let endDate = now;\n  if (months % 2 !== 0) {\n    endDate = addMonths(now, 1);\n  }\n  return new Date(`${endDate.getMonth() + 1}/1/${endDate.getFullYear()}`);\n}\n\nfunction getMonthsByInterval(startDate, now) {\n  // Get number of months between then and now\n  let months = (now.getFullYear() - startDate.getFullYear()) * 12;\n  months -= startDate.getMonth();\n  months += now.getMonth() + 1;\n  console.log(months);\n  const arr = [];\n  let i = 0;\n  let date = startDate;\n  do {\n    arr.push(`${date.getMonth() + 1}/${date.getFullYear().toString().substr(2)}`);\n    date = addMonths(date, 2);\n    i += 1;\n  }\n  while (i <= months / 2);\n  return arr;\n}\n\nfunction getDaysBetweenDates(date1, date2) {\n  return Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\n}\n\nfunction getDatePositionInRange(date, startDate, now) {\n  return ((date - startDate) / (now - startDate));\n}\n\nexport {\n  getRoundedEndDate,\n  getMonthsByInterval,\n  getDaysBetweenDates,\n  getDatePositionInRange,\n};\n/* eslint-enable no-console */\n","/* eslint-disable no-console, no-useless-constructor */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDaysBetweenDates } from '../../../utils/DateUtils';\nimport { getLineWithMostSightings, getResightings } from '../../../selectors';\n\nclass OveviewValues extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getDirectionPercentage() {\n    const { entries } = this.props;\n    const north = entries.filter(entry => entry.direction === 'north');\n    const perc = Math.round(north.length / entries.length * 100);\n    return `${Number.isNaN(perc) ? '...' : perc}%`;\n  }\n\n  getLineWithMostSightings() {\n    const { entries, trainLineList } = this.props;\n    return trainLineList\n      .map(line => ({\n        name: line.name,\n        value: entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name).length), 0),\n      }))\n      .sort((a, b) => b.value - a.value)[0];\n  }\n\n  getDistinctResightings() {\n    const { resightings } = this.props;\n    // Need to create a second array because there are more resightings,\n    // than items in the resightings array (one engine can have more than\n    // one resighting...\n    const arr = [];\n    resightings\n      // It's actually fine, prob somewhat inefficient, if we're looking\n      // for the duration of the last item in the array and itself... it'll just be 0\n      .map(item => item.dates.reduce((a, b, c, array) => arr.push({ engine: item.engine, time: getDaysBetweenDates(new Date(b.date), new Date(array[Math.min(c + 1, array.length - 1)].date)) }), 0));\n    // Filter out all the 0's here\n    return arr.filter(item => item.time !== 0);\n  }\n\n  render() {\n    const { trainLineList, entries, lineWithMostSightings } = this.props;\n    const distinctResightings = this.getDistinctResightings();\n    let sightingLeader = lineWithMostSightings;\n    if (!sightingLeader) {\n      sightingLeader = {\n        name: '',\n        value: '...',\n      };\n    }\n    let avgResightingDays = Math.round(distinctResightings.reduce((a, b) => (a + b.time), 0) / distinctResightings.length);\n    if (Number.isNaN(avgResightingDays)) {\n      avgResightingDays = 0;\n    }\n    let minResightingDays = distinctResightings.reduce((a, b) => Math.min(a, b.time), Infinity);\n    if (minResightingDays === Infinity) {\n      minResightingDays = 0;\n    }\n    return (\n      <div className=\"data-table\">\n        <div className=\"table-values-grid\">\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ trainLineList.length }</div>\n            <div className=\"body-copy\">Different Freight Lines Observed</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.length }</div>\n            <div className=\"body-copy\">Number of Trains Observed</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.reduce((a, b) => (a + b.engines.length), 0) }</div>\n            <div className=\"body-copy\">Number of Diesel Engines</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ sightingLeader.value }</div>\n            <div className=\"body-copy\">\n              { sightingLeader.name }\n              &nbsp;is Observed Most Often\n            </div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ this.getDirectionPercentage() }</div>\n            <div className=\"body-copy\">Percentage of Trains Headed North</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ distinctResightings.length }</div>\n            <div className=\"body-copy\">Number of Resightings*</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ avgResightingDays }</div>\n            <div className=\"body-copy\">Average Number of Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ minResightingDays }</div>\n            <div className=\"body-copy\">Fewest Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ distinctResightings.reduce((a, b) => Math.max(a, b.time), 0) }</div>\n            <div className=\"body-copy\">Most Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">...</div>\n            <div className=\"body-copy\">Diesel Engine Number With the Most Resightings</div>\n          </div>\n        </div>\n        <div className=\"table-notes\">\n          <p className=\"body-xsmall\">*Resightings are the engines I&rsquo;ve observed on multiple occasions. It&rsquo;s entirely possible, more so likely, that these and others have passed back and forth at off hours. Some other observations:</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nOveviewValues.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  lineWithMostSightings: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.number,\n  }),\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const resightings = getResightings(state);\n  const lineWithMostSightings = getLineWithMostSightings(state);\n  return {\n    entries,\n    lineWithMostSightings,\n    resightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(OveviewValues);\n/* eslint-enable no-console, no-useless-constructor */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDatePositionInRange, getMonthsByInterval, getRoundedEndDate } from '../../../utils/DateUtils';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { showDetail } from '../../../actions';\nimport { getResightings } from '../../../selectors';\n\nclass ResightingValues extends Component {\n  constructor(props) {\n    super(props);\n    this.initialSightingDate = this.getInitialSightingDate();\n    this.tableRef = React.createRef();\n    this.yAxis = null;\n    this.scrollIndicatorRef = React.createRef();\n    this.handleScroll = this.handleScroll.bind(this);\n    this.scrollIndicatorTimer = null;\n  }\n\n  componentDidMount() {\n    this.scrollIndicatorTimer = setTimeout(() => {\n      this.scrollIndicatorRef.current.classList.add('hidden');\n      this.yAxis.removeEventListener('scroll', this.handleScroll);\n    }, 6000);\n    this.yAxis = this.tableRef.current.querySelector('.y-axis');\n    this.yAxis.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n    clearInterval(this.scrollIndicatorTimer);\n  }\n\n  getInitialSightingDate() {\n    const { entries } = this.props;\n    const dates = entries.slice().sort((a, b) => new Date(a.date) - new Date(b.date));\n    // Get 1st day of the start month\n    const initial = new Date(dates[0].date);\n    // return initial;\n    return `${initial.getMonth() + 1}/1/${initial.getFullYear()}`;\n  }\n\n  handleScroll() {\n    this.scrollIndicatorRef.current.classList.add('hidden');\n    this.yAxis.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const { dispatch, resightings } = this.props;\n    const endDate = getRoundedEndDate(new Date(this.initialSightingDate), new Date());\n    const dataSet = getMonthsByInterval(new Date(this.initialSightingDate), endDate);\n    let prevLeft = '';\n    let isPrevLeft = false;\n\n    return (\n      <div className=\"data-table resightings-values-table\" ref={this.tableRef}>\n        <div className=\"y-axis\">\n          {\n            resightings.map((entry) => {\n              prevLeft = '';\n              isPrevLeft = false;\n\n              return (\n                <div className=\"y-axis-row\" key={getRandomNumberKey()}>\n                  <div className=\"row-label\">{entry.engine}</div>\n                  <div className=\"row-axis\">\n                    {\n                      entry.dates.map((date) => {\n                        function onEntryClick() {\n                          dispatch(showDetail(date.entryId));\n                        }\n                        const left = `${getDatePositionInRange(new Date(date.date), new Date(this.initialSightingDate), endDate) * 100}%`;\n                        const bgStyle = {\n                          backgroundColor: entry.color,\n                          left,\n                        };\n                        const lineStyle = {\n                          backgroundColor: entry.color,\n                          left: prevLeft,\n                          width: `calc(${left} - ${prevLeft})`,\n                        };\n                        if (prevLeft !== '') {\n                          isPrevLeft = true;\n                        }\n                        prevLeft = left;\n                        return (\n                          <div key={getRandomNumberKey()}>\n                            <button\n                              className=\"sighting-marker\"\n                              onClick={onEntryClick}\n                              onKeyDown={onEntryClick}\n                              style={bgStyle}\n                              type=\"button\"\n                            >\n                              <span>{entry.engine.substr(entry.engine.indexOf(',') + 2)}</span>\n                            </button>\n                            {isPrevLeft\n                              && (\n                                <div\n                                  className=\"sighting-connector\"\n                                  style={lineStyle}\n                                />\n                              )\n                            }\n                          </div>\n                        );\n                      })\n                    }\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"scroll-indicator-icon\" ref={this.scrollIndicatorRef}>\n          <div />\n        </div>\n      </div>\n    );\n  }\n}\n\nResightingValues.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  resightings: PropTypes.arrayOf(PropTypes.object),\n};\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const resightings = getResightings(state);\n  return {\n    entries,\n    resightings,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResightingValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console, no-useless-constructor, react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass TimeValues extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { dataSet, trainLineList } = this.props;\n    return (\n      <div className=\"data-table time-values-table\">\n        <div className=\"y-axis\">\n          {\n            trainLineList.map(trainLine => (\n              <div className=\"y-axis-row\" key={trainLine.id}>\n                <div className=\"row-label\">{trainLine.name}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={`${item}-${Math.round(Math.random() * 1000)}`}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTimeValues.defaultProps = {\n  dataSet: ['12 AM', '2 AM', '4AM', '6 AM', '8 AM', ' 10 AM', '12 PM', '2 PM', '4 PM', '6 PM', '8 PM', '10 PM'],\n};\n\nTimeValues.propTypes = {\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(TimeValues);\n/* eslint-enable no-console, no-useless-constructor, react/prefer-stateless-function */\n","/* eslint-disable no-console, no-useless-constructor, react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport weekdays from '../../../utils/Weekdays';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { getLinesByDayOfWeek } from '../../../selectors';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { trainLineList, linesByDayOfWeek } = this.props;\n    return (\n      <div className=\"data-table weekday-values-table\">\n        <div className=\"y-axis\">\n          {\n            trainLineList.map((trainLine) => {\n              const lineWeek = linesByDayOfWeek.find(line => line.name === trainLine.name).days;\n              const maxDiscSize = lineWeek.reduce((a, b) => Math.max(a, b.value), 0);\n              console.log(maxDiscSize);\n              return (\n                <div className=\"y-axis-row\" key={trainLine.id}>\n                  <div className=\"row-label\">{trainLine.name}</div>\n                  <div className=\"row-axis\">\n                    {\n                      lineWeek.map((day) => {\n                        const bgStyle = {\n                          backgroundColor: trainLine.color,\n                          height: `${Math.round(day.value / maxDiscSize * maxDiscSize)}px`,\n                          left: `${Math.round(day.index / 6 * 100)}%`,\n                          width: `${Math.round(day.value / maxDiscSize * maxDiscSize)}px`,\n                        };\n                        return (\n                          <div className=\"value-density-disc\" style={bgStyle} key={getRandomNumberKey()} />\n                        );\n                      })\n                    }\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                weekdays.map(item => (\n                  <li key={`${item.short}-${Math.round(Math.random() * 1000)}`}>{item.short}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.propTypes = {\n  linesByDayOfWeek: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const linesByDayOfWeek = getLinesByDayOfWeek(state);\n  return {\n    linesByDayOfWeek,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console, no-useless-constructor, react/prefer-stateless-function */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DataFilter from './DataFilter';\nimport EngineValues from './datasets/EngineValues';\nimport OverviewValues from './datasets/OverviewValues';\nimport ResightingValues from './datasets/ResightingValues';\nimport TimeValues from './datasets/TimeValues';\nimport WeekdayValues from './datasets/WeekdayValues';\n\nclass AtAGlance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSet: {\n        label: '',\n        values: [],\n      },\n    };\n    this.handleDataSetChange = this.handleDataSetChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { dataSets } = this.props;\n    this.setState({\n      activeSet: dataSets[0],\n    });\n  }\n\n  handleDataSetChange(value) {\n    const { dataSets } = this.props;\n    const dataSet = dataSets.find(item => item.label === value);\n    this.setState({ activeSet: dataSet });\n  }\n\n  render() {\n    const { dataSets } = this.props;\n    const { activeSet } = this.state;\n    return (\n      <div className=\"at-a-glance\">\n        <div className=\"page-heading-divider\">\n          <h2 className=\"heading-lg\">At A Glance</h2>\n        </div>\n        <div className=\"aggregate-data-visualization-module\">\n          <div className=\"module-inner\">\n            <div className=\"data-filters\">\n              <ul className=\"data-filters-inner\">\n                {\n                  dataSets.map(item => (\n                    <DataFilter\n                      isActive={item.label === activeSet.label}\n                      key={item.label}\n                      label={item.label}\n                      onFilterClick={this.handleDataSetChange}\n                    />\n                  ))\n                }\n              </ul>\n            </div>\n            <div className=\"data-visualization\">\n              {activeSet.label === 'Overview'\n                && (\n                  <OverviewValues />\n                )\n              }\n              {activeSet.label === 'Resightings'\n                && (\n                  <ResightingValues />\n                )\n              }\n              {activeSet.label === 'Engines'\n                && (\n                  <EngineValues />\n                )\n              }\n              {activeSet.label === 'Weekday'\n                && (\n                  <WeekdayValues />\n                )\n              }\n              {activeSet.label === 'Time'\n                && (\n                  <TimeValues />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAtAGlance.defaultProps = {\n  dataSets: [\n    {\n      label: 'Overview',\n    },\n    {\n      label: 'Resightings',\n    },\n    {\n      label: 'Engines',\n    },\n    {\n      label: 'Weekday',\n    },\n    {\n      label: 'Time',\n    },\n  ],\n};\n\nAtAGlance.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default AtAGlance;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1) {\n      if (entry.time.indexOf('12:') === -1 || entry.time.indexOf('12:') > 0) {\n        arr[0] = parseInt(arr[0], 10) + 12;\n      }\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') === 0) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  render() {\n    const { entry, dispatch } = this.props;\n\n    function onEntryClick() {\n      dispatch(showDetail(entry._id)); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <button className=\"engine-manifest\" ref={this.divRef} type=\"button\" onClick={onEntryClick} onKeyDown={onEntryClick}>\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n        <span className=\"engine-details-button\">...</span>\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => { /* eslint-disable-line arrow-body-style */\n  return bindActionCreators(\n    {\n      showDetail,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapDispatchToProps)(Entry);\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date, entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","const Months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default Months;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\nimport months from '../../utils/Months';\n\nclass DateLine extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  render() {\n    const {\n      activeMonth,\n      date,\n      entries,\n      isMonthLabel,\n    } = this.props;\n    const month = months[date.split('/')[0] - 1];\n    const year = date.split('/')[2];\n\n    return (\n      <div className=\"date-line\" ref={this.divRef}>\n        {isMonthLabel\n          && (\n            <div className={`month-display ${`${month}-${year}` === activeMonth ? 'sticky' : ''}`} data-month={`${month}-${year}`}>\n              <span>{`${month} ${year}`}</span>\n            </div>\n          )\n        }\n        <div className=\"date-display\">\n          <span>{date.split('/')[1]}</span>\n        </div>\n        <EntriesForDate\n          date={date}\n          entries={entries}\n        />\n      </div>\n    );\n  }\n}\n\nDateLine.propTypes = {\n  activeMonth: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isMonthLabel: PropTypes.bool.isRequired,\n};\n\nexport default DateLine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DateLine from './DateLine';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMonth: '',\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n    this.currentMonth = -1;\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    let month = '';\n    [].map.call(document.querySelectorAll('.month-display'), (item) => {\n      if (item.parentNode.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        // Should set the active month to whatever the last item less than scrollTop is...\n        month = item.getAttribute('data-month');\n      }\n    });\n    this.setState({ activeMonth: month });\n    //\n    if (this.chartRef !== null) {\n      if (this.chartRef.current.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        this.chartRef.current.classList.add('sticky');\n      } else {\n        this.chartRef.current.classList.remove('sticky');\n      }\n    }\n  }\n\n  render() {\n    const { entries } = this.props;\n    const { activeMonth } = this.state;\n    const dates = [...new Set(entries.map(entry => entry.date))];\n    let isMonthLabel = false;\n\n    return (\n      <div>\n        <div className=\"train-chart\" ref={this.chartRef}>\n          <div className=\"x-axis-header clearfix\">\n            <div className=\"page-heading-divider\">\n              <h2 className=\"heading-lg\">Sightings</h2>\n            </div>\n            <ul>\n              <li><span>12 AM</span></li>\n              <li><span>2 AM</span></li>\n              <li><span>4 AM</span></li>\n              <li><span>6 AM</span></li>\n              <li><span>8 AM</span></li>\n              <li><span>10 AM</span></li>\n              <li><span>12 PM</span></li>\n              <li><span>2 PM</span></li>\n              <li><span>4 PM</span></li>\n              <li><span>6 PM</span></li>\n              <li><span>8 PM</span></li>\n              <li><span>10 PM</span></li>\n            </ul>\n          </div>\n          <div className=\"time-table\">\n            <div className=\"month-bar\" />\n            {\n              dates.map((date) => {\n                if (this.currentMonth !== date.split('/')[0]) {\n                  this.currentMonth = date.split('/')[0]; /* eslint-disable-line prefer-destructuring */\n                  isMonthLabel = true;\n                } else {\n                  isMonthLabel = false;\n                }\n                return (\n                  <DateLine\n                    activeMonth={activeMonth}\n                    key={date.replace(/\\//, '')}\n                    date={date}\n                    entries={entries}\n                    isMonthLabel={isMonthLabel}\n                  />\n                );\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      line: '',\n      location: '',\n      number: '',\n    };\n    this.handleLineChange = this.handleLineChange.bind(this);\n    this.handleNumberChange = this.handleNumberChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.isEngineValid = this.isEngineValid.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    const { line, location, number } = props;\n    this.setState({\n      line,\n      location,\n      number,\n    });\n  }\n\n  componentDidUpdate() {\n    const { id, updateEngines } = this.props;\n    const { line, location, number } = this.state;\n    updateEngines(id, this.isEngineValid(), line, location, number);\n  }\n\n  handleLineChange(event) {\n    this.setState({ line: event.target.value });\n  }\n\n  handleNumberChange(event) {\n    this.setState({ number: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleRemove() {\n    const { id, removeEngine } = this.props;\n    removeEngine(id);\n  }\n\n  isEngineValid() {\n    const { line, location, number } = this.state;\n    if (line === '' || location === '' || number === '') {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const { line, location, number } = this.state;\n    return (\n      <div className=\"flex-row add-engine-row\">\n        <label className=\"form-label form-select-label form-label-line\" htmlFor=\"line\">\n          <span>Line</span>\n          <select className=\"form-select\" id=\"line\" name=\"line\" value={line} onChange={this.handleLineChange}>\n            <option value=\"\">Select</option>\n            {\n              trainLineList.map(trainLine => (\n                <option value={trainLine.name} key={trainLine.id}>{trainLine.short}</option>\n              ))\n            }\n          </select>\n        </label>\n        <label className=\"form-label form-label-number\" htmlFor=\"number\">\n          <span>Number</span>\n          <input className=\"form-input\" id=\"number\" name=\"number\" type=\"number\" value={number} onChange={this.handleNumberChange} />\n        </label>\n        <label className=\"form-label form-select-label form-label-location\" htmlFor=\"location\">\n          <span>Location</span>\n          <select className=\"form-select\" id=\"location\" name=\"location\" value={location} onChange={this.handleLocationChange}>\n            <option value=\"\">Select</option>\n            <option value=\"front\">Front</option>\n            <option value=\"middle\">Middle</option>\n            <option value=\"end\">End</option>\n          </select>\n        </label>\n        <button className=\"remove-button\" type=\"button\" onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n\nAddEngine.propTypes = {\n  id: PropTypes.string.isRequired,\n  line: PropTypes.string,\n  location: PropTypes.string,\n  number: PropTypes.string,\n  removeEngine: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  updateEngines: PropTypes.func.isRequired,\n};\n\nexport default AddEngine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from '../menu/AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass EditEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isActive: false,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n        notes: '',\n      }],\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    this.setState({ isActive: true });\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { trainLineList, entryData } = this.props;\n    const {\n      date,\n      direction,\n      engines,\n      isActive,\n      isEntryValid,\n      notes,\n      time,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    console.log(entryData);\n    return (\n      <div>\n        <button className=\"edit-entry-button\" onClick={this.displayForm} type=\"button\">\n          <span className=\"text-button\">Edit Entry</span>\n        </button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nEditEntry.propTypes = {\n  dispatch: PropTypes.func,\n  entryData: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EditEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport EditEntry from './EditEntry';\nimport months from '../../utils/Months';\nimport { formatDate, formatTime } from '../../utils/Formatting';\nimport { getResightings } from '../../selectors';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  editEntry() {\n    console.log(this);\n  }\n\n  findMatches(trainline, number) {\n    const { resightings, trainLineList } = this.props;\n    const engine = `${trainLineList.find(line => trainline === line.name).short}, ${number}`;\n    const sighting = resightings.find(entry => entry.engine === engine);\n    if (sighting) {\n      return sighting.dates.length;\n    }\n    return 1;\n  }\n\n  render() {\n    const { onDetailClose, data, isLoggedIn } = this.props;\n    const { loadedClass } = this.state;\n\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"entry-number\">\n                Entry No.&nbsp;\n                {data.number}\n              </span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">\n                {`${data.engines.length} engine train observed on ${formatDate(data.date, months)} at ${formatTime(data.time)} heading ${data.direction}.`}\n              </div>\n              <div className=\"detail-subhead\">Engines</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Ord.</th>\n                    <th>Line</th>\n                    <th>No.</th>\n                    <th>Pos.</th>\n                    <th>Sightings</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data.engines.map((engine) => {\n                      const bgStyle = {\n                        backgroundColor: engine.color,\n                      };\n                      return (\n                        <tr key={engine.number}>\n                          <td><span className=\"engine-color-indicator\" style={bgStyle}>{engine.order}</span></td>\n                          <td><span>{engine.line}</span></td>\n                          <td><span>{engine.number}</span></td>\n                          <td><span>{engine.location}</span></td>\n                          <td><span>{this.findMatches(engine.line, engine.number)}</span></td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n              <div className=\"detail-subhead\">Notes</div>\n              <p className=\"detail-notes\">{data.notes}</p>\n            </div>\n          </div>\n          {isLoggedIn\n            && (\n              <EditEntry\n                entryData={data}\n              />\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { trainLines, userStatus } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  const resightings = getResightings(state);\n  return {\n    isLoggedIn,\n    resightings,\n    trainLineList,\n  };\n};\n\nDetail.propTypes = {\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired,\n  }),\n  isLoggedIn: PropTypes.bool.isRequired,\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps)(Detail);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst About = () => (\n  <div>\n    <div className=\"menu-nav-item\">About the Project</div>\n    <p>\n      The Milwaukee District North tracks sit just beyond the alley in my backyard.\n       During off-peak hours, freight trains are cleared to run along this stretch of the Metra corridor.\n       They rumble past my home office window at seemingly random intervals while I work and attempt to apply structure to this new phase of my career.\n    </p>\n    <p>\n      This project also brought me up to speed with React/Redux and was developed using the full MERN stack.\n    </p>\n  </div>\n);\n\nexport default About;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from './AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n      }],\n      notes: '',\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-entry');\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { isActive, trainLineList } = this.props;\n    const { date, direction, engines, isEntryValid, notes, time } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add an Entry</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddEntry.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(AddEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTrainLine } from '../../actions';\n\nclass AddLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n      isEntryValid: true,\n    };\n    this.handleLineNameChange = this.handleLineNameChange.bind(this);\n    this.handleLineShortNameChange = this.handleLineShortNameChange.bind(this);\n    this.handleLineColorChange = this.handleLineColorChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleLineNameChange(event) {\n    this.setState({ lineName: event.target.value });\n  }\n\n  handleLineShortNameChange(event) {\n    this.setState({ lineShortName: event.target.value });\n  }\n\n  handleLineColorChange(event) {\n    this.setState({ lineColor: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n    } = this.state;\n    console.log(`${lineName},`);\n    let isValid = true;\n    event.preventDefault();\n    if (lineName === '') {\n      isValid = false;\n    }\n    if (isValid) {\n      dispatch(addTrainLine({\n        lineName,\n        lineShortName,\n        lineColor,\n        id: lineName.toLowerCase().replace(/\\s/, '-'),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    this.setState({\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-line');\n  }\n\n  render() {\n    const { isActive } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n      isEntryValid,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add a Train Line</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-line-name\" htmlFor=\"lineName\">\n            <span>Name</span>\n            <input className=\"form-input\" id=\"lineName\" name=\"lineName\" type=\"text\" value={lineName} onChange={this.handleLineNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-short-name\" htmlFor=\"lineShortName\">\n            <span>Short Name</span>\n            <input className=\"form-input\" id=\"lineShortName\" name=\"lineShortName\" type=\"text\" value={lineShortName} onChange={this.handleLineShortNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-color\" htmlFor=\"lineColor\">\n            <span>Color</span>\n            <input className=\"form-input\" id=\"lineColor\" name=\"lineColor\" type=\"text\" value={lineColor} onChange={this.handleLineColorChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Line</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddLine.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nexport default connect()(AddLine);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst Contact = () => (\n  <div>\n    <div className=\"menu-nav-item\">Contact</div>\n    <p>\n      jef.a.mayer(at)gmail.com\n      <br />\n      <a className=\"inline-link\" href=\"https://jefmayer.com\">jefmayer.com</a>\n    </p>\n  </div>\n);\n\nexport default Contact;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../actions';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleUserChange(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { user, password } = this.state;\n    event.preventDefault();\n    dispatch(login({ user, password })); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('login');\n  }\n\n  logout() {\n    const { dispatch, setActiveMenuItem } = this.props;\n    setActiveMenuItem('');\n    // Clear inputs\n    dispatch(logout());\n  }\n\n  render() {\n    const { isActive, isLoggedIn, isLoginError } = this.props;\n    const { user, password } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (isLoginError) {\n      errorDisplayClass = '';\n    }\n    return (\n      !isLoggedIn\n        ? (\n          <div>\n            <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Login</button>\n            <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n              <label className=\"form-label\" htmlFor=\"user\">\n                <span>Name</span>\n                <input className=\"form-input\" id=\"user\" name=\"user\" type=\"text\" value={user} onChange={this.handleUserChange} />\n              </label>\n              <label className=\"form-label\" htmlFor=\"password\">\n                <span>Password</span>\n                <input className=\"form-input\" id=\"password\" name=\"password\" type=\"password\" value={password} onChange={this.handlePasswordChange} />\n              </label>\n              <input className=\"submit-button\" type=\"submit\" value=\"Login\" />\n              <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n            </form>\n          </div>\n        ) : (\n          <button className=\"menu-nav-item menu-nav-button\" type=\"button\" onClick={this.logout}>Logout</button>\n        )\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isLoginError: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n    isLoginError,\n  } = userStatus;\n  return {\n    isLoggedIn,\n    isLoginError,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport About from './About';\nimport AddEntry from './AddEntry';\nimport AddLine from './AddLine';\nimport Contact from './Contact';\nimport Login from './Login';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMenuItem: '',\n    };\n    this.divRef = React.createRef();\n    this.setActiveMenuItem = this.setActiveMenuItem.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { menuDisplayClass } = this.props;\n    if (menuDisplayClass === 'closed') {\n      const timer = setTimeout(() => {\n        this.divRef.current.setAttribute('style', 'position:absolute;');\n        clearTimeout(timer);\n      }, 150);\n    } else {\n      this.divRef.current.setAttribute('style', 'position:fixed;');\n    }\n  }\n\n  setActiveMenuItem(name) {\n    this.setState({ activeMenuItem: name });\n  }\n\n  render() {\n    const { activeMenuItem } = this.state;\n    const { isLoggedIn, menuDisplayClass, onMenuClick } = this.props;\n    return (\n      <div className={`menu-container ${menuDisplayClass}`} ref={this.divRef}>\n        <button className=\"menu-button\" onClick={onMenuClick} type=\"button\">\n          <span className=\"menu-icon\">\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n          </span>\n        </button>\n        <div className=\"menu-nav\">\n          <div className=\"menu-nav-inner\">\n            <About />\n            <Contact />\n            {isLoggedIn\n              && (\n                <div>\n                  <AddEntry\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-entry'}\n                  />\n                  <AddLine\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-line'}\n                  />\n                </div>\n              )\n            }\n            <Login\n              setActiveMenuItem={this.setActiveMenuItem}\n              isActive={activeMenuItem === 'login'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMenu.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  menuDisplayClass: PropTypes.string.isRequired,\n  onMenuClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  return {\n    isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(Menu);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries, fetchTrainLines, hideDetail, hideMenu, showMenu } from '../actions';\nimport AtAGlance from '../components/ataglance/AtAGlance';\nimport Chart from '../components/chart/Chart';\nimport Detail from '../components/detail/Detail';\nimport Menu from '../components/menu/Menu';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n    dispatch(fetchTrainLines());\n  }\n\n  render() {\n    const { detailId, dispatch, entries, isDetailOpen, isMenuOpen } = this.props;\n\n    function onDetailClose() {\n      dispatch(hideDetail());\n    }\n\n    function onMenuClick() {\n      if (!isMenuOpen) {\n        dispatch(showMenu());\n      } else {\n        dispatch(hideMenu());\n      }\n    }\n\n    function getEntryById(id) {\n      return entries.find(entry => entry._id === id); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <div className=\"logo-wrapper\">\n            <img src={logo} className=\"logo-graphic\" alt=\"Trainspotted Logo\" />\n            <div className=\"logo-type\">Trainspotted</div>\n          </div>\n          <Menu\n            menuDisplayClass={isMenuOpen ? 'open' : 'closed'}\n            onMenuClick={onMenuClick}\n          />\n        </header>\n        <AtAGlance />\n        <Chart\n          entries={entries}\n        />\n        {isDetailOpen\n          && (\n            <Detail\n              onDetailClose={onDetailClose}\n              data={getEntryById(detailId)}\n              entries={entries}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  detailId: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  isDetailOpen: PropTypes.bool,\n  isMenuOpen: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, entryDetail, menu } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    id: detailId,\n    isOpen: isDetailOpen,\n  } = entryDetail;\n  const {\n    isOpen: isMenuOpen,\n  } = menu;\n  return {\n    detailId,\n    entries,\n    isDetailOpen,\n    isMenuOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\n// console.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}