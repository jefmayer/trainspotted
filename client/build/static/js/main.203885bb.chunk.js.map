{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/ataglance/DataFilter.jsx","js/utils/Formatting.js","js/utils/Weekdays.js","js/utils/DateUtils.js","js/selectors/index.js","js/components/ataglance/datasets/EngineValues.jsx","js/components/ataglance/datasets/OverviewValues.jsx","js/components/ataglance/datasets/ResightingValues.jsx","js/components/ataglance/datasets/ScheduleValues.jsx","js/components/ataglance/AtAGlance.jsx","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/utils/Months.js","js/components/chart/DateLine.jsx","js/components/chart/Chart.jsx","js/components/menu/AddEngine.jsx","js/components/detail/EditEntry.jsx","js/components/detail/Detail.jsx","js/components/menu/About.jsx","js/components/menu/AddEntry.jsx","js/components/menu/AddLine.jsx","js/components/menu/Contact.jsx","js/components/menu/Login.jsx","js/components/menu/Menu.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","entryAdded","json","type","data","showDetail","id","hideDetail","showMenu","hideMenu","addEntry","_ref2","date","direction","engines","time","notes","dispatch","fetch","method","headers","Headers","Accept","Content-Type","body","JSON","stringify","then","response","rootReducer","combineReducers","entryData","state","arguments","length","undefined","isFetching","items","action","Object","objectSpread","entryDetail","isOpen","menu","trainLines","userStatus","isLoggedIn","isLoginError","success","DataFilter","onFilterClick","_this$props","_this","props","label","_this$props2","this","isActive","react_default","a","createElement","key","className","onClick","Component","formatDateForDB","arr","split","concat","formatTimeForDB","timeValues","hours","parseInt","amPm","formatDateForSelect","value","getDate","toString","month","getMonth","getFullYear","formatTimeForSelect","mins","_arr","slicedToArray","getHours","getMinutes","createEntryId","dateArr","timeArr","getRandomNumberKey","Math","round","random","Weekdays","full","short","index","addMonths","months","d","setMonth","setDate","convertTimeToMinutesElapsed","timeVals","indexOf","getEntryData","getTrainlines","groupAllEntriesByDayAndTime","createSelector","groups","map","entry","engine","push","line","day","Date","getDay","color","find","name","reduce","acc","current","groupItem","values","filter","occurance","g","sort","b","localeCompare","getResightings","number","entryId","_id","offset","findIndex","allEntryEngines","forEach","duplicates","Set","size","add","match","dates","getLineWithMostSightings","getInitialSightingMonthStart","days","weekdays","toConsumableArray","initial","getInitialSightingDate","EngineValues","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tableRef","React","createRef","_this2","setTimeout","classList","remove","entries","_this3","initialSightingDate","lineWithMostSightings","trainLineList","maxEngineCt","ceil","xAxisInterval","dataSet","ct","ref","trainLine","bgStyle","backgroundColor","transform","getEngineCountByLine","style","item","connect","OveviewValues","north","perc","Number","isNaN","resightings","c","array","date1","date2","min","distinctResightings","getDistinctResightings","mostSightingsByLine","avgResightingDays","minResightingDays","Infinity","mostSightingsByEngine","sightingEngine","sightingCt","getDirectionPercentage","max","ResightingValues","yAxis","scrollIndicatorRef","handleScroll","bind","assertThisInitialized","scrollIndicatorTimer","removeEventListener","querySelector","addEventListener","window","clearInterval","initialSightingMonthStart","endDate","startDate","now","getRoundedEndDate","i","substr","getMonthsByInterval","prevLeft","isPrevLeft","onEntryClick","left","getDatePositionInRange","lineStyle","width","onKeyDown","bindActionCreators","ScheduleValues","groupStyle","top","itemStyle","height","defaultProps","AtAGlance","activeSet","handleDataSetChange","dataSets","setState","ataglance_DataFilter","OverviewValues","datasets_ResightingValues","datasets_EngineValues","datasets_ScheduleValues","Entry","divRef","pct","toFixed","setAttribute","EntriesForDate","entryHeight","chart_Entry","Months","DateLine","activeMonth","isMonthLabel","year","data-month","chart_EntriesForDate","Chart","currentMonth","chartWrapperRef","scrollTop","pageYOffset","document","documentElement","querySelectorAll","parentNode","getBoundingClientRect","getAttribute","chart_DateLine","replace","AddEngine","location","handleLineChange","handleNumberChange","handleLocationChange","isEngineValid","handleRemove","updateEngines","_this$state","event","target","removeEngine","_this$state2","_this$state3","htmlFor","onChange","EditEntry","idIter","isEntryValid","handleDateChange","handleTimeChange","handleDirectionChange","handleNotesChange","handleSubmit","handleCancel","showForm","hideForm","addEngine","isValid","preventDefault","order","_ref3","entryDeleted","removeEntry","splice","errorDisplayClass","onSubmit","menu_AddEngine","Detail","loadedClass","timer","trainline","sighting","onDetailClose","role","formatDate","ampm","formatTime","cellPadding","cellSpacing","findMatches","detail_EditEntry","About","AddEntry","displayForm","reset","today","setActiveMenuItem","AddLine","lineName","lineShortName","lineColor","handleLineNameChange","handleLineShortNameChange","handleLineColorChange","_ref4","addTrainLine","toLowerCase","Contact","href","Login","user","password","handleUserChange","handlePasswordChange","logout","_ref","loginAttempt","login","Menu","activeMenuItem","menuDisplayClass","clearTimeout","onMenuClick","menu_About","menu_Contact","menu_AddEntry","menu_AddLine","menu_Login","App","receiveEntries","receiveTrainLines","detailId","isDetailOpen","isMenuOpen","getEntryById","src","logo","alt","menu_Menu","ataglance_AtAGlance","chart_Chart","detail_Detail","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","render","es","containers_App","getElementById"],"mappings":"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","file":"static/js/main.203885bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const SUBMIT_TRAIN_LINE = 'SUBMIT_TRAIN_LINE';\nexport const TRAIN_LINE_ADDED = 'TRAIN_LINE_ADDED';\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\nexport const REQUEST_TRAIN_LINES = 'REQUEST_LINES';\nexport const RECEIVE_TRAIN_LINES = 'RECEIVE_LINES';\nexport const SUBMIT_ENTRY = 'SUBMIT_ENTRY';\nexport const ENTRY_ADDED = 'ENTRY_ADDED';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\nexport const ENTRY_DELETED = 'ENTRY_DELETED';\nexport const SHOW_DETAIL = 'SHOW_DETAIL';\nexport const HIDE_DETAIL = 'HIDE_DETAIL';\nexport const SHOW_MENU = 'SHOW_MENU';\nexport const HIDE_MENU = 'HIDE_MENU';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n});\n\nexport const requestTrainLines = () => ({\n  type: REQUEST_TRAIN_LINES,\n});\n\nexport const receiveTrainLines = json => ({\n  type: RECEIVE_TRAIN_LINES,\n  data: json,\n});\n\nexport const submitTrainLine = () => ({\n  type: SUBMIT_TRAIN_LINE,\n});\n\nexport const trainLineAdded = json => ({\n  type: TRAIN_LINE_ADDED,\n  data: json,\n});\n\nexport const submitEntry = () => ({\n  type: SUBMIT_ENTRY,\n});\n\nexport const entryAdded = json => ({\n  type: ENTRY_ADDED,\n  data: json,\n});\n\nexport const deleteEntry = () => ({\n  type: DELETE_ENTRY,\n});\n\nexport const entryDeleted = json => ({\n  type: ENTRY_DELETED,\n  data: json,\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n\nexport const fetchTrainLines = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestTrainLines());\n  return fetch('/getLines')\n    .then(response => response.json())\n    .then(json => dispatch(receiveTrainLines(json)));\n};\n\nexport const showDetail = id => ({\n  type: SHOW_DETAIL,\n  data: id,\n});\n\nexport const hideDetail = () => ({\n  type: HIDE_DETAIL,\n});\n\nexport const showMenu = () => ({\n  type: SHOW_MENU,\n});\n\nexport const hideMenu = () => ({\n  type: HIDE_MENU,\n});\n\nexport const loginAttempt = json => ({\n  type: LOG_IN,\n  data: json,\n});\n\nexport const login = ({ user, password }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/login', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      user,\n      password,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(loginAttempt(json)));\n};\n\nexport const addEntry = ({ date, direction, engines, id, time, notes }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitEntry());\n  return fetch('/addEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      date,\n      time,\n      direction,\n      engines,\n      id,\n      notes,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const removeEntry = ({ id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(deleteEntry());\n  return fetch('/deleteEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryDeleted(json)));\n};\n\nexport const addTrainLine = ({ lineName, lineShortName, lineColor, id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitTrainLine());\n  return fetch('/addTrainLine', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      lineName,\n      lineShortName,\n      lineColor,\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const logout = () => ({\n  type: LOG_OUT,\n});\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  SUBMIT_TRAIN_LINE,\n  TRAIN_LINE_ADDED,\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n  REQUEST_TRAIN_LINES,\n  RECEIVE_TRAIN_LINES,\n  SUBMIT_ENTRY,\n  ENTRY_ADDED,\n  DELETE_ENTRY,\n  ENTRY_DELETED,\n  SHOW_DETAIL,\n  HIDE_DETAIL,\n  SHOW_MENU,\n  HIDE_MENU,\n  LOG_IN,\n  LOG_OUT,\n} from '../actions';\n\n\nconst entryData = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n    case SUBMIT_ENTRY:\n    case DELETE_ENTRY:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n    case ENTRY_ADDED:\n    case ENTRY_DELETED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst entryDetail = (state = {\n  isOpen: false,\n  id: '',\n}, action) => {\n  switch (action.type) {\n    case SHOW_DETAIL:\n      return {\n        ...state,\n        isOpen: true,\n        id: action.data,\n      };\n    case HIDE_DETAIL:\n      return {\n        ...state,\n        isOpen: false,\n        id: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst menu = (state = {\n  isOpen: false,\n}, action) => {\n  switch (action.type) {\n    case SHOW_MENU:\n      return {\n        ...state,\n        isOpen: true,\n      };\n    case HIDE_MENU:\n      return {\n        ...state,\n        isOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userStatus = (state = {\n  isLoggedIn: false,\n  isLoginError: false,\n  response: [{ success: 'error' }],\n}, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      if (action.data[0].success === 'success') {\n        return {\n          ...state,\n          isLoggedIn: true,\n          isLoginError: false,\n          response: action.data,\n        };\n      }\n      return {\n        ...state,\n        isLoggedIn: false,\n        isLoginError: true,\n        response: action.data,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst trainLines = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_TRAIN_LINES:\n    case SUBMIT_TRAIN_LINE:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_TRAIN_LINES:\n    case TRAIN_LINE_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryData,\n  entryDetail,\n  menu,\n  trainLines,\n  userStatus,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DataFilter extends Component {\n  onFilterClick = () => {\n    const { label, onFilterClick } = this.props;\n    onFilterClick(label);\n  }\n\n  render() {\n    const { isActive, label } = this.props;\n    return (\n      <li key={label}>\n        <button className={isActive ? 'active' : ''} onClick={this.onFilterClick} type=\"button\">\n          <span>{label}</span>\n        </button>\n      </li>\n    );\n  }\n}\n\nDataFilter.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  onFilterClick: PropTypes.func.isRequired,\n};\n\nexport default DataFilter;\n","export function formatDate(date, months) {\n  const arr = date.split('/');\n  return `${months[arr[0] - 1]} ${arr[1]}, ${arr[2]}`;\n}\n\nexport function formatTime(time) {\n  const arr = time.split(':');\n  let ampm = 'a.m.';\n  if (time.indexOf('PM') !== -1) {\n    ampm = 'p.m.';\n  }\n  return `${arr[0]}:${arr[1]} ${ampm}`;\n}\n\nexport function formatDateForDB(date) {\n  const arr = date.split('-');\n  return `${arr[1]}/${arr[2]}/${arr[0]}`;\n}\n\nexport function formatTimeForDB(time) {\n  const timeValues = time.split(':');\n  let hours = parseInt(timeValues[0], 10);\n  let amPm = 'AM';\n  if (hours > 12) {\n    hours -= 12;\n    amPm = 'PM';\n  } else if (hours === 12) {\n    amPm = 'PM';\n  } else if (hours === 0) {\n    hours = 12;\n  }\n  return `${hours}:${timeValues[1]}:00 ${amPm}`;\n}\n\nexport function formatDateForSelect(value) {\n  let date = value.getDate().toString();\n  if (date.length === 1) {\n    date = `0${date}`;\n  }\n  let month = (value.getMonth() + 1).toString();\n  if (month.length === 1) {\n    month = `0${month}`;\n  }\n  return `${value.getFullYear()}-${month}-${date}`;\n}\n\nexport function formatTimeForSelect(value) {\n  let hours = '';\n  let mins = '';\n  if (typeof value === 'string') {\n    const arr = value.split(':');\n    const [arrHours, arrMins] = arr;\n    hours = arrHours;\n    mins = arrMins;\n  } else {\n    hours = value.getHours().toString();\n    mins = value.getMinutes().toString();\n  }\n  if (hours.length === 1) {\n    hours = `0${hours}`;\n  }\n  if (mins.length === 1) {\n    mins = `0${mins}`;\n  }\n  return `${hours}:${mins}`;\n}\n\nexport function createEntryId(date, time) {\n  const dateArr = date.split('-');\n  const timeArr = time.split(':');\n  return `${dateArr[0]}${dateArr[1]}${dateArr[2]}${timeArr[0]}${timeArr[1]}`;\n}\n\nexport function getRandomNumberKey() {\n  return `key-${Math.round(Math.random() * 1000 * Math.random() * 1000 / Math.random() * 1000 + Math.random() * 1000)}`;\n}\n","const Weekdays = [\n  {\n    full: 'Sunday',\n    short: 'S',\n    index: 0,\n  },\n  {\n    full: 'Monday',\n    short: 'M',\n    index: 1,\n  },\n  {\n    full: 'Tuesday',\n    short: 'T',\n    index: 2,\n  },\n  {\n    full: 'Wednesday',\n    short: 'W',\n    index: 3,\n  },\n  {\n    full: 'Thursday',\n    short: 'T',\n    index: 4,\n  },\n  {\n    full: 'Friday',\n    short: 'F',\n    index: 5,\n  },\n  {\n    full: 'Saturday',\n    short: 'S',\n    index: 6,\n  },\n];\n\nexport default Weekdays;\n","/* eslint-disable no-console */\nfunction addMonths(date, months) {\n  const d = date.getDate();\n  date.setMonth(date.getMonth() + months);\n  if (date.getDate() !== d) {\n    date.setDate(0);\n  }\n  return date;\n}\n\nfunction getRoundedEndDate(startDate, now) {\n  let endDate = addMonths(now, 1);\n  let months = (endDate.getFullYear() - startDate.getFullYear()) * 12;\n  months -= startDate.getMonth();\n  months += endDate.getMonth() + 2;\n  if (months % 2 !== 0) {\n    endDate = addMonths(now, 1);\n  }\n  return new Date(`${endDate.getMonth() + 1}/1/${endDate.getFullYear()}`);\n}\n\nfunction getMonthsByInterval(startDate, now) {\n  // Get number of months between then and now\n  let months = (now.getFullYear() - startDate.getFullYear()) * 12;\n  months -= startDate.getMonth();\n  months += now.getMonth() + 1;\n  const arr = [];\n  let i = 0;\n  let date = startDate;\n  do {\n    arr.push(`${date.getMonth() + 1}/${date.getFullYear().toString().substr(2)}`);\n    date = addMonths(date, 2);\n    i += 1;\n  }\n  while (i <= months / 2);\n  return arr;\n}\n\nfunction getDaysBetweenDates(date1, date2) {\n  return Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\n}\n\nfunction getDatePositionInRange(date, startDate, now) {\n  return ((date - startDate) / (now - startDate));\n}\n\nfunction convertTimeToMinutesElapsed(time) {\n  const timeVals = time.split(':');\n  let mins = parseInt(timeVals[1], 10);\n  if (timeVals[2].indexOf('PM') !== -1 && timeVals[0] !== '12') {\n    mins += (parseInt(timeVals[0], 10) + 12) * 60;\n  } else {\n    mins += parseInt(timeVals[0], 10) * 60;\n  }\n  return mins;\n}\n\nexport {\n  convertTimeToMinutesElapsed,\n  getRoundedEndDate,\n  getMonthsByInterval,\n  getDaysBetweenDates,\n  getDatePositionInRange,\n};\n/* eslint-enable no-console */\n","/* eslint-disable no-console, arrow-body-style */\nimport { createSelector } from 'reselect';\nimport weekdays from '../utils/Weekdays';\nimport { convertTimeToMinutesElapsed } from '../utils/DateUtils';\n\n\nconst getEntryData = state => state.entryData.items;\nconst getTrainlines = state => state.trainLines.items;\n\nconst groupAllEntriesByDayAndTime = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    // Build list of all engines with entry keys, dates, colors\n    const groups = [];\n    entryData.map(entry => entry.engines.map(engine => groups.push({\n      line: engine.line,\n      day: new Date(entry.date).getDay(),\n      time: `${Math.round(convertTimeToMinutesElapsed(entry.time) / 14.4)}%`,\n      color: trainLines.find(line => engine.line === line.name).color,\n    })));\n    return groups\n      .reduce((acc, current) => {\n        const match = acc.find(entry => entry.day === current.day && entry.time === current.time);\n        // If match is false, then return accumulator w/ match addeed\n        if (!match) {\n          return acc.concat([current]);\n        }\n        // If exists, then just return accumulator as is\n        return acc;\n      }, [])\n      .map(groupItem => ({\n        ...groupItem,\n        values: groups\n          .filter(entry => entry.day === groupItem.day && entry.time === groupItem.time)\n          // Add number of engines w/ same line to property in each group item\n          .map(entry => ({\n            ...entry,\n            occurance: `${groups.filter(g => entry.day === g.day && entry.time === g.time && g.line === entry.line).length / groups.filter(g => entry.day === g.day && entry.time === g.time).length * 100}%`,\n          }))\n          // Remove duplicate lines\n          .reduce((acc, current) => {\n            const match = acc.find(entry => entry.line === current.line);\n            // If match is false, then return accumulator w/ match addeed\n            if (!match) {\n              return acc.concat([current]);\n            }\n            // If exists, then just return accumulator as is\n            return acc;\n          }, [])\n          // Sort alphabetically\n          .sort((a, b) => a.line.localeCompare(b.line)),\n      }));\n  },\n);\n\nconst getAllEntriesWithDayAndTime = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    // Build list of all engines with entry keys, dates, colors\n    const arr = [];\n    entryData.map(entry => entry.engines.map(engine => arr.push({\n      engine: `${trainLines.find(line => engine.line === line.name).short}, ${engine.number}`,\n      entryId: entry._id, /* eslint-disable-line no-underscore-dangle */\n      // date: entry.date,\n      day: new Date(entry.date).getDay(),\n      time: entry.time,\n      color: trainLines.find(line => engine.line === line.name).color,\n      offset: trainLines.findIndex(line => engine.line === line.name),\n    })));\n    return arr;\n  },\n);\n\nconst getResightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    // Build list of all engines with entry keys, dates, colors\n    const allEntryEngines = [];\n    entryData.forEach(entry => entry.engines.forEach(engine => allEntryEngines.push({\n      engine: `${trainLines.find(line => engine.line === line.name).short}, ${engine.number}`,\n      entryId: entry._id, /* eslint-disable-line no-underscore-dangle */\n      date: entry.date,\n      color: trainLines.find(line => engine.line === line.name).color,\n    })));\n    // Find all engines seen more than once\n    const duplicates = new Set();\n    const resightings = allEntryEngines\n      .filter(entry => duplicates.size === duplicates.add(entry.engine).size)\n      // But there can be more than 2 matches... so now need to remove duplicates\n      .reduce((acc, current) => {\n        const match = acc.find(entry => entry.engine === current.engine);\n        // If match is false, then return accumulator w/ match added\n        if (!match) {\n          return acc.concat([current]);\n        }\n        // If exists, then just return accumulator as is\n        return acc;\n      }, [])\n      .map((match) => {\n        // Find all sighting dates\n        const dates = allEntryEngines\n          .filter(entry => match.engine === entry.engine)\n          .map(entry => ({ date: entry.date, entryId: entry.entryId }))\n          .sort((a, b) => new Date(a.date) - new Date(b.date));\n        return {\n          engine: match.engine,\n          dates,\n          entryId: match.entryId,\n          color: match.color,\n        };\n      })\n      .sort((a, b) => new Date(a.dates[0].date) - new Date(b.dates[0].date));\n    return resightings;\n  },\n);\n\nconst getLineWithMostSightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    return trainLines\n      .map(line => ({\n        name: line.name,\n        value: entryData.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name).length), 0),\n      }))\n      .sort((a, b) => b.value - a.value)[0];\n  },\n);\n\nconst getLinesByDayOfWeek = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    return trainLines\n      .map(line => ({\n        name: line.name,\n        days: weekdays\n          .map(day => ({\n            full: day.full,\n            short: day.short,\n            index: day.index,\n            value: entryData.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name && new Date(b.date).getDay() === day.index).length), 0),\n          })),\n      }));\n  },\n);\n\nconst getInitialSightingMonthStart = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData) => {\n    const dates = [...entryData].sort((a, b) => new Date(a.date) - new Date(b.date));\n    // Get 1st day of the start month\n    const initial = new Date(dates[0].date);\n    // return initial;\n    return `${initial.getMonth() + 1}/1/${initial.getFullYear()}`;\n  },\n);\n\nconst getInitialSightingDate = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData) => {\n    const dates = [...entryData].sort((a, b) => new Date(a.date) - new Date(b.date));\n    // Get 1st day of the start month\n    const initial = new Date(dates[0].date);\n    // return initial;\n    return `${initial.getMonth() + 1}/${initial.getDate()}/${initial.getFullYear()}`;\n  },\n);\n\nexport {\n  getAllEntriesWithDayAndTime,\n  getInitialSightingDate,\n  getInitialSightingMonthStart,\n  getLinesByDayOfWeek,\n  getLineWithMostSightings,\n  getResightings,\n  groupAllEntriesByDayAndTime,\n};\n/* eslint-enable no-console, arrow-body-style */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { getInitialSightingDate, getLineWithMostSightings } from '../../../selectors';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRef = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.tableRef.current.classList.remove('initial-state');\n    }, 100);\n  }\n\n  getEngineCountByLine(line) {\n    const { entries } = this.props;\n    return entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line).length), 0);\n  }\n\n  render() {\n    const { entries, initialSightingDate, lineWithMostSightings, trainLineList } = this.props;\n    // Get line w/ max number of entries, round to nearest 100\n    // Divide by 10 (start at 0)\n    const maxEngineCt = Math.ceil(lineWithMostSightings.value / 100) * 100;\n    const xAxisInterval = maxEngineCt / 10;\n    const dataSet = [0];\n    let ct = 0;\n    do {\n      ct += xAxisInterval;\n      dataSet.push(ct);\n    }\n    while (ct < maxEngineCt);\n    return (\n      <div className=\"data-table engine-values-table initial-state\" ref={this.tableRef}>\n        <div className=\"table-title\">\n          <h3>\n            { entries.reduce((a, b) => (a + b.engines.length), 0) }\n            &nbsp;diesel engines have been observed since&nbsp;\n            { initialSightingDate }\n          </h3>\n        </div>\n        <div className=\"y-axis\">\n          {\n            trainLineList.map((trainLine) => {\n              const bgStyle = {\n                backgroundColor: trainLine.color,\n                transform: `scaleX(${this.getEngineCountByLine(trainLine.name) / maxEngineCt})`,\n              };\n              return (\n                <div className=\"y-axis-row\" key={trainLine.id}>\n                  <div className=\"row-label\">{trainLine.name}</div>\n                  <div className=\"row-axis\" />\n                  <div className=\"value-display\" style={bgStyle} />\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  initialSightingDate: PropTypes.string.isRequired,\n  lineWithMostSightings: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.number,\n  }),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, trainLines } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const initialSightingDate = getInitialSightingDate(state);\n  const lineWithMostSightings = getLineWithMostSightings(state);\n  return {\n    entries,\n    initialSightingDate,\n    lineWithMostSightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console, no-useless-constructor */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDaysBetweenDates } from '../../../utils/DateUtils';\nimport { getLineWithMostSightings, getResightings } from '../../../selectors';\n\nclass OveviewValues extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getDirectionPercentage() {\n    const { entries } = this.props;\n    const north = entries.filter(entry => entry.direction === 'north');\n    const perc = Math.round(north.length / entries.length * 100);\n    return `${Number.isNaN(perc) ? '...' : perc}%`;\n  }\n\n  getLineWithMostSightings() {\n    const { entries, trainLineList } = this.props;\n    return trainLineList\n      .map(line => ({\n        name: line.name,\n        value: entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name).length), 0),\n      }))\n      .sort((a, b) => b.value - a.value)[0];\n  }\n\n  getDistinctResightings() {\n    const { resightings } = this.props;\n    // Need to create a second array because there are more resightings,\n    // than items in the resightings array (one engine can have more than\n    // one resighting...\n    const arr = [];\n    resightings\n      // It's actually fine, prob somewhat inefficient, if we're looking\n      // for the duration of the last item in the array and itself... it'll just be 0\n      .map(item => item.dates.reduce((a, b, c, array) => arr.push({ engine: item.engine, time: getDaysBetweenDates(new Date(b.date), new Date(array[Math.min(c + 1, array.length - 1)].date)) }), 0));\n    // Filter out all the 0's here\n    return arr.filter(item => item.time !== 0);\n  }\n\n  render() {\n    const { trainLineList, entries, lineWithMostSightings, resightings } = this.props;\n    const distinctResightings = this.getDistinctResightings();\n    let mostSightingsByLine = lineWithMostSightings;\n    if (!mostSightingsByLine) {\n      mostSightingsByLine = {\n        name: '',\n        value: '...',\n      };\n    }\n    let avgResightingDays = Math.round(distinctResightings.reduce((a, b) => (a + b.time), 0) / distinctResightings.length);\n    if (Number.isNaN(avgResightingDays)) {\n      avgResightingDays = 0;\n    }\n    let minResightingDays = distinctResightings.reduce((a, b) => Math.min(a, b.time), Infinity);\n    if (minResightingDays === Infinity) {\n      minResightingDays = 0;\n    }\n    let mostSightingsByEngine = [...resightings].sort((a, b) => b.dates.length - a.dates.length)[0];\n    let sightingEngine = {\n      line: '',\n      number: '',\n    };\n    let sightingCt = 0;\n    if (mostSightingsByEngine) {\n      sightingEngine = mostSightingsByEngine.engine;\n      sightingCt = mostSightingsByEngine.dates.length;\n      mostSightingsByEngine = entries.find(entry => entry._id === mostSightingsByEngine.entryId); /* eslint-disable-line no-underscore-dangle */\n      sightingEngine = mostSightingsByEngine.engines.find(engine => sightingEngine.indexOf(engine.number) !== -1);\n    }\n\n    return (\n      <div className=\"data-table\">\n        <div className=\"table-title\">\n          <h3>Overview of findings based on observational train data</h3>\n        </div>\n        <div className=\"table-values-grid\">\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ trainLineList.length }</div>\n            <div className=\"body-copy\">Different Freight Lines Observed</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.length }</div>\n            <div className=\"body-copy\">Number of Trains Observed</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.reduce((a, b) => (a + b.engines.length), 0) }</div>\n            <div className=\"body-copy\">Number of Diesel Engines</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ mostSightingsByLine.value }</div>\n            <div className=\"body-copy\">\n              { mostSightingsByLine.name }\n              &nbsp;is Observed Most Often\n            </div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ this.getDirectionPercentage() }</div>\n            <div className=\"body-copy\">Percentage of Trains Headed North</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ distinctResightings.length }</div>\n            <div className=\"body-copy\">Number of Resightings*</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ avgResightingDays }</div>\n            <div className=\"body-copy\">Average Number of Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ minResightingDays }</div>\n            <div className=\"body-copy\">Fewest Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ distinctResightings.reduce((a, b) => Math.max(a, b.time), 0) }</div>\n            <div className=\"body-copy\">Most Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ sightingCt }</div>\n            <div className=\"body-copy\">\n              {sightingEngine.line}\n              &nbsp;\n              {sightingEngine.number}\n              &nbsp;Has the Most Resightings\n            </div>\n          </div>\n        </div>\n        <div className=\"table-notes\">\n          <p className=\"body-xsmall\">*Resightings are the engines I&rsquo;ve observed on multiple occasions. It&rsquo;s entirely possible, more so likely, that these and others have passed back and forth at off hours. Some other observations:</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nOveviewValues.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  lineWithMostSightings: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.number,\n  }),\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const resightings = getResightings(state);\n  const lineWithMostSightings = getLineWithMostSightings(state);\n  return {\n    entries,\n    lineWithMostSightings,\n    resightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(OveviewValues);\n/* eslint-enable no-console, no-useless-constructor */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDatePositionInRange, getMonthsByInterval, getRoundedEndDate } from '../../../utils/DateUtils';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { showDetail } from '../../../actions';\nimport { getResightings, getInitialSightingDate, getInitialSightingMonthStart } from '../../../selectors';\n\nclass ResightingValues extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRef = React.createRef();\n    this.yAxis = null;\n    this.scrollIndicatorRef = React.createRef();\n    this.handleScroll = this.handleScroll.bind(this);\n    this.scrollIndicatorTimer = null;\n  }\n\n  componentDidMount() {\n    this.scrollIndicatorTimer = setTimeout(() => {\n      this.scrollIndicatorRef.current.classList.add('hidden');\n      this.yAxis.removeEventListener('scroll', this.handleScroll);\n    }, 3000);\n    this.yAxis = this.tableRef.current.querySelector('.y-axis');\n    this.yAxis.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n    clearInterval(this.scrollIndicatorTimer);\n  }\n\n  handleScroll() {\n    this.scrollIndicatorRef.current.classList.add('hidden');\n    this.yAxis.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const { dispatch, initialSightingDate, initialSightingMonthStart, resightings } = this.props;\n    const endDate = getRoundedEndDate(new Date(initialSightingMonthStart), new Date());\n    const dataSet = getMonthsByInterval(new Date(initialSightingMonthStart), endDate);\n    let prevLeft = '';\n    let isPrevLeft = false;\n\n    return (\n      <div className=\"data-table resightings-values-table\" ref={this.tableRef}>\n        <div className=\"table-title\">\n          <h3>\n            { resightings.reduce((a, b) => (a + (b.dates.length - 1)), 0) }\n            &nbsp;repeated sightings of&nbsp;\n            { resightings.length }\n            &nbsp;engines since&nbsp;\n            { initialSightingDate }\n          </h3>\n        </div>\n        <div className=\"y-axis\">\n          {\n            resightings.map((entry) => {\n              prevLeft = '';\n              isPrevLeft = false;\n\n              return (\n                <div className=\"y-axis-row\" key={getRandomNumberKey()}>\n                  <div className=\"row-label\">{entry.engine}</div>\n                  <div className=\"row-axis\">\n                    {\n                      entry.dates.map((date) => {\n                        function onEntryClick() {\n                          dispatch(showDetail(date.entryId));\n                        }\n                        const left = `${getDatePositionInRange(new Date(date.date), new Date(initialSightingMonthStart), endDate) * 100}%`;\n                        const bgStyle = {\n                          backgroundColor: entry.color,\n                          left,\n                        };\n                        const lineStyle = {\n                          backgroundColor: entry.color,\n                          left: prevLeft,\n                          width: `calc(${left} - ${prevLeft})`,\n                        };\n                        if (prevLeft !== '') {\n                          isPrevLeft = true;\n                        }\n                        prevLeft = left;\n                        return (\n                          <div key={getRandomNumberKey()}>\n                            <button\n                              className=\"sighting-marker\"\n                              onClick={onEntryClick}\n                              onKeyDown={onEntryClick}\n                              style={bgStyle}\n                              type=\"button\"\n                            >\n                              <span>{entry.engine.substr(entry.engine.indexOf(',') + 2)}</span>\n                            </button>\n                            {isPrevLeft\n                              && (\n                                <div\n                                  className=\"sighting-connector\"\n                                  style={lineStyle}\n                                />\n                              )\n                            }\n                          </div>\n                        );\n                      })\n                    }\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"scroll-indicator-icon\" ref={this.scrollIndicatorRef}>\n          <div />\n        </div>\n      </div>\n    );\n  }\n}\n\nResightingValues.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  initialSightingDate: PropTypes.string.isRequired,\n  initialSightingMonthStart: PropTypes.string.isRequired,\n  resightings: PropTypes.arrayOf(PropTypes.object),\n};\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const resightings = getResightings(state);\n  const initialSightingDate = getInitialSightingDate(state);\n  const initialSightingMonthStart = getInitialSightingMonthStart(state);\n  return {\n    initialSightingDate,\n    initialSightingMonthStart,\n    resightings,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResightingValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console, no-useless-constructor, react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport weekdays from '../../../utils/Weekdays';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { groupAllEntriesByDayAndTime } from '../../../selectors';\n\nclass ScheduleValues extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { dataSet, entries } = this.props;\n    return (\n      <div className=\"data-table schedule-values-table\">\n        <div className=\"table-title\">\n          <h3>Times during the week when the various freight train lines have been observed</h3>\n        </div>\n        <div className=\"y-axis\">\n          {\n            weekdays.map(day => (\n              <div className=\"y-axis-row\" key={day.index}>\n                <div className=\"row-label\">{day.full}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"scatterplot\">\n          {\n            entries.map((entry) => {\n              const groupStyle = {\n                left: entry.time,\n                top: `${40 * entry.day}px`,\n              };\n              return (\n                <div\n                  className=\"line-group\"\n                  key={getRandomNumberKey()}\n                  style={groupStyle}\n                >\n                  {\n                    entry.values.map((line) => {\n                      const itemStyle = {\n                        backgroundColor: line.color,\n                        height: line.occurance,\n                      };\n                      return (\n                        <div\n                          className=\"line-group-item\"\n                          key={getRandomNumberKey()}\n                          style={itemStyle}\n                        />\n                      );\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nScheduleValues.defaultProps = {\n  dataSet: ['12 AM', '2 AM', '4AM', '6 AM', '8 AM', ' 10 AM', '12 PM', '2 PM', '4 PM', '6 PM', '8 PM', '10 PM'],\n};\n\nScheduleValues.propTypes = {\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n  entries: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const entries = groupAllEntriesByDayAndTime(state);\n  return {\n    entries,\n  };\n};\n\nexport default connect(mapStateToProps)(ScheduleValues);\n/* eslint-enable no-console, no-useless-constructor, react/prefer-stateless-function */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DataFilter from './DataFilter';\nimport EngineValues from './datasets/EngineValues';\nimport OverviewValues from './datasets/OverviewValues';\nimport ResightingValues from './datasets/ResightingValues';\nimport ScheduleValues from './datasets/ScheduleValues';\n\nclass AtAGlance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSet: {\n        label: '',\n        values: [],\n      },\n    };\n    this.handleDataSetChange = this.handleDataSetChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { dataSets } = this.props;\n    this.setState({\n      activeSet: dataSets[0],\n    });\n  }\n\n  handleDataSetChange(value) {\n    const { dataSets } = this.props;\n    const dataSet = dataSets.find(item => item.label === value);\n    this.setState({ activeSet: dataSet });\n  }\n\n  render() {\n    const { dataSets } = this.props;\n    const { activeSet } = this.state;\n    return (\n      <div className=\"at-a-glance\">\n        <div className=\"page-heading-divider\">\n          <h2 className=\"heading-lg\">At A Glance</h2>\n        </div>\n        <div className=\"aggregate-data-visualization-module\">\n          <div className=\"module-inner\">\n            <div className=\"data-filters\">\n              <ul className=\"data-filters-inner\">\n                {\n                  dataSets.map(item => (\n                    <DataFilter\n                      isActive={item.label === activeSet.label}\n                      key={item.label}\n                      label={item.label}\n                      onFilterClick={this.handleDataSetChange}\n                    />\n                  ))\n                }\n              </ul>\n            </div>\n            <div className=\"data-visualization\">\n              {activeSet.label === 'Overview'\n                && (\n                  <OverviewValues />\n                )\n              }\n              {activeSet.label === 'Resightings'\n                && (\n                  <ResightingValues />\n                )\n              }\n              {activeSet.label === 'Engines'\n                && (\n                  <EngineValues />\n                )\n              }\n              {activeSet.label === 'Schedule'\n                && (\n                  <ScheduleValues />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAtAGlance.defaultProps = {\n  dataSets: [\n    {\n      label: 'Overview',\n    },\n    {\n      label: 'Resightings',\n    },\n    {\n      label: 'Engines',\n    },\n    {\n      label: 'Schedule',\n    },\n  ],\n};\n\nAtAGlance.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default AtAGlance;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1) {\n      if (entry.time.indexOf('12:') === -1 || entry.time.indexOf('12:') > 0) {\n        arr[0] = parseInt(arr[0], 10) + 12;\n      }\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') === 0) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  render() {\n    const { entry, dispatch } = this.props;\n\n    function onEntryClick() {\n      dispatch(showDetail(entry._id)); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <button className=\"engine-manifest\" ref={this.divRef} type=\"button\" onClick={onEntryClick} onKeyDown={onEntryClick}>\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n        <span className=\"engine-details-button\">...</span>\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => { /* eslint-disable-line arrow-body-style */\n  return bindActionCreators(\n    {\n      showDetail,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapDispatchToProps)(Entry);\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date, entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","const Months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default Months;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\nimport months from '../../utils/Months';\n\nclass DateLine extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  render() {\n    const {\n      activeMonth,\n      date,\n      entries,\n      isMonthLabel,\n    } = this.props;\n    const month = months[date.split('/')[0] - 1];\n    const year = date.split('/')[2];\n\n    return (\n      <div className=\"date-line\" ref={this.divRef}>\n        {isMonthLabel\n          && (\n            <div className={`month-display ${`${month}-${year}` === activeMonth ? 'sticky' : ''}`} data-month={`${month}-${year}`}>\n              <span>{`${month} ${year}`}</span>\n            </div>\n          )\n        }\n        <div className=\"date-display\">\n          <span>{date.split('/')[1]}</span>\n        </div>\n        <EntriesForDate\n          date={date}\n          entries={entries}\n        />\n      </div>\n    );\n  }\n}\n\nDateLine.propTypes = {\n  activeMonth: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isMonthLabel: PropTypes.bool.isRequired,\n};\n\nexport default DateLine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DateLine from './DateLine';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMonth: '',\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n    this.currentMonth = -1;\n    this.chartWrapperRef = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    let month = '';\n    [].map.call(document.querySelectorAll('.month-display'), (item) => {\n      if (item.parentNode.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        // Should set the active month to whatever the last item less than scrollTop is...\n        month = item.getAttribute('data-month');\n      }\n    });\n    this.setState({ activeMonth: month });\n    //\n    if (this.chartWrapperRef !== null) {\n      if (this.chartWrapperRef.current.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        this.chartWrapperRef.current.classList.add('sticky');\n      } else {\n        this.chartWrapperRef.current.classList.remove('sticky');\n      }\n    }\n  }\n\n  render() {\n    const { entries } = this.props;\n    const { activeMonth } = this.state;\n    const dates = [...new Set(entries.map(entry => entry.date))];\n    let isMonthLabel = false;\n\n    return (\n      <div className=\"train-chart-wrapper\" ref={this.chartWrapperRef}>\n        <div className=\"page-heading-divider fixed-page-heading-divider\">\n          <h2 className=\"heading-lg\">Sightings</h2>\n        </div>\n        <div className=\"train-chart\">\n          <div className=\"x-axis-header clearfix\">\n            <div className=\"page-heading-divider\">\n              <h2 className=\"heading-lg\">Sightings</h2>\n            </div>\n            <ul>\n              <li><span>12 AM</span></li>\n              <li><span>2 AM</span></li>\n              <li><span>4 AM</span></li>\n              <li><span>6 AM</span></li>\n              <li><span>8 AM</span></li>\n              <li><span>10 AM</span></li>\n              <li><span>12 PM</span></li>\n              <li><span>2 PM</span></li>\n              <li><span>4 PM</span></li>\n              <li><span>6 PM</span></li>\n              <li><span>8 PM</span></li>\n              <li><span>10 PM</span></li>\n            </ul>\n          </div>\n          <div className=\"time-table\">\n            <div className=\"month-bar\" />\n            {\n              dates.map((date) => {\n                if (this.currentMonth !== date.split('/')[0]) {\n                  this.currentMonth = date.split('/')[0]; /* eslint-disable-line prefer-destructuring */\n                  isMonthLabel = true;\n                } else {\n                  isMonthLabel = false;\n                }\n                return (\n                  <DateLine\n                    activeMonth={activeMonth}\n                    key={date.replace(/\\//, '')}\n                    date={date}\n                    entries={entries}\n                    isMonthLabel={isMonthLabel}\n                  />\n                );\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      line: '',\n      location: '',\n      number: '',\n    };\n    this.handleLineChange = this.handleLineChange.bind(this);\n    this.handleNumberChange = this.handleNumberChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.isEngineValid = this.isEngineValid.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    const { line, location, number } = props;\n    this.setState({\n      line,\n      location,\n      number,\n    });\n  }\n\n  componentDidUpdate() {\n    const { id, updateEngines } = this.props;\n    const { line, location, number } = this.state;\n    updateEngines(id, this.isEngineValid(), line, location, number);\n  }\n\n  handleLineChange(event) {\n    this.setState({ line: event.target.value });\n  }\n\n  handleNumberChange(event) {\n    this.setState({ number: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleRemove() {\n    const { id, removeEngine } = this.props;\n    removeEngine(id);\n  }\n\n  isEngineValid() {\n    const { line, location, number } = this.state;\n    if (line === '' || location === '' || number === '') {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const { line, location, number } = this.state;\n    return (\n      <div className=\"flex-row add-engine-row\">\n        <label className=\"form-label form-select-label form-label-line\" htmlFor=\"line\">\n          <span>Line</span>\n          <select className=\"form-select\" id=\"line\" name=\"line\" value={line} onChange={this.handleLineChange}>\n            <option value=\"\">Select</option>\n            {\n              trainLineList.map(trainLine => (\n                <option value={trainLine.name} key={trainLine.id}>{trainLine.short}</option>\n              ))\n            }\n          </select>\n        </label>\n        <label className=\"form-label form-label-number\" htmlFor=\"number\">\n          <span>Number</span>\n          <input className=\"form-input\" id=\"number\" name=\"number\" type=\"number\" value={number} onChange={this.handleNumberChange} />\n        </label>\n        <label className=\"form-label form-select-label form-label-location\" htmlFor=\"location\">\n          <span>Location</span>\n          <select className=\"form-select\" id=\"location\" name=\"location\" value={location} onChange={this.handleLocationChange}>\n            <option value=\"\">Select</option>\n            <option value=\"front\">Front</option>\n            <option value=\"middle\">Middle</option>\n            <option value=\"end\">End</option>\n          </select>\n        </label>\n        <button className=\"remove-button\" type=\"button\" onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n\nAddEngine.propTypes = {\n  id: PropTypes.string.isRequired,\n  line: PropTypes.string,\n  location: PropTypes.string,\n  number: PropTypes.string,\n  removeEngine: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  updateEngines: PropTypes.func.isRequired,\n};\n\nexport default AddEngine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from '../menu/AddEngine';\nimport { addEntry, removeEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass EditEntry extends Component {\n  constructor(props) {\n    super(props);\n    const { entryData } = this.props;\n    // Map id property to engine objects\n    entryData.engines = entryData.engines.map((engine, index) => ({ ...engine, id: `engine-no-${index}` }));\n    // State defaults\n    this.state = {\n      date: formatDateForSelect(new Date(entryData.date)),\n      direction: entryData.direction,\n      engines: entryData.engines,\n      idIter: entryData.engines.length,\n      isActive: false,\n      isEntryValid: true,\n      notes: entryData.notes,\n      time: formatTimeForSelect(entryData.time),\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.showForm = this.showForm.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      this.hideForm();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel() {\n    this.hideForm();\n  }\n\n  handleRemove() {\n    const { dispatch, entryData } = this.props;\n    this.hideForm();\n    dispatch(removeEntry({\n      id: entryData._id, /* eslint-disable-line no-underscore-dangle */\n    }));\n  }\n\n  showForm() {\n    this.setState({ isActive: true });\n  }\n\n  hideForm() {\n    this.setState({ isActive: false });\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const {\n      date,\n      direction,\n      engines,\n      isActive,\n      isEntryValid,\n      notes,\n      time,\n    } = this.state;\n\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div className=\"form-wrapper\">\n        {\n          isActive\n            ? (\n              <button className=\"edit-entry-button\" onClick={this.hideForm} type=\"button\">\n                <div>\n                  <span className=\"text-button\">Close Edit</span>\n                </div>\n              </button>\n            ) : (\n              <button className=\"edit-entry-button\" onClick={this.showForm} type=\"button\">\n                <div>\n                  <span className=\"text-button\">Edit Entry</span>\n                </div>\n              </button>\n            )\n        }\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button\" type=\"submit\">Update Entry</button>\n            <button className=\"urgent-button\" type=\"button\" onClick={this.handleRemove}>Remove Entry</button>\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error updating the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nEditEntry.propTypes = {\n  dispatch: PropTypes.func,\n  entryData: PropTypes.shape({\n    date: PropTypes.string,\n    direction: PropTypes.string,\n    engines: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.string,\n    notes: PropTypes.string,\n    number: PropTypes.number,\n    time: PropTypes.string,\n    _id: PropTypes.string,\n  }),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EditEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport EditEntry from './EditEntry';\nimport months from '../../utils/Months';\nimport { formatDate, formatTime } from '../../utils/Formatting';\nimport { getResightings } from '../../selectors';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  findMatches(trainline, number) {\n    const { resightings, trainLineList } = this.props;\n    const engine = `${trainLineList.find(line => trainline === line.name).short}, ${number}`;\n    const sighting = resightings.find(entry => entry.engine === engine);\n    if (sighting) {\n      return sighting.dates.length;\n    }\n    return 1;\n  }\n\n  render() {\n    const { onDetailClose, data, isLoggedIn } = this.props;\n    const { loadedClass } = this.state;\n\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"entry-number\">\n                Entry No.&nbsp;\n                {data.number}\n              </span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">\n                {`${data.engines.length} engine train observed on ${formatDate(data.date, months)} at ${formatTime(data.time)} heading ${data.direction}.`}\n              </div>\n              <div className=\"detail-subhead\">Engines</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Ord.</th>\n                    <th>Line</th>\n                    <th>No.</th>\n                    <th>Pos.</th>\n                    <th>Sightings</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data.engines.map((engine) => {\n                      const bgStyle = {\n                        backgroundColor: engine.color,\n                      };\n                      return (\n                        <tr key={engine.number}>\n                          <td><span className=\"engine-color-indicator\" style={bgStyle}>{engine.order}</span></td>\n                          <td><span>{engine.line}</span></td>\n                          <td><span>{engine.number}</span></td>\n                          <td><span>{engine.location}</span></td>\n                          <td><span>{this.findMatches(engine.line, engine.number)}</span></td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n              <div className=\"detail-subhead\">Notes</div>\n              <p className=\"detail-notes\">{data.notes}</p>\n            </div>\n          </div>\n          {isLoggedIn\n            && (\n              <EditEntry\n                entryData={data}\n              />\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { trainLines, userStatus } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  const resightings = getResightings(state);\n  return {\n    isLoggedIn,\n    resightings,\n    trainLineList,\n  };\n};\n\nDetail.propTypes = {\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired,\n  }),\n  isLoggedIn: PropTypes.bool.isRequired,\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps)(Detail);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst About = () => (\n  <div>\n    <div className=\"menu-nav-item\">About the Project</div>\n    <p>\n      The Milwaukee District North tracks sit just beyond the alley in my backyard.\n       During off-peak hours, freight trains are cleared to run along this stretch of the Metra corridor.\n       They rumble past my home office window at seemingly random intervals while I work and attempt to apply structure to this new phase of my career.\n    </p>\n    <p>\n      This project also brought me up to speed with React/Redux and was developed using the full MERN stack.\n    </p>\n  </div>\n);\n\nexport default About;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from './AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n      }],\n      notes: '',\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-entry');\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { isActive, trainLineList } = this.props;\n    const { date, direction, engines, isEntryValid, notes, time } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add an Entry</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddEntry.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(AddEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTrainLine } from '../../actions';\n\nclass AddLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n      isEntryValid: true,\n    };\n    this.handleLineNameChange = this.handleLineNameChange.bind(this);\n    this.handleLineShortNameChange = this.handleLineShortNameChange.bind(this);\n    this.handleLineColorChange = this.handleLineColorChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleLineNameChange(event) {\n    this.setState({ lineName: event.target.value });\n  }\n\n  handleLineShortNameChange(event) {\n    this.setState({ lineShortName: event.target.value });\n  }\n\n  handleLineColorChange(event) {\n    this.setState({ lineColor: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n    } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    if (lineName === '') {\n      isValid = false;\n    }\n    if (isValid) {\n      dispatch(addTrainLine({\n        lineName,\n        lineShortName,\n        lineColor,\n        id: lineName.toLowerCase().replace(/\\s/, '-'),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    this.setState({\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-line');\n  }\n\n  render() {\n    const { isActive } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n      isEntryValid,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add a Train Line</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-line-name\" htmlFor=\"lineName\">\n            <span>Name</span>\n            <input className=\"form-input\" id=\"lineName\" name=\"lineName\" type=\"text\" value={lineName} onChange={this.handleLineNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-short-name\" htmlFor=\"lineShortName\">\n            <span>Short Name</span>\n            <input className=\"form-input\" id=\"lineShortName\" name=\"lineShortName\" type=\"text\" value={lineShortName} onChange={this.handleLineShortNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-color\" htmlFor=\"lineColor\">\n            <span>Color</span>\n            <input className=\"form-input\" id=\"lineColor\" name=\"lineColor\" type=\"text\" value={lineColor} onChange={this.handleLineColorChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Line</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddLine.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nexport default connect()(AddLine);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst Contact = () => (\n  <div>\n    <div className=\"menu-nav-item\">Contact</div>\n    <p>\n      jef.a.mayer(at)gmail.com\n      <br />\n      <a className=\"inline-link\" href=\"https://jefmayer.com\">jefmayer.com</a>\n    </p>\n  </div>\n);\n\nexport default Contact;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../actions';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleUserChange(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { user, password } = this.state;\n    event.preventDefault();\n    dispatch(login({ user, password })); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('login');\n  }\n\n  logout() {\n    const { dispatch, setActiveMenuItem } = this.props;\n    setActiveMenuItem('');\n    // Clear inputs\n    dispatch(logout());\n  }\n\n  render() {\n    const { isActive, isLoggedIn, isLoginError } = this.props;\n    const { user, password } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (isLoginError) {\n      errorDisplayClass = '';\n    }\n    return (\n      !isLoggedIn\n        ? (\n          <div>\n            <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Login</button>\n            <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n              <label className=\"form-label\" htmlFor=\"user\">\n                <span>Name</span>\n                <input className=\"form-input\" id=\"user\" name=\"user\" type=\"text\" value={user} onChange={this.handleUserChange} />\n              </label>\n              <label className=\"form-label\" htmlFor=\"password\">\n                <span>Password</span>\n                <input className=\"form-input\" id=\"password\" name=\"password\" type=\"password\" value={password} onChange={this.handlePasswordChange} />\n              </label>\n              <input className=\"submit-button\" type=\"submit\" value=\"Login\" />\n              <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n            </form>\n          </div>\n        ) : (\n          <button className=\"menu-nav-item menu-nav-button\" type=\"button\" onClick={this.logout}>Logout</button>\n        )\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isLoginError: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n    isLoginError,\n  } = userStatus;\n  return {\n    isLoggedIn,\n    isLoginError,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport About from './About';\nimport AddEntry from './AddEntry';\nimport AddLine from './AddLine';\nimport Contact from './Contact';\nimport Login from './Login';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMenuItem: '',\n    };\n    this.divRef = React.createRef();\n    this.setActiveMenuItem = this.setActiveMenuItem.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { menuDisplayClass } = this.props;\n    if (menuDisplayClass === 'closed') {\n      const timer = setTimeout(() => {\n        this.divRef.current.setAttribute('style', 'position:absolute;');\n        clearTimeout(timer);\n      }, 150);\n    } else {\n      this.divRef.current.setAttribute('style', 'position:fixed;');\n    }\n  }\n\n  setActiveMenuItem(name) {\n    this.setState({ activeMenuItem: name });\n  }\n\n  render() {\n    const { activeMenuItem } = this.state;\n    const { isLoggedIn, menuDisplayClass, onMenuClick } = this.props;\n    return (\n      <div className={`menu-container ${menuDisplayClass}`} ref={this.divRef}>\n        <button className=\"menu-button\" onClick={onMenuClick} type=\"button\">\n          <span className=\"menu-icon\">\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n          </span>\n        </button>\n        <div className=\"menu-nav\">\n          <div className=\"menu-nav-inner\">\n            <About />\n            <Contact />\n            {isLoggedIn\n              && (\n                <div>\n                  <AddEntry\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-entry'}\n                  />\n                  <AddLine\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-line'}\n                  />\n                </div>\n              )\n            }\n            <Login\n              setActiveMenuItem={this.setActiveMenuItem}\n              isActive={activeMenuItem === 'login'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMenu.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  menuDisplayClass: PropTypes.string.isRequired,\n  onMenuClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  return {\n    isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(Menu);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries, fetchTrainLines, hideDetail, hideMenu, showMenu } from '../actions';\nimport AtAGlance from '../components/ataglance/AtAGlance';\nimport Chart from '../components/chart/Chart';\nimport Detail from '../components/detail/Detail';\nimport Menu from '../components/menu/Menu';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n    dispatch(fetchTrainLines());\n  }\n\n  render() {\n    const { detailId, dispatch, entries, isDetailOpen, isMenuOpen } = this.props;\n\n    function onDetailClose() {\n      dispatch(hideDetail());\n    }\n\n    function onMenuClick() {\n      if (!isMenuOpen) {\n        dispatch(showMenu());\n      } else {\n        dispatch(hideMenu());\n      }\n    }\n\n    function getEntryById(id) {\n      return entries.find(entry => entry._id === id); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <div className=\"logo-wrapper\">\n            <img src={logo} className=\"logo-graphic\" alt=\"Trainspotted Logo\" />\n            <div className=\"logo-type\">Trainspotted</div>\n          </div>\n          <Menu\n            menuDisplayClass={isMenuOpen ? 'open' : 'closed'}\n            onMenuClick={onMenuClick}\n          />\n        </header>\n        <AtAGlance />\n        <Chart\n          entries={entries}\n        />\n        {isDetailOpen && getEntryById(detailId)\n          && (\n            <Detail\n              onDetailClose={onDetailClose}\n              data={getEntryById(detailId)}\n              entries={entries}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  detailId: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  isDetailOpen: PropTypes.bool,\n  isMenuOpen: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, entryDetail, menu } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    id: detailId,\n    isOpen: isDetailOpen,\n  } = entryDetail;\n  const {\n    isOpen: isMenuOpen,\n  } = menu;\n  return {\n    detailId,\n    entries,\n    isDetailOpen,\n    isMenuOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\n// console.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}