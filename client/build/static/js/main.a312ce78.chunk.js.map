{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/ataglance/DataFilter.jsx","js/utils/Formatting.js","js/utils/Weekdays.js","js/utils/DateUtils.js","js/selectors/index.js","js/components/ataglance/datasets/EngineValues.jsx","js/components/ataglance/datasets/OverviewValues.jsx","js/components/ataglance/datasets/ResightingValues.jsx","js/components/ataglance/datasets/ScheduleValues.jsx","js/components/ataglance/AtAGlance.jsx","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/utils/Months.js","js/components/chart/DateLine.jsx","js/components/chart/Chart.jsx","js/components/menu/AddEngine.jsx","js/components/detail/EditEntry.jsx","js/components/detail/EntryDetail.jsx","js/components/detail/ResightingDetail.jsx","js/components/menu/About.jsx","js/components/menu/AddEntry.jsx","js/components/menu/AddLine.jsx","js/components/menu/Contact.jsx","js/components/menu/Login.jsx","js/components/menu/Menu.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","entryAdded","json","type","data","showDetail","contentType","hideDetail","showMenu","hideMenu","addEntry","_ref2","date","direction","engines","id","time","notes","dispatch","fetch","method","headers","Headers","Accept","Content-Type","body","JSON","stringify","then","response","rootReducer","combineReducers","entryData","state","arguments","length","undefined","isFetching","items","detail","action","Object","objectSpread","isOpen","menu","trainLines","userStatus","isLoggedIn","isLoginError","success","DataFilter","onFilterClick","_this$props","_this","props","label","_this$props2","this","isActive","react_default","a","createElement","key","className","onClick","Component","formatDateForDB","arr","split","concat","formatTimeForDB","timeValues","hours","parseInt","amPm","formatDateForSelect","value","getDate","toString","month","getMonth","getFullYear","formatTimeForSelect","mins","_arr","slicedToArray","getHours","getMinutes","createEntryId","dateArr","timeArr","getRandomNumberKey","Math","round","random","Weekdays","full","short","index","addMonths","months","d","setMonth","setDate","convertTimeToMinutesElapsed","timeVals","indexOf","getEntryData","getTrainlines","groupAllEntriesByDayAndTime","createSelector","groups","map","entry","engine","push","line","day","Date","getDay","color","find","name","reduce","acc","current","groupItem","values","filter","occurance","g","sort","b","localeCompare","getResightings","allEntryEngines","forEach","number","entryId","_id","duplicates","Set","size","add","match","dates","getLineWithMostSightings","getInitialSightingMonthStart","days","weekdays","toConsumableArray","initial","getInitialSightingDate","EngineValues","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tableRef","React","createRef","_this2","setTimeout","classList","remove","entries","_this3","initialSightingDate","lineWithMostSightings","trainLineList","maxEngineCt","ceil","xAxisInterval","dataSet","ct","ref","trainLine","bgStyle","backgroundColor","transform","getEngineCountByLine","style","item","connect","OveviewValues","north","perc","Number","isNaN","resightings","c","array","date1","date2","min","distinctResightings","getDistinctResightings","mostSightingsByLine","avgResightingDays","minResightingDays","Infinity","mostSightingsByEngine","sightingEngine","sightingCt","getDirectionPercentage","max","ResightingValues","yAxis","scrollIndicatorRef","handleScroll","bind","assertThisInitialized","scrollIndicatorTimer","removeEventListener","querySelector","addEventListener","window","clearInterval","initialSightingMonthStart","endDate","startDate","now","getRoundedEndDate","i","substr","getMonthsByInterval","prevLeft","isPrevLeft","onEntryClick","e","left","getDatePositionInRange","lineStyle","width","onKeyDown","bindActionCreators","ScheduleValues","groupStyle","top","itemStyle","height","defaultProps","AtAGlance","activeSet","handleDataSetChange","dataSets","setState","ataglance_DataFilter","OverviewValues","datasets_ResightingValues","datasets_EngineValues","datasets_ScheduleValues","Entry","divRef","pct","toFixed","setAttribute","EntriesForDate","entryHeight","chart_Entry","Months","DateLine","activeMonth","isMonthLabel","year","data-month","chart_EntriesForDate","Chart","currentMonth","chartWrapperRef","scrollTop","pageYOffset","document","documentElement","querySelectorAll","parentNode","getBoundingClientRect","getAttribute","chart_DateLine","replace","AddEngine","location","handleLineChange","handleNumberChange","handleLocationChange","isEngineValid","handleRemove","updateEngines","_this$state","event","target","removeEngine","_this$state2","_this$state3","htmlFor","onChange","EditEntry","idIter","isEntryValid","handleDateChange","handleTimeChange","handleDirectionChange","handleNotesChange","handleSubmit","handleCancel","showForm","hideForm","addEngine","isValid","preventDefault","order","_ref3","entryDeleted","removeEntry","findIndex","splice","errorDisplayClass","onSubmit","menu_AddEngine","EntryDetail","loadedClass","onResightingClick","timer","trainline","sighting","onDetailClose","role","formatDate","ampm","formatTime","cellPadding","cellSpacing","matches","findMatches","detail_EditEntry","ResightingDetail","console","log","About","AddEntry","displayForm","reset","today","setActiveMenuItem","AddLine","lineName","lineShortName","lineColor","handleLineNameChange","handleLineShortNameChange","handleLineColorChange","_ref4","addTrainLine","toLowerCase","Contact","href","Login","user","password","handleUserChange","handlePasswordChange","logout","_ref","loginAttempt","login","Menu","activeMenuItem","menuDisplayClass","clearTimeout","onMenuClick","menu_About","menu_Contact","menu_AddEntry","menu_AddLine","menu_Login","App","receiveEntries","receiveTrainLines","detailContentType","detailData","isDetailOpen","isMenuOpen","src","logo","alt","menu_Menu","ataglance_AtAGlance","chart_Chart","detail_EntryDetail","detail_ResightingDetail","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","render","es","containers_App","getElementById"],"mappings":"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","file":"static/js/main.a312ce78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const SUBMIT_TRAIN_LINE = 'SUBMIT_TRAIN_LINE';\nexport const TRAIN_LINE_ADDED = 'TRAIN_LINE_ADDED';\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\nexport const REQUEST_TRAIN_LINES = 'REQUEST_LINES';\nexport const RECEIVE_TRAIN_LINES = 'RECEIVE_LINES';\nexport const SUBMIT_ENTRY = 'SUBMIT_ENTRY';\nexport const ENTRY_ADDED = 'ENTRY_ADDED';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\nexport const ENTRY_DELETED = 'ENTRY_DELETED';\nexport const SHOW_DETAIL = 'SHOW_DETAIL';\nexport const HIDE_DETAIL = 'HIDE_DETAIL';\nexport const SHOW_MENU = 'SHOW_MENU';\nexport const HIDE_MENU = 'HIDE_MENU';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n});\n\nexport const requestTrainLines = () => ({\n  type: REQUEST_TRAIN_LINES,\n});\n\nexport const receiveTrainLines = json => ({\n  type: RECEIVE_TRAIN_LINES,\n  data: json,\n});\n\nexport const submitTrainLine = () => ({\n  type: SUBMIT_TRAIN_LINE,\n});\n\nexport const trainLineAdded = json => ({\n  type: TRAIN_LINE_ADDED,\n  data: json,\n});\n\nexport const submitEntry = () => ({\n  type: SUBMIT_ENTRY,\n});\n\nexport const entryAdded = json => ({\n  type: ENTRY_ADDED,\n  data: json,\n});\n\nexport const deleteEntry = () => ({\n  type: DELETE_ENTRY,\n});\n\nexport const entryDeleted = json => ({\n  type: ENTRY_DELETED,\n  data: json,\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n\nexport const fetchTrainLines = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestTrainLines());\n  return fetch('/getLines')\n    .then(response => response.json())\n    .then(json => dispatch(receiveTrainLines(json)));\n};\n\nexport const showDetail = (data, contentType) => ({\n  type: SHOW_DETAIL,\n  data,\n  contentType,\n});\n\nexport const hideDetail = () => ({\n  type: HIDE_DETAIL,\n});\n\nexport const showMenu = () => ({\n  type: SHOW_MENU,\n});\n\nexport const hideMenu = () => ({\n  type: HIDE_MENU,\n});\n\nexport const loginAttempt = json => ({\n  type: LOG_IN,\n  data: json,\n});\n\nexport const login = ({ user, password }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/login', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      user,\n      password,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(loginAttempt(json)));\n};\n\nexport const logout = () => ({\n  type: LOG_OUT,\n});\n\nexport const addEntry = ({ date, direction, engines, id, time, notes }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitEntry());\n  return fetch('/addEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      date,\n      time,\n      direction,\n      engines,\n      id,\n      notes,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const removeEntry = ({ id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(deleteEntry());\n  return fetch('/deleteEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryDeleted(json)));\n};\n\nexport const addTrainLine = ({ lineName, lineShortName, lineColor, id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitTrainLine());\n  return fetch('/addTrainLine', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      lineName,\n      lineShortName,\n      lineColor,\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  SUBMIT_TRAIN_LINE,\n  TRAIN_LINE_ADDED,\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n  REQUEST_TRAIN_LINES,\n  RECEIVE_TRAIN_LINES,\n  SUBMIT_ENTRY,\n  ENTRY_ADDED,\n  DELETE_ENTRY,\n  ENTRY_DELETED,\n  SHOW_DETAIL,\n  HIDE_DETAIL,\n  SHOW_MENU,\n  HIDE_MENU,\n  LOG_IN,\n  LOG_OUT,\n} from '../actions';\n\n\nconst entryData = (state = {\n  isFetching: false,\n  items: [],\n  detail: {},\n  id: '',\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n    case SUBMIT_ENTRY:\n    case DELETE_ENTRY:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n    case ENTRY_ADDED:\n    case ENTRY_DELETED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst detail = (state = {\n  isOpen: false,\n  data: {},\n  contentType: '',\n}, action) => {\n  switch (action.type) {\n    case SHOW_DETAIL:\n      return {\n        ...state,\n        isOpen: true,\n        data: action.data,\n        contentType: action.contentType,\n      };\n    case HIDE_DETAIL:\n      return {\n        ...state,\n        isOpen: false,\n        data: action.data,\n        contentType: action.contentType,\n      };\n    default:\n      return state;\n  }\n};\n\nconst menu = (state = {\n  isOpen: false,\n}, action) => {\n  switch (action.type) {\n    case SHOW_MENU:\n      return {\n        ...state,\n        isOpen: true,\n      };\n    case HIDE_MENU:\n      return {\n        ...state,\n        isOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userStatus = (state = {\n  isLoggedIn: false,\n  isLoginError: false,\n  response: [{ success: 'error' }],\n}, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      if (action.data[0].success === 'success') {\n        return {\n          ...state,\n          isLoggedIn: true,\n          isLoginError: false,\n          response: action.data,\n        };\n      }\n      return {\n        ...state,\n        isLoggedIn: false,\n        isLoginError: true,\n        response: action.data,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst trainLines = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_TRAIN_LINES:\n    case SUBMIT_TRAIN_LINE:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_TRAIN_LINES:\n    case TRAIN_LINE_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryData,\n  detail,\n  menu,\n  trainLines,\n  userStatus,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DataFilter extends Component {\n  onFilterClick = () => {\n    const { label, onFilterClick } = this.props;\n    onFilterClick(label);\n  }\n\n  render() {\n    const { isActive, label } = this.props;\n    return (\n      <li key={label}>\n        <button className={isActive ? 'active' : ''} onClick={this.onFilterClick} type=\"button\">\n          <span>{label}</span>\n        </button>\n      </li>\n    );\n  }\n}\n\nDataFilter.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  onFilterClick: PropTypes.func.isRequired,\n};\n\nexport default DataFilter;\n","export function formatDate(date, months) {\n  const arr = date.split('/');\n  return `${months[arr[0] - 1]} ${arr[1]}, ${arr[2]}`;\n}\n\nexport function formatTime(time) {\n  const arr = time.split(':');\n  let ampm = 'a.m.';\n  if (time.indexOf('PM') !== -1) {\n    ampm = 'p.m.';\n  }\n  return `${arr[0]}:${arr[1]} ${ampm}`;\n}\n\nexport function formatDateForDB(date) {\n  const arr = date.split('-');\n  return `${arr[1]}/${arr[2]}/${arr[0]}`;\n}\n\nexport function formatTimeForDB(time) {\n  const timeValues = time.split(':');\n  let hours = parseInt(timeValues[0], 10);\n  let amPm = 'AM';\n  if (hours > 12) {\n    hours -= 12;\n    amPm = 'PM';\n  } else if (hours === 12) {\n    amPm = 'PM';\n  } else if (hours === 0) {\n    hours = 12;\n  }\n  return `${hours}:${timeValues[1]}:00 ${amPm}`;\n}\n\nexport function formatDateForSelect(value) {\n  let date = value.getDate().toString();\n  if (date.length === 1) {\n    date = `0${date}`;\n  }\n  let month = (value.getMonth() + 1).toString();\n  if (month.length === 1) {\n    month = `0${month}`;\n  }\n  return `${value.getFullYear()}-${month}-${date}`;\n}\n\nexport function formatTimeForSelect(value) {\n  let hours = '';\n  let mins = '';\n  if (typeof value === 'string') {\n    const arr = value.split(':');\n    const [arrHours, arrMins] = arr;\n    hours = arrHours;\n    mins = arrMins;\n  } else {\n    hours = value.getHours().toString();\n    mins = value.getMinutes().toString();\n  }\n  if (hours.length === 1) {\n    hours = `0${hours}`;\n  }\n  if (mins.length === 1) {\n    mins = `0${mins}`;\n  }\n  return `${hours}:${mins}`;\n}\n\nexport function createEntryId(date, time) {\n  const dateArr = date.split('-');\n  const timeArr = time.split(':');\n  return `${dateArr[0]}${dateArr[1]}${dateArr[2]}${timeArr[0]}${timeArr[1]}`;\n}\n\nexport function getRandomNumberKey() {\n  return `key-${Math.round(Math.random() * 1000 * Math.random() * 1000 / Math.random() * 1000 + Math.random() * 1000)}`;\n}\n","const Weekdays = [\n  {\n    full: 'Sunday',\n    short: 'S',\n    index: 0,\n  },\n  {\n    full: 'Monday',\n    short: 'M',\n    index: 1,\n  },\n  {\n    full: 'Tuesday',\n    short: 'T',\n    index: 2,\n  },\n  {\n    full: 'Wednesday',\n    short: 'W',\n    index: 3,\n  },\n  {\n    full: 'Thursday',\n    short: 'T',\n    index: 4,\n  },\n  {\n    full: 'Friday',\n    short: 'F',\n    index: 5,\n  },\n  {\n    full: 'Saturday',\n    short: 'S',\n    index: 6,\n  },\n];\n\nexport default Weekdays;\n","/* eslint-disable no-console */\nfunction addMonths(date, months) {\n  const d = date.getDate();\n  date.setMonth(date.getMonth() + months);\n  if (date.getDate() !== d) {\n    date.setDate(0);\n  }\n  return date;\n}\n\nfunction getRoundedEndDate(startDate, now) {\n  let endDate = addMonths(now, 1);\n  let months = (endDate.getFullYear() - startDate.getFullYear()) * 12;\n  months -= startDate.getMonth();\n  months += endDate.getMonth() + 2;\n  if (months % 2 !== 0) {\n    endDate = addMonths(now, 1);\n  }\n  return new Date(`${endDate.getMonth() + 1}/1/${endDate.getFullYear()}`);\n}\n\nfunction getMonthsByInterval(startDate, now) {\n  // Get number of months between then and now\n  let months = (now.getFullYear() - startDate.getFullYear()) * 12;\n  months -= startDate.getMonth();\n  months += now.getMonth() + 1;\n  const arr = [];\n  let i = 0;\n  let date = startDate;\n  do {\n    arr.push(`${date.getMonth() + 1}/${date.getFullYear().toString().substr(2)}`);\n    date = addMonths(date, 2);\n    i += 1;\n  }\n  while (i <= months / 2);\n  return arr;\n}\n\nfunction getDaysBetweenDates(date1, date2) {\n  return Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\n}\n\nfunction getDatePositionInRange(date, startDate, now) {\n  return ((date - startDate) / (now - startDate));\n}\n\nfunction convertTimeToMinutesElapsed(time) {\n  const timeVals = time.split(':');\n  let mins = parseInt(timeVals[1], 10);\n  if (timeVals[2].indexOf('PM') !== -1 && timeVals[0] !== '12') {\n    mins += (parseInt(timeVals[0], 10) + 12) * 60;\n  } else {\n    mins += parseInt(timeVals[0], 10) * 60;\n  }\n  return mins;\n}\n\nexport {\n  convertTimeToMinutesElapsed,\n  getRoundedEndDate,\n  getMonthsByInterval,\n  getDaysBetweenDates,\n  getDatePositionInRange,\n};\n/* eslint-enable no-console */\n","/* eslint-disable no-console, arrow-body-style */\nimport { createSelector } from 'reselect';\nimport weekdays from '../utils/Weekdays';\nimport { convertTimeToMinutesElapsed } from '../utils/DateUtils';\n\n\nconst getEntryData = state => state.entryData.items;\nconst getTrainlines = state => state.trainLines.items;\n\nconst groupAllEntriesByDayAndTime = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    // Build list of all engines with entry keys, dates, colors\n    const groups = [];\n    entryData.map(entry => entry.engines.map(engine => groups.push({\n      line: engine.line,\n      day: new Date(entry.date).getDay(),\n      time: `${Math.round(convertTimeToMinutesElapsed(entry.time) / 14.4)}%`,\n      color: trainLines.find(line => engine.line === line.name).color,\n    })));\n    return groups\n      .reduce((acc, current) => {\n        const match = acc.find(entry => entry.day === current.day && entry.time === current.time);\n        // If match is false, then return accumulator w/ match addeed\n        if (!match) {\n          return acc.concat([current]);\n        }\n        // If exists, then just return accumulator as is\n        return acc;\n      }, [])\n      .map(groupItem => ({\n        ...groupItem,\n        values: groups\n          .filter(entry => entry.day === groupItem.day && entry.time === groupItem.time)\n          // Add number of engines w/ same line to property in each group item\n          .map(entry => ({\n            ...entry,\n            occurance: `${groups.filter(g => entry.day === g.day && entry.time === g.time && g.line === entry.line).length / groups.filter(g => entry.day === g.day && entry.time === g.time).length * 100}%`,\n          }))\n          // Remove duplicate lines\n          .reduce((acc, current) => {\n            const match = acc.find(entry => entry.line === current.line);\n            // If match is false, then return accumulator w/ match addeed\n            if (!match) {\n              return acc.concat([current]);\n            }\n            // If exists, then just return accumulator as is\n            return acc;\n          }, [])\n          // Sort alphabetically\n          .sort((a, b) => a.line.localeCompare(b.line)),\n      }));\n  },\n);\n\nconst getResightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    // Build list of all engines with entry keys, dates, colors\n    const allEntryEngines = [];\n    entryData.forEach(entry => entry.engines.forEach(engine => allEntryEngines.push({\n      engine: `${trainLines.find(line => engine.line === line.name).short}, ${engine.number}`,\n      entryId: entry._id, /* eslint-disable-line no-underscore-dangle */\n      date: entry.date,\n      color: trainLines.find(line => engine.line === line.name).color,\n    })));\n    // Find all engines seen more than once\n    const duplicates = new Set();\n    const resightings = allEntryEngines\n      .filter(entry => duplicates.size === duplicates.add(entry.engine).size)\n      // But there can be more than 2 matches... so now need to remove duplicates\n      .reduce((acc, current) => {\n        const match = acc.find(entry => entry.engine === current.engine);\n        // If match is false, then return accumulator w/ match added\n        if (!match) {\n          return acc.concat([current]);\n        }\n        // If exists, then just return accumulator as is\n        return acc;\n      }, [])\n      .map((match) => {\n        // Find all sighting dates\n        const dates = allEntryEngines\n          .filter(entry => match.engine === entry.engine)\n          .map(entry => ({ date: entry.date, entryId: entry.entryId }))\n          .sort((a, b) => new Date(a.date) - new Date(b.date));\n        return {\n          engine: match.engine,\n          dates,\n          entryId: match.entryId,\n          color: match.color,\n        };\n      })\n      .sort((a, b) => new Date(a.dates[0].date) - new Date(b.dates[0].date));\n    return resightings;\n  },\n);\n\nconst getLineWithMostSightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    return trainLines\n      .map(line => ({\n        name: line.name,\n        value: entryData.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name).length), 0),\n      }))\n      .sort((a, b) => b.value - a.value)[0];\n  },\n);\n\nconst getLinesByDayOfWeek = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    return trainLines\n      .map(line => ({\n        name: line.name,\n        days: weekdays\n          .map(day => ({\n            full: day.full,\n            short: day.short,\n            index: day.index,\n            value: entryData.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name && new Date(b.date).getDay() === day.index).length), 0),\n          })),\n      }));\n  },\n);\n\nconst getInitialSightingMonthStart = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData) => {\n    const dates = [...entryData].sort((a, b) => new Date(a.date) - new Date(b.date));\n    // Get 1st day of the start month\n    const initial = new Date(dates[0].date);\n    // return initial;\n    return `${initial.getMonth() + 1}/1/${initial.getFullYear()}`;\n  },\n);\n\nconst getInitialSightingDate = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData) => {\n    const dates = [...entryData].sort((a, b) => new Date(a.date) - new Date(b.date));\n    // Get 1st day of the start month\n    const initial = new Date(dates[0].date);\n    // return initial;\n    return `${initial.getMonth() + 1}/${initial.getDate()}/${initial.getFullYear()}`;\n  },\n);\n\nexport {\n  getInitialSightingDate,\n  getInitialSightingMonthStart,\n  getLinesByDayOfWeek,\n  getLineWithMostSightings,\n  getResightings,\n  groupAllEntriesByDayAndTime,\n};\n/* eslint-enable no-console, arrow-body-style */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { getInitialSightingDate, getLineWithMostSightings } from '../../../selectors';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRef = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.tableRef.current.classList.remove('initial-state');\n    }, 100);\n  }\n\n  getEngineCountByLine(line) {\n    const { entries } = this.props;\n    return entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line).length), 0);\n  }\n\n  render() {\n    const { entries, initialSightingDate, lineWithMostSightings, trainLineList } = this.props;\n    // Get line w/ max number of entries, round to nearest 100\n    // Divide by 10 (start at 0)\n    const maxEngineCt = Math.ceil(lineWithMostSightings.value / 100) * 100;\n    const xAxisInterval = maxEngineCt / 10;\n    const dataSet = [0];\n    let ct = 0;\n    do {\n      ct += xAxisInterval;\n      dataSet.push(ct);\n    }\n    while (ct < maxEngineCt);\n    return (\n      <div className=\"data-table engine-values-table initial-state\" ref={this.tableRef}>\n        <div className=\"table-title\">\n          <h3>\n            { entries.reduce((a, b) => (a + b.engines.length), 0) }\n            &nbsp;diesel engines have been observed since&nbsp;\n            { initialSightingDate }\n          </h3>\n        </div>\n        <div className=\"y-axis\">\n          {\n            trainLineList.map((trainLine) => {\n              const bgStyle = {\n                backgroundColor: trainLine.color,\n                transform: `scaleX(${this.getEngineCountByLine(trainLine.name) / maxEngineCt})`,\n              };\n              return (\n                <div className=\"y-axis-row\" key={trainLine.id}>\n                  <div className=\"row-label\">{trainLine.name}</div>\n                  <div className=\"row-axis\" />\n                  <div className=\"value-display\" style={bgStyle} />\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  initialSightingDate: PropTypes.string.isRequired,\n  lineWithMostSightings: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.number,\n  }),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, trainLines } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const initialSightingDate = getInitialSightingDate(state);\n  const lineWithMostSightings = getLineWithMostSightings(state);\n  return {\n    entries,\n    initialSightingDate,\n    lineWithMostSightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console, no-useless-constructor */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDaysBetweenDates } from '../../../utils/DateUtils';\nimport { getLineWithMostSightings, getResightings } from '../../../selectors';\n\nclass OveviewValues extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getDirectionPercentage() {\n    const { entries } = this.props;\n    const north = entries.filter(entry => entry.direction === 'north');\n    const perc = Math.round(north.length / entries.length * 100);\n    return `${Number.isNaN(perc) ? '...' : perc}%`;\n  }\n\n  getLineWithMostSightings() {\n    const { entries, trainLineList } = this.props;\n    return trainLineList\n      .map(line => ({\n        name: line.name,\n        value: entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name).length), 0),\n      }))\n      .sort((a, b) => b.value - a.value)[0];\n  }\n\n  getDistinctResightings() {\n    const { resightings } = this.props;\n    // Need to create a second array because there are more resightings,\n    // than items in the resightings array (one engine can have more than\n    // one resighting...\n    const arr = [];\n    resightings\n      // It's actually fine, prob somewhat inefficient, if we're looking\n      // for the duration of the last item in the array and itself... it'll just be 0\n      .map(item => item.dates.reduce((a, b, c, array) => arr.push({ engine: item.engine, time: getDaysBetweenDates(new Date(b.date), new Date(array[Math.min(c + 1, array.length - 1)].date)) }), 0));\n    // Filter out all the 0's here\n    return arr.filter(item => item.time !== 0);\n  }\n\n  render() {\n    const { trainLineList, entries, lineWithMostSightings, resightings } = this.props;\n    const distinctResightings = this.getDistinctResightings();\n    let mostSightingsByLine = lineWithMostSightings;\n    if (!mostSightingsByLine) {\n      mostSightingsByLine = {\n        name: '',\n        value: '...',\n      };\n    }\n    let avgResightingDays = Math.round(distinctResightings.reduce((a, b) => (a + b.time), 0) / distinctResightings.length);\n    if (Number.isNaN(avgResightingDays)) {\n      avgResightingDays = 0;\n    }\n    let minResightingDays = distinctResightings.reduce((a, b) => Math.min(a, b.time), Infinity);\n    if (minResightingDays === Infinity) {\n      minResightingDays = 0;\n    }\n    let mostSightingsByEngine = [...resightings].sort((a, b) => b.dates.length - a.dates.length)[0];\n    let sightingEngine = {\n      line: '',\n      number: '',\n    };\n    let sightingCt = 0;\n    if (mostSightingsByEngine) {\n      sightingEngine = mostSightingsByEngine.engine;\n      sightingCt = mostSightingsByEngine.dates.length;\n      mostSightingsByEngine = entries.find(entry => entry._id === mostSightingsByEngine.entryId); /* eslint-disable-line no-underscore-dangle */\n      sightingEngine = mostSightingsByEngine.engines.find(engine => sightingEngine.indexOf(engine.number) !== -1);\n    }\n\n    return (\n      <div className=\"data-table\">\n        <div className=\"table-title\">\n          <h3>Overview of findings based on observational train data</h3>\n        </div>\n        <div className=\"table-values-grid\">\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ trainLineList.length }</div>\n            <div className=\"body-copy\">Different Freight Lines Observed</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.length }</div>\n            <div className=\"body-copy\">Number of Trains Observed</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.reduce((a, b) => (a + b.engines.length), 0) }</div>\n            <div className=\"body-copy\">Number of Diesel Engines</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ mostSightingsByLine.value }</div>\n            <div className=\"body-copy\">\n              { mostSightingsByLine.name }\n              &nbsp;is Observed Most Often\n            </div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ this.getDirectionPercentage() }</div>\n            <div className=\"body-copy\">Percentage of Trains Headed North</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ resightings.reduce((a, b) => a + b.dates.length - 1, 0) }</div>\n            <div className=\"body-copy\">Number of Engine Resightings*</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ avgResightingDays }</div>\n            <div className=\"body-copy\">Average Number of Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ minResightingDays }</div>\n            <div className=\"body-copy\">Fewest Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ distinctResightings.reduce((a, b) => Math.max(a, b.time), 0) }</div>\n            <div className=\"body-copy\">Most Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ sightingCt }</div>\n            <div className=\"body-copy\">\n              {sightingEngine.line}\n              &nbsp;\n              {sightingEngine.number}\n              &nbsp;Has the Most Resightings\n            </div>\n          </div>\n        </div>\n        <div className=\"table-notes\">\n          <p className=\"body-xsmall\">*Resightings are the engines I&rsquo;ve observed on multiple occasions. It&rsquo;s entirely possible, more so likely, that these and others have passed back and forth at off hours. Some other observations:</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nOveviewValues.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  lineWithMostSightings: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.number,\n  }),\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const resightings = getResightings(state);\n  const lineWithMostSightings = getLineWithMostSightings(state);\n  return {\n    entries,\n    lineWithMostSightings,\n    resightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(OveviewValues);\n/* eslint-enable no-console, no-useless-constructor */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDatePositionInRange, getMonthsByInterval, getRoundedEndDate } from '../../../utils/DateUtils';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { showDetail } from '../../../actions';\nimport { getResightings, getInitialSightingDate, getInitialSightingMonthStart } from '../../../selectors';\n\nclass ResightingValues extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRef = React.createRef();\n    this.yAxis = null;\n    this.scrollIndicatorRef = React.createRef();\n    this.handleScroll = this.handleScroll.bind(this);\n    this.scrollIndicatorTimer = null;\n  }\n\n  componentDidMount() {\n    this.scrollIndicatorTimer = setTimeout(() => {\n      this.scrollIndicatorRef.current.classList.add('hidden');\n      this.yAxis.removeEventListener('scroll', this.handleScroll);\n    }, 3000);\n    this.yAxis = this.tableRef.current.querySelector('.y-axis');\n    this.yAxis.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n    clearInterval(this.scrollIndicatorTimer);\n  }\n\n  handleScroll() {\n    this.scrollIndicatorRef.current.classList.add('hidden');\n    this.yAxis.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const { dispatch, entries, initialSightingDate, initialSightingMonthStart, resightings } = this.props;\n    const endDate = getRoundedEndDate(new Date(initialSightingMonthStart), new Date());\n    const dataSet = getMonthsByInterval(new Date(initialSightingMonthStart), endDate);\n    let prevLeft = '';\n    let isPrevLeft = false;\n\n    return (\n      <div className=\"data-table resightings-values-table\" ref={this.tableRef}>\n        <div className=\"table-title\">\n          <h3>\n            { resightings.reduce((a, b) => a + b.dates.length - 1, 0) }\n            &nbsp;repeated sightings of&nbsp;\n            { resightings.length }\n            &nbsp;engines since&nbsp;\n            { initialSightingDate }\n          </h3>\n        </div>\n        <div className=\"y-axis\">\n          {\n            resightings.map((entry) => {\n              prevLeft = '';\n              isPrevLeft = false;\n\n              return (\n                <div className=\"y-axis-row\" key={getRandomNumberKey()}>\n                  <div className=\"row-label\">{entry.engine}</div>\n                  <div className=\"row-axis\">\n                    {\n                      entry.dates.map((date) => {\n                        function onEntryClick() {\n                          dispatch(showDetail(entries.find(e => e._id === date.entryId), 'entry')); /* eslint-disable-line no-underscore-dangle */\n                        }\n                        const left = `${getDatePositionInRange(new Date(date.date), new Date(initialSightingMonthStart), endDate) * 100}%`;\n                        const bgStyle = {\n                          backgroundColor: entry.color,\n                          left,\n                        };\n                        const lineStyle = {\n                          backgroundColor: entry.color,\n                          left: prevLeft,\n                          width: `calc(${left} - ${prevLeft})`,\n                        };\n                        if (prevLeft !== '') {\n                          isPrevLeft = true;\n                        }\n                        prevLeft = left;\n                        return (\n                          <div key={getRandomNumberKey()}>\n                            <button\n                              className=\"sighting-marker\"\n                              onClick={onEntryClick}\n                              onKeyDown={onEntryClick}\n                              style={bgStyle}\n                              type=\"button\"\n                            >\n                              <span>{entry.engine.substr(entry.engine.indexOf(',') + 2)}</span>\n                            </button>\n                            {isPrevLeft\n                              && (\n                                <div\n                                  className=\"sighting-connector\"\n                                  style={lineStyle}\n                                />\n                              )\n                            }\n                          </div>\n                        );\n                      })\n                    }\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"scroll-indicator-icon\" ref={this.scrollIndicatorRef}>\n          <div />\n        </div>\n      </div>\n    );\n  }\n}\n\nResightingValues.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  initialSightingDate: PropTypes.string.isRequired,\n  initialSightingMonthStart: PropTypes.string.isRequired,\n  resightings: PropTypes.arrayOf(PropTypes.object),\n};\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const resightings = getResightings(state);\n  const initialSightingDate = getInitialSightingDate(state);\n  const initialSightingMonthStart = getInitialSightingMonthStart(state);\n  return {\n    entries,\n    initialSightingDate,\n    initialSightingMonthStart,\n    resightings,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResightingValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console, no-useless-constructor, react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport weekdays from '../../../utils/Weekdays';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { groupAllEntriesByDayAndTime } from '../../../selectors';\n\nclass ScheduleValues extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { dataSet, entries } = this.props;\n    return (\n      <div className=\"data-table schedule-values-table\">\n        <div className=\"table-title\">\n          <h3>Times during the week when the various freight train lines have been observed</h3>\n        </div>\n        <div className=\"y-axis\">\n          {\n            weekdays.map(day => (\n              <div className=\"y-axis-row\" key={day.index}>\n                <div className=\"row-label\">{day.full}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"scatterplot\">\n          {\n            entries.map((entry) => {\n              const groupStyle = {\n                left: entry.time,\n                top: `${40 * entry.day}px`,\n              };\n              return (\n                <button\n                  className=\"line-group\"\n                  key={getRandomNumberKey()}\n                  style={groupStyle}\n                  type=\"button\"\n                >\n                  {\n                    entry.values.map((line) => {\n                      const itemStyle = {\n                        backgroundColor: line.color,\n                        height: line.occurance,\n                      };\n                      return (\n                        <div\n                          className=\"line-group-item\"\n                          key={getRandomNumberKey()}\n                          style={itemStyle}\n                        />\n                      );\n                    })\n                  }\n                </button>\n              );\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nScheduleValues.defaultProps = {\n  dataSet: ['12 AM', '2 AM', '4AM', '6 AM', '8 AM', ' 10 AM', '12 PM', '2 PM', '4 PM', '6 PM', '8 PM', '10 PM', '12 AM'],\n};\n\nScheduleValues.propTypes = {\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n  entries: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const entries = groupAllEntriesByDayAndTime(state);\n  return {\n    entries,\n  };\n};\n\nexport default connect(mapStateToProps)(ScheduleValues);\n/* eslint-enable no-console, no-useless-constructor, react/prefer-stateless-function */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DataFilter from './DataFilter';\nimport EngineValues from './datasets/EngineValues';\nimport OverviewValues from './datasets/OverviewValues';\nimport ResightingValues from './datasets/ResightingValues';\nimport ScheduleValues from './datasets/ScheduleValues';\n\nclass AtAGlance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSet: {\n        label: '',\n        values: [],\n      },\n    };\n    this.handleDataSetChange = this.handleDataSetChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { dataSets } = this.props;\n    this.setState({\n      activeSet: dataSets[0],\n    });\n  }\n\n  handleDataSetChange(value) {\n    const { dataSets } = this.props;\n    const dataSet = dataSets.find(item => item.label === value);\n    this.setState({ activeSet: dataSet });\n  }\n\n  render() {\n    const { dataSets } = this.props;\n    const { activeSet } = this.state;\n    return (\n      <div className=\"at-a-glance\">\n        <div className=\"page-heading-divider\">\n          <h2 className=\"heading-lg\">At A Glance</h2>\n        </div>\n        <div className=\"aggregate-data-visualization-module\">\n          <div className=\"module-inner\">\n            <div className=\"data-filters\">\n              <ul className=\"data-filters-inner\">\n                {\n                  dataSets.map(item => (\n                    <DataFilter\n                      isActive={item.label === activeSet.label}\n                      key={item.label}\n                      label={item.label}\n                      onFilterClick={this.handleDataSetChange}\n                    />\n                  ))\n                }\n              </ul>\n            </div>\n            <div className=\"data-visualization\">\n              {activeSet.label === 'Overview'\n                && (\n                  <OverviewValues />\n                )\n              }\n              {activeSet.label === 'Resightings'\n                && (\n                  <ResightingValues />\n                )\n              }\n              {activeSet.label === 'Engines'\n                && (\n                  <EngineValues />\n                )\n              }\n              {activeSet.label === 'Schedule'\n                && (\n                  <ScheduleValues />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAtAGlance.defaultProps = {\n  dataSets: [\n    {\n      label: 'Overview',\n    },\n    {\n      label: 'Resightings',\n    },\n    {\n      label: 'Engines',\n    },\n    {\n      label: 'Schedule',\n    },\n  ],\n};\n\nAtAGlance.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default AtAGlance;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.onEntryClick = this.onEntryClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1) {\n      if (entry.time.indexOf('12:') === -1 || entry.time.indexOf('12:') > 0) {\n        arr[0] = parseInt(arr[0], 10) + 12;\n      }\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') === 0) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  onEntryClick() {\n    const { entry, dispatch } = this.props;\n    dispatch(showDetail(entry, 'entry')); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  render() {\n    const { entry } = this.props;\n    return (\n      <button\n        className=\"engine-manifest\"\n        ref={this.divRef}\n        type=\"button\"\n        onClick={this.onEntryClick}\n      >\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n        <span className=\"engine-details-button\">...</span>\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => { /* eslint-disable-line arrow-body-style */\n  return bindActionCreators(\n    {\n      showDetail,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapDispatchToProps)(Entry);\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date, entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","const Months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default Months;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\nimport months from '../../utils/Months';\n\nclass DateLine extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  render() {\n    const {\n      activeMonth,\n      date,\n      entries,\n      isMonthLabel,\n    } = this.props;\n    const month = months[date.split('/')[0] - 1];\n    const year = date.split('/')[2];\n\n    return (\n      <div className=\"date-line\" ref={this.divRef}>\n        {isMonthLabel\n          && (\n            <div className={`month-display ${`${month}-${year}` === activeMonth ? 'sticky' : ''}`} data-month={`${month}-${year}`}>\n              <span>{`${month} ${year}`}</span>\n            </div>\n          )\n        }\n        <div className=\"date-display\">\n          <span>{date.split('/')[1]}</span>\n        </div>\n        <EntriesForDate\n          date={date}\n          entries={entries}\n        />\n      </div>\n    );\n  }\n}\n\nDateLine.propTypes = {\n  activeMonth: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isMonthLabel: PropTypes.bool.isRequired,\n};\n\nexport default DateLine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DateLine from './DateLine';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMonth: '',\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n    this.currentMonth = -1;\n    this.chartWrapperRef = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    let month = '';\n    [].map.call(document.querySelectorAll('.month-display'), (item) => {\n      if (item.parentNode.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        // Should set the active month to whatever the last item less than scrollTop is...\n        month = item.getAttribute('data-month');\n      }\n    });\n    this.setState({ activeMonth: month });\n    //\n    if (this.chartWrapperRef !== null) {\n      if (this.chartWrapperRef.current.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        this.chartWrapperRef.current.classList.add('sticky');\n      } else {\n        this.chartWrapperRef.current.classList.remove('sticky');\n      }\n    }\n  }\n\n  render() {\n    const { entries } = this.props;\n    const { activeMonth } = this.state;\n    const dates = [...new Set(entries.map(entry => entry.date))];\n    let isMonthLabel = false;\n\n    return (\n      <div className=\"train-chart-wrapper\" ref={this.chartWrapperRef}>\n        <div className=\"page-heading-divider fixed-page-heading-divider\">\n          <h2 className=\"heading-lg\">Sightings</h2>\n        </div>\n        <div className=\"train-chart\">\n          <div className=\"x-axis-header clearfix\">\n            <div className=\"page-heading-divider\">\n              <h2 className=\"heading-lg\">Sightings</h2>\n            </div>\n            <ul>\n              <li><span>12 AM</span></li>\n              <li><span>2 AM</span></li>\n              <li><span>4 AM</span></li>\n              <li><span>6 AM</span></li>\n              <li><span>8 AM</span></li>\n              <li><span>10 AM</span></li>\n              <li><span>12 PM</span></li>\n              <li><span>2 PM</span></li>\n              <li><span>4 PM</span></li>\n              <li><span>6 PM</span></li>\n              <li><span>8 PM</span></li>\n              <li><span>10 PM</span></li>\n            </ul>\n          </div>\n          <div className=\"time-table\">\n            <div className=\"month-bar\" />\n            {\n              dates.map((date) => {\n                if (this.currentMonth !== date.split('/')[0]) {\n                  this.currentMonth = date.split('/')[0]; /* eslint-disable-line prefer-destructuring */\n                  isMonthLabel = true;\n                } else {\n                  isMonthLabel = false;\n                }\n                return (\n                  <DateLine\n                    activeMonth={activeMonth}\n                    key={date.replace(/\\//, '')}\n                    date={date}\n                    entries={entries}\n                    isMonthLabel={isMonthLabel}\n                  />\n                );\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      line: '',\n      location: '',\n      number: '',\n    };\n    this.handleLineChange = this.handleLineChange.bind(this);\n    this.handleNumberChange = this.handleNumberChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.isEngineValid = this.isEngineValid.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    const { line, location, number } = props;\n    this.setState({\n      line,\n      location,\n      number,\n    });\n  }\n\n  componentDidUpdate() {\n    const { id, updateEngines } = this.props;\n    const { line, location, number } = this.state;\n    updateEngines(id, this.isEngineValid(), line, location, number);\n  }\n\n  handleLineChange(event) {\n    this.setState({ line: event.target.value });\n  }\n\n  handleNumberChange(event) {\n    this.setState({ number: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleRemove() {\n    const { id, removeEngine } = this.props;\n    removeEngine(id);\n  }\n\n  isEngineValid() {\n    const { line, location, number } = this.state;\n    if (line === '' || location === '' || number === '') {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const { line, location, number } = this.state;\n    return (\n      <div className=\"flex-row add-engine-row\">\n        <label className=\"form-label form-select-label form-label-line\" htmlFor=\"line\">\n          <span>Line</span>\n          <select className=\"form-select\" id=\"line\" name=\"line\" value={line} onChange={this.handleLineChange}>\n            <option value=\"\">Select</option>\n            {\n              trainLineList.map(trainLine => (\n                <option value={trainLine.name} key={trainLine.id}>{trainLine.short}</option>\n              ))\n            }\n          </select>\n        </label>\n        <label className=\"form-label form-label-number\" htmlFor=\"number\">\n          <span>Number</span>\n          <input className=\"form-input\" id=\"number\" name=\"number\" type=\"number\" value={number} onChange={this.handleNumberChange} />\n        </label>\n        <label className=\"form-label form-select-label form-label-location\" htmlFor=\"location\">\n          <span>Location</span>\n          <select className=\"form-select\" id=\"location\" name=\"location\" value={location} onChange={this.handleLocationChange}>\n            <option value=\"\">Select</option>\n            <option value=\"front\">Front</option>\n            <option value=\"middle\">Middle</option>\n            <option value=\"end\">End</option>\n          </select>\n        </label>\n        <button className=\"remove-button\" type=\"button\" onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n\nAddEngine.propTypes = {\n  id: PropTypes.string.isRequired,\n  line: PropTypes.string,\n  location: PropTypes.string,\n  number: PropTypes.string,\n  removeEngine: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  updateEngines: PropTypes.func.isRequired,\n};\n\nexport default AddEngine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from '../menu/AddEngine';\nimport { addEntry, removeEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass EditEntry extends Component {\n  constructor(props) {\n    super(props);\n    const { entryData } = this.props;\n    // Map id property to engine objects\n    entryData.engines = entryData.engines.map((engine, index) => ({ ...engine, id: `engine-no-${index}` }));\n    // State defaults\n    this.state = {\n      date: formatDateForSelect(new Date(entryData.date)),\n      direction: entryData.direction,\n      engines: entryData.engines,\n      idIter: entryData.engines.length,\n      isActive: false,\n      isEntryValid: true,\n      notes: entryData.notes,\n      time: formatTimeForSelect(entryData.time),\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.showForm = this.showForm.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      this.hideForm();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel() {\n    this.hideForm();\n  }\n\n  handleRemove() {\n    const { dispatch, entryData } = this.props;\n    this.hideForm();\n    dispatch(removeEntry({\n      id: entryData._id, /* eslint-disable-line no-underscore-dangle */\n    }));\n  }\n\n  showForm() {\n    this.setState({ isActive: true });\n  }\n\n  hideForm() {\n    this.setState({ isActive: false });\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const {\n      date,\n      direction,\n      engines,\n      isActive,\n      isEntryValid,\n      notes,\n      time,\n    } = this.state;\n\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div className=\"form-wrapper\">\n        {\n          isActive\n            ? (\n              <button className=\"edit-entry-button\" onClick={this.hideForm} type=\"button\">\n                <div>\n                  <span className=\"text-button\">Close Edit</span>\n                </div>\n              </button>\n            ) : (\n              <button className=\"edit-entry-button\" onClick={this.showForm} type=\"button\">\n                <div>\n                  <span className=\"text-button\">Edit Entry</span>\n                </div>\n              </button>\n            )\n        }\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button\" type=\"submit\">Update Entry</button>\n            <button className=\"urgent-button\" type=\"button\" onClick={this.handleRemove}>Remove Entry</button>\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error updating the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nEditEntry.propTypes = {\n  dispatch: PropTypes.func,\n  entryData: PropTypes.shape({\n    date: PropTypes.string,\n    direction: PropTypes.string,\n    engines: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.string,\n    notes: PropTypes.string,\n    number: PropTypes.number,\n    time: PropTypes.string,\n    _id: PropTypes.string,\n  }),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EditEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport EditEntry from './EditEntry';\nimport months from '../../utils/Months';\nimport { showDetail } from '../../actions';\nimport { formatDate, formatTime } from '../../utils/Formatting';\nimport { getResightings } from '../../selectors';\n\nclass EntryDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n    this.onResightingClick = this.onResightingClick.bind(this);\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  onResightingClick(line, number, engines) {\n    const { dispatch } = this.props;\n    dispatch(showDetail({ line, number, engines }, 'resighting'));\n  }\n\n  findMatches(trainline, number) {\n    const { resightings, trainLineList } = this.props;\n    const engine = `${trainLineList.find(line => trainline === line.name).short}, ${number}`;\n    const sighting = resightings.find(entry => entry.engine === engine);\n    if (sighting) {\n      return sighting.dates;\n    }\n    return null;\n  }\n\n  render() {\n    const { onDetailClose, data, isLoggedIn } = this.props;\n    const { loadedClass } = this.state;\n\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"header-title\">\n                Entry No.&nbsp;\n                {data.number}\n              </span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">\n                {`${data.engines.length} engine train observed on ${formatDate(data.date, months)} at ${formatTime(data.time)} heading ${data.direction}.`}\n              </div>\n              <div className=\"detail-subhead\">Engines</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Ord.</th>\n                    <th>Line</th>\n                    <th>No.</th>\n                    <th>Pos.</th>\n                    <th>Sightings</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data.engines.map((engine) => {\n                      const bgStyle = {\n                        backgroundColor: engine.color,\n                      };\n                      const matches = this.findMatches(engine.line, engine.number);\n                      return (\n                        <tr key={engine.number}>\n                          <td><span className=\"engine-color-indicator\" style={bgStyle}>{engine.order}</span></td>\n                          <td><span>{engine.line}</span></td>\n                          <td><span>{engine.number}</span></td>\n                          <td><span>{engine.location}</span></td>\n                          <td>\n                            {matches\n                              ? <button className=\"simple-text-button\" type=\"button\" onClick={() => this.onResightingClick(engine.line, engine.number, matches)}>{matches.length}</button>\n                              : <span>1</span>\n                            }\n                          </td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n              <div className=\"detail-subhead\">Notes</div>\n              <p className=\"detail-notes\">{data.notes}</p>\n            </div>\n          </div>\n          {isLoggedIn\n            && (\n              <EditEntry\n                entryData={data}\n              />\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nEntryDetail.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired,\n  }),\n  isLoggedIn: PropTypes.bool.isRequired,\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const { trainLines, userStatus } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  const resightings = getResightings(state);\n  return {\n    isLoggedIn,\n    resightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EntryDetail);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getRandomNumberKey } from '../../utils/Formatting';\n\nclass ResightingDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  render() {\n    const { onDetailClose, data, trainLineList } = this.props;\n    const { loadedClass } = this.state;\n    console.log(trainLineList);\n\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"header-title\">Engine Resightings</span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">\n                Sightings of&nbsp;\n                { data.line }\n                &nbsp;\n                { data.number }\n              </div>\n              <div className=\"detail-subhead\">Engines</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Engines in Train</th>\n                    <th>Ord.</th>\n                    <th>Pos.</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data.engines.map((engine) => {\n                      console.log(engine);\n                      return (\n                        <tr key={getRandomNumberKey()}>\n                          <td><span>{engine.date}</span></td>\n                          <td><span>&nbsp;</span></td>\n                          <td><span>&nbsp;</span></td>\n                          <td><span>&nbsp;</span></td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nResightingDetail.propTypes = {\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    line: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps)(ResightingDetail);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst About = () => (\n  <div>\n    <div className=\"menu-nav-item\">About the Project</div>\n    <p>\n      The Milwaukee District North tracks sit just beyond the alley in my backyard.\n       During off-peak hours, freight trains are cleared to run along this stretch of the Metra corridor.\n       They rumble past my home office window at seemingly random intervals while I work and attempt to apply structure to this new phase of my career.\n    </p>\n    <p>\n      This project also brought me up to speed with React/Redux and was developed using the MERN stack.\n    </p>\n  </div>\n);\n\nexport default About;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from './AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n      }],\n      notes: '',\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-entry');\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { isActive, trainLineList } = this.props;\n    const { date, direction, engines, isEntryValid, notes, time } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add an Entry</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddEntry.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(AddEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTrainLine } from '../../actions';\n\nclass AddLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n      isEntryValid: true,\n    };\n    this.handleLineNameChange = this.handleLineNameChange.bind(this);\n    this.handleLineShortNameChange = this.handleLineShortNameChange.bind(this);\n    this.handleLineColorChange = this.handleLineColorChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleLineNameChange(event) {\n    this.setState({ lineName: event.target.value });\n  }\n\n  handleLineShortNameChange(event) {\n    this.setState({ lineShortName: event.target.value });\n  }\n\n  handleLineColorChange(event) {\n    this.setState({ lineColor: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n    } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    if (lineName === '') {\n      isValid = false;\n    }\n    if (isValid) {\n      dispatch(addTrainLine({\n        lineName,\n        lineShortName,\n        lineColor,\n        id: lineName.toLowerCase().replace(/\\s/, '-'),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    this.setState({\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-line');\n  }\n\n  render() {\n    const { isActive } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n      isEntryValid,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add a Train Line</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-line-name\" htmlFor=\"lineName\">\n            <span>Name</span>\n            <input className=\"form-input\" id=\"lineName\" name=\"lineName\" type=\"text\" value={lineName} onChange={this.handleLineNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-short-name\" htmlFor=\"lineShortName\">\n            <span>Short Name</span>\n            <input className=\"form-input\" id=\"lineShortName\" name=\"lineShortName\" type=\"text\" value={lineShortName} onChange={this.handleLineShortNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-color\" htmlFor=\"lineColor\">\n            <span>Color</span>\n            <input className=\"form-input\" id=\"lineColor\" name=\"lineColor\" type=\"text\" value={lineColor} onChange={this.handleLineColorChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Line</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddLine.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nexport default connect()(AddLine);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst Contact = () => (\n  <div>\n    <div className=\"menu-nav-item\">Contact</div>\n    <p>\n      jef.a.mayer(at)gmail.com\n      <br />\n      <a className=\"inline-link\" href=\"https://jefmayer.com\">jefmayer.com</a>\n    </p>\n  </div>\n);\n\nexport default Contact;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../actions';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleUserChange(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { user, password } = this.state;\n    event.preventDefault();\n    dispatch(login({ user, password })); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('login');\n  }\n\n  logout() {\n    const { dispatch, setActiveMenuItem } = this.props;\n    setActiveMenuItem('');\n    // Clear inputs\n    dispatch(logout());\n  }\n\n  render() {\n    const { isActive, isLoggedIn, isLoginError } = this.props;\n    const { user, password } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (isLoginError) {\n      errorDisplayClass = '';\n    }\n    return (\n      !isLoggedIn\n        ? (\n          <div>\n            <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Login</button>\n            <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n              <label className=\"form-label\" htmlFor=\"user\">\n                <span>Name</span>\n                <input className=\"form-input\" id=\"user\" name=\"user\" type=\"text\" value={user} onChange={this.handleUserChange} />\n              </label>\n              <label className=\"form-label\" htmlFor=\"password\">\n                <span>Password</span>\n                <input className=\"form-input\" id=\"password\" name=\"password\" type=\"password\" value={password} onChange={this.handlePasswordChange} />\n              </label>\n              <input className=\"submit-button\" type=\"submit\" value=\"Login\" />\n              <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n            </form>\n          </div>\n        ) : (\n          <button className=\"menu-nav-item menu-nav-button\" type=\"button\" onClick={this.logout}>Logout</button>\n        )\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isLoginError: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n    isLoginError,\n  } = userStatus;\n  return {\n    isLoggedIn,\n    isLoginError,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport About from './About';\nimport AddEntry from './AddEntry';\nimport AddLine from './AddLine';\nimport Contact from './Contact';\nimport Login from './Login';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMenuItem: '',\n    };\n    this.divRef = React.createRef();\n    this.setActiveMenuItem = this.setActiveMenuItem.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { menuDisplayClass } = this.props;\n    if (menuDisplayClass === 'closed') {\n      const timer = setTimeout(() => {\n        this.divRef.current.setAttribute('style', 'position:absolute;');\n        clearTimeout(timer);\n      }, 150);\n    } else {\n      this.divRef.current.setAttribute('style', 'position:fixed;');\n    }\n  }\n\n  setActiveMenuItem(name) {\n    this.setState({ activeMenuItem: name });\n  }\n\n  render() {\n    const { activeMenuItem } = this.state;\n    const { isLoggedIn, menuDisplayClass, onMenuClick } = this.props;\n    return (\n      <div className={`menu-container ${menuDisplayClass}`} ref={this.divRef}>\n        <button className=\"menu-button\" onClick={onMenuClick} type=\"button\">\n          <span className=\"menu-icon\">\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n          </span>\n        </button>\n        <div className=\"menu-nav\">\n          <div className=\"menu-nav-inner\">\n            <About />\n            <Contact />\n            {isLoggedIn\n              && (\n                <div>\n                  <AddEntry\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-entry'}\n                  />\n                  <AddLine\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-line'}\n                  />\n                </div>\n              )\n            }\n            <Login\n              setActiveMenuItem={this.setActiveMenuItem}\n              isActive={activeMenuItem === 'login'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMenu.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  menuDisplayClass: PropTypes.string.isRequired,\n  onMenuClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  return {\n    isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(Menu);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries, fetchTrainLines, hideDetail, hideMenu, showMenu } from '../actions';\nimport AtAGlance from '../components/ataglance/AtAGlance';\nimport Chart from '../components/chart/Chart';\nimport EntryDetail from '../components/detail/EntryDetail';\nimport ResightingDetail from '../components/detail/ResightingDetail';\nimport Menu from '../components/menu/Menu';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n    dispatch(fetchTrainLines());\n  }\n\n  render() {\n    const { detailContentType, detailData, dispatch, entries, isDetailOpen, isMenuOpen } = this.props;\n\n    function onDetailClose() {\n      dispatch(hideDetail());\n    }\n\n    function onMenuClick() {\n      if (!isMenuOpen) {\n        dispatch(showMenu());\n      } else {\n        dispatch(hideMenu());\n      }\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <div className=\"logo-wrapper\">\n            <img src={logo} className=\"logo-graphic\" alt=\"Trainspotted Logo\" />\n            <div className=\"logo-type\">Trainspotted</div>\n          </div>\n          <Menu\n            menuDisplayClass={isMenuOpen ? 'open' : 'closed'}\n            onMenuClick={onMenuClick}\n          />\n        </header>\n        <AtAGlance />\n        <Chart\n          entries={entries}\n        />\n        {isDetailOpen && detailContentType === 'entry'\n          && (\n            <EntryDetail\n              onDetailClose={onDetailClose}\n              data={detailData}\n            />\n          )\n        }\n        {isDetailOpen && detailContentType === 'resighting'\n          && (\n            <ResightingDetail\n              onDetailClose={onDetailClose}\n              data={detailData}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  detailContentType: PropTypes.string,\n  detailData: PropTypes.shape(),\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  isDetailOpen: PropTypes.bool,\n  isMenuOpen: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, detail, menu } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    contentType: detailContentType,\n    data: detailData,\n    isOpen: isDetailOpen,\n  } = detail;\n  const {\n    isOpen: isMenuOpen,\n  } = menu;\n  return {\n    detailData,\n    detailContentType,\n    entries,\n    isDetailOpen,\n    isMenuOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\n// console.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}