{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/ataglance/DataFilter.jsx","js/utils/Formatting.js","js/utils/Weekdays.js","js/selectors/index.js","js/components/ataglance/datasets/EngineValues.jsx","js/utils/DateUtils.js","js/components/ataglance/datasets/OverviewValues.jsx","js/components/ataglance/datasets/ResightingValues.jsx","js/components/ataglance/datasets/ScheduleValues.jsx","js/components/ataglance/AtAGlance.jsx","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/utils/Months.js","js/components/chart/DateLine.jsx","js/components/chart/Chart.jsx","js/components/menu/AddEngine.jsx","js/components/detail/EditEntry.jsx","js/components/detail/Detail.jsx","js/components/menu/About.jsx","js/components/menu/AddEntry.jsx","js/components/menu/AddLine.jsx","js/components/menu/Contact.jsx","js/components/menu/Login.jsx","js/components/menu/Menu.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","entryAdded","json","type","data","showDetail","id","hideDetail","showMenu","hideMenu","addEntry","_ref2","date","direction","engines","time","notes","dispatch","fetch","method","headers","Headers","Accept","Content-Type","body","JSON","stringify","then","response","rootReducer","combineReducers","entryData","state","arguments","length","undefined","isFetching","items","action","Object","objectSpread","entryDetail","isOpen","menu","trainLines","userStatus","isLoggedIn","isLoginError","success","DataFilter","onFilterClick","_this$props","_this","props","label","_this$props2","this","isActive","react_default","a","createElement","key","className","onClick","Component","formatDateForDB","arr","split","concat","formatTimeForDB","timeValues","hours","parseInt","amPm","formatDateForSelect","value","getDate","toString","month","getMonth","getFullYear","formatTimeForSelect","mins","_arr","slicedToArray","getHours","getMinutes","createEntryId","dateArr","timeArr","getRandomNumberKey","Math","round","random","Weekdays","full","short","index","getEntryData","getTrainlines","getAllEntriesWithDayAndTime","createSelector","console","log","forEach","entry","engine","push","find","line","name","number","entryId","_id","day","Date","getDay","color","offset","findIndex","getResightings","allEntryEngines","duplicates","Set","filter","size","add","reduce","acc","current","map","match","dates","sort","b","getLineWithMostSightings","EngineValues","days","weekdays","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tableRef","React","createRef","_this2","setTimeout","classList","remove","entries","_this3","lineWithMostSightings","trainLineList","maxEngineCt","ceil","xAxisInterval","dataSet","ct","ref","trainLine","bgStyle","backgroundColor","transform","getEngineCountByLine","style","item","connect","addMonths","months","d","setMonth","setDate","convertTimeToMinutesElapsed","timeVals","indexOf","OveviewValues","north","perc","Number","isNaN","resightings","c","array","date1","date2","min","distinctResightings","getDistinctResightings","mostSightingsByLine","avgResightingDays","minResightingDays","Infinity","mostSightingsByEngine","sightingEngine","sightingCt","getDirectionPercentage","max","ResightingValues","initialSightingDate","getInitialSightingDate","yAxis","scrollIndicatorRef","handleScroll","bind","assertThisInitialized","scrollIndicatorTimer","removeEventListener","querySelector","addEventListener","window","clearInterval","slice","initial","endDate","startDate","now","getRoundedEndDate","i","substr","getMonthsByInterval","prevLeft","isPrevLeft","onEntryClick","left","getDatePositionInRange","lineStyle","width","onKeyDown","bindActionCreators","ScheduleValues","top","marginTop","defaultProps","AtAGlance","activeSet","values","handleDataSetChange","dataSets","setState","ataglance_DataFilter","OverviewValues","datasets_ResightingValues","datasets_EngineValues","datasets_ScheduleValues","Entry","divRef","pct","toFixed","setAttribute","EntriesForDate","entryHeight","chart_Entry","Months","DateLine","activeMonth","isMonthLabel","year","data-month","chart_EntriesForDate","Chart","currentMonth","chartWrapperRef","scrollTop","pageYOffset","document","documentElement","querySelectorAll","parentNode","getBoundingClientRect","getAttribute","toConsumableArray","chart_DateLine","replace","AddEngine","location","handleLineChange","handleNumberChange","handleLocationChange","isEngineValid","handleRemove","updateEngines","_this$state","event","target","removeEngine","_this$state2","_this$state3","htmlFor","onChange","EditEntry","idIter","isEntryValid","handleDateChange","handleTimeChange","handleDirectionChange","handleNotesChange","handleSubmit","handleCancel","showForm","hideForm","addEngine","isValid","preventDefault","order","_ref3","entryDeleted","removeEntry","splice","errorDisplayClass","onSubmit","menu_AddEngine","Detail","loadedClass","timer","trainline","sighting","onDetailClose","role","formatDate","ampm","formatTime","cellPadding","cellSpacing","findMatches","detail_EditEntry","About","AddEntry","displayForm","reset","today","setActiveMenuItem","AddLine","lineName","lineShortName","lineColor","handleLineNameChange","handleLineShortNameChange","handleLineColorChange","_ref4","addTrainLine","toLowerCase","Contact","href","Login","user","password","handleUserChange","handlePasswordChange","logout","_ref","loginAttempt","login","Menu","activeMenuItem","menuDisplayClass","clearTimeout","onMenuClick","menu_About","menu_Contact","menu_AddEntry","menu_AddLine","menu_Login","App","receiveEntries","receiveTrainLines","detailId","isDetailOpen","isMenuOpen","getEntryById","src","logo","alt","menu_Menu","ataglance_AtAGlance","chart_Chart","detail_Detail","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","render","es","containers_App","getElementById"],"mappings":"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","file":"static/js/main.47cd1071.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const SUBMIT_TRAIN_LINE = 'SUBMIT_TRAIN_LINE';\nexport const TRAIN_LINE_ADDED = 'TRAIN_LINE_ADDED';\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\nexport const REQUEST_TRAIN_LINES = 'REQUEST_LINES';\nexport const RECEIVE_TRAIN_LINES = 'RECEIVE_LINES';\nexport const SUBMIT_ENTRY = 'SUBMIT_ENTRY';\nexport const ENTRY_ADDED = 'ENTRY_ADDED';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\nexport const ENTRY_DELETED = 'ENTRY_DELETED';\nexport const SHOW_DETAIL = 'SHOW_DETAIL';\nexport const HIDE_DETAIL = 'HIDE_DETAIL';\nexport const SHOW_MENU = 'SHOW_MENU';\nexport const HIDE_MENU = 'HIDE_MENU';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n});\n\nexport const requestTrainLines = () => ({\n  type: REQUEST_TRAIN_LINES,\n});\n\nexport const receiveTrainLines = json => ({\n  type: RECEIVE_TRAIN_LINES,\n  data: json,\n});\n\nexport const submitTrainLine = () => ({\n  type: SUBMIT_TRAIN_LINE,\n});\n\nexport const trainLineAdded = json => ({\n  type: TRAIN_LINE_ADDED,\n  data: json,\n});\n\nexport const submitEntry = () => ({\n  type: SUBMIT_ENTRY,\n});\n\nexport const entryAdded = json => ({\n  type: ENTRY_ADDED,\n  data: json,\n});\n\nexport const deleteEntry = () => ({\n  type: DELETE_ENTRY,\n});\n\nexport const entryDeleted = json => ({\n  type: ENTRY_DELETED,\n  data: json,\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n\nexport const fetchTrainLines = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestTrainLines());\n  return fetch('/getLines')\n    .then(response => response.json())\n    .then(json => dispatch(receiveTrainLines(json)));\n};\n\nexport const showDetail = id => ({\n  type: SHOW_DETAIL,\n  data: id,\n});\n\nexport const hideDetail = () => ({\n  type: HIDE_DETAIL,\n});\n\nexport const showMenu = () => ({\n  type: SHOW_MENU,\n});\n\nexport const hideMenu = () => ({\n  type: HIDE_MENU,\n});\n\nexport const loginAttempt = json => ({\n  type: LOG_IN,\n  data: json,\n});\n\nexport const login = ({ user, password }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/login', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      user,\n      password,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(loginAttempt(json)));\n};\n\nexport const addEntry = ({ date, direction, engines, id, time, notes }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitEntry());\n  return fetch('/addEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      date,\n      time,\n      direction,\n      engines,\n      id,\n      notes,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const removeEntry = ({ id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(deleteEntry());\n  return fetch('/deleteEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryDeleted(json)));\n};\n\nexport const addTrainLine = ({ lineName, lineShortName, lineColor, id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitTrainLine());\n  return fetch('/addTrainLine', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      lineName,\n      lineShortName,\n      lineColor,\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const logout = () => ({\n  type: LOG_OUT,\n});\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  SUBMIT_TRAIN_LINE,\n  TRAIN_LINE_ADDED,\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n  REQUEST_TRAIN_LINES,\n  RECEIVE_TRAIN_LINES,\n  SUBMIT_ENTRY,\n  ENTRY_ADDED,\n  DELETE_ENTRY,\n  ENTRY_DELETED,\n  SHOW_DETAIL,\n  HIDE_DETAIL,\n  SHOW_MENU,\n  HIDE_MENU,\n  LOG_IN,\n  LOG_OUT,\n} from '../actions';\n\n\nconst entryData = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n    case SUBMIT_ENTRY:\n    case DELETE_ENTRY:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n    case ENTRY_ADDED:\n    case ENTRY_DELETED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst entryDetail = (state = {\n  isOpen: false,\n  id: '',\n}, action) => {\n  switch (action.type) {\n    case SHOW_DETAIL:\n      return {\n        ...state,\n        isOpen: true,\n        id: action.data,\n      };\n    case HIDE_DETAIL:\n      return {\n        ...state,\n        isOpen: false,\n        id: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst menu = (state = {\n  isOpen: false,\n}, action) => {\n  switch (action.type) {\n    case SHOW_MENU:\n      return {\n        ...state,\n        isOpen: true,\n      };\n    case HIDE_MENU:\n      return {\n        ...state,\n        isOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userStatus = (state = {\n  isLoggedIn: false,\n  isLoginError: false,\n  response: [{ success: 'error' }],\n}, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      if (action.data[0].success === 'success') {\n        return {\n          ...state,\n          isLoggedIn: true,\n          isLoginError: false,\n          response: action.data,\n        };\n      }\n      return {\n        ...state,\n        isLoggedIn: false,\n        isLoginError: true,\n        response: action.data,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst trainLines = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_TRAIN_LINES:\n    case SUBMIT_TRAIN_LINE:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_TRAIN_LINES:\n    case TRAIN_LINE_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryData,\n  entryDetail,\n  menu,\n  trainLines,\n  userStatus,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DataFilter extends Component {\n  onFilterClick = () => {\n    const { label, onFilterClick } = this.props;\n    onFilterClick(label);\n  }\n\n  render() {\n    const { isActive, label } = this.props;\n    return (\n      <li key={label}>\n        <button className={isActive ? 'active' : ''} onClick={this.onFilterClick} type=\"button\">\n          <span>{label}</span>\n        </button>\n      </li>\n    );\n  }\n}\n\nDataFilter.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  onFilterClick: PropTypes.func.isRequired,\n};\n\nexport default DataFilter;\n","export function formatDate(date, months) {\n  const arr = date.split('/');\n  return `${months[arr[0] - 1]} ${arr[1]}, ${arr[2]}`;\n}\n\nexport function formatTime(time) {\n  const arr = time.split(':');\n  let ampm = 'a.m.';\n  if (time.indexOf('PM') !== -1) {\n    ampm = 'p.m.';\n  }\n  return `${arr[0]}:${arr[1]} ${ampm}`;\n}\n\nexport function formatDateForDB(date) {\n  const arr = date.split('-');\n  return `${arr[1]}/${arr[2]}/${arr[0]}`;\n}\n\nexport function formatTimeForDB(time) {\n  const timeValues = time.split(':');\n  let hours = parseInt(timeValues[0], 10);\n  let amPm = 'AM';\n  if (hours > 12) {\n    hours -= 12;\n    amPm = 'PM';\n  } else if (hours === 12) {\n    amPm = 'PM';\n  } else if (hours === 0) {\n    hours = 12;\n  }\n  return `${hours}:${timeValues[1]}:00 ${amPm}`;\n}\n\nexport function formatDateForSelect(value) {\n  let date = value.getDate().toString();\n  if (date.length === 1) {\n    date = `0${date}`;\n  }\n  let month = (value.getMonth() + 1).toString();\n  if (month.length === 1) {\n    month = `0${month}`;\n  }\n  return `${value.getFullYear()}-${month}-${date}`;\n}\n\nexport function formatTimeForSelect(value) {\n  let hours = '';\n  let mins = '';\n  if (typeof value === 'string') {\n    const arr = value.split(':');\n    const [arrHours, arrMins] = arr;\n    hours = arrHours;\n    mins = arrMins;\n  } else {\n    hours = value.getHours().toString();\n    mins = value.getMinutes().toString();\n  }\n  if (hours.length === 1) {\n    hours = `0${hours}`;\n  }\n  if (mins.length === 1) {\n    mins = `0${mins}`;\n  }\n  return `${hours}:${mins}`;\n}\n\nexport function createEntryId(date, time) {\n  const dateArr = date.split('-');\n  const timeArr = time.split(':');\n  return `${dateArr[0]}${dateArr[1]}${dateArr[2]}${timeArr[0]}${timeArr[1]}`;\n}\n\nexport function getRandomNumberKey() {\n  return `key-${Math.round(Math.random() * 1000 * Math.random() * 1000 / Math.random() * 1000 + Math.random() * 1000)}`;\n}\n","const Weekdays = [\n  {\n    full: 'Sunday',\n    short: 'S',\n    index: 0,\n  },\n  {\n    full: 'Monday',\n    short: 'M',\n    index: 1,\n  },\n  {\n    full: 'Tuesday',\n    short: 'T',\n    index: 2,\n  },\n  {\n    full: 'Wednesday',\n    short: 'W',\n    index: 3,\n  },\n  {\n    full: 'Thursday',\n    short: 'T',\n    index: 4,\n  },\n  {\n    full: 'Friday',\n    short: 'F',\n    index: 5,\n  },\n  {\n    full: 'Saturday',\n    short: 'S',\n    index: 6,\n  },\n];\n\nexport default Weekdays;\n","/* eslint-disable no-console, arrow-body-style */\nimport { createSelector } from 'reselect';\nimport weekdays from '../utils/Weekdays';\n\nconst getEntryData = state => state.entryData.items;\nconst getTrainlines = state => state.trainLines.items;\n\nconst getAllEntriesWithDayAndTime = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    console.log(trainLines);\n    // Build list of all engines with entry keys, dates, colors\n    const arr = [];\n    entryData.forEach(entry => entry.engines.forEach(engine => arr.push({\n      engine: `${trainLines.find(line => engine.line === line.name).short}, ${engine.number}`,\n      entryId: entry._id, /* eslint-disable-line no-underscore-dangle */\n      // date: entry.date,\n      day: new Date(entry.date).getDay(),\n      time: entry.time,\n      color: trainLines.find(line => engine.line === line.name).color,\n      offset: trainLines.findIndex(line => engine.line === line.name),\n    })));\n    return arr;\n  },\n);\n\nconst getResightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    // Build list of all engines with entry keys, dates, colors\n    const allEntryEngines = [];\n    entryData.forEach(entry => entry.engines.forEach(engine => allEntryEngines.push({\n      engine: `${trainLines.find(line => engine.line === line.name).short}, ${engine.number}`,\n      entryId: entry._id, /* eslint-disable-line no-underscore-dangle */\n      date: entry.date,\n      color: trainLines.find(line => engine.line === line.name).color,\n    })));\n    // Find all engines seen more than once\n    const duplicates = new Set();\n    const resightings = allEntryEngines\n      .filter(entry => duplicates.size === duplicates.add(entry.engine).size)\n      // But there can be more than 2 matches... so now need to remove duplicates\n      .reduce((acc, current) => {\n        const match = acc.find(entry => entry.engine === current.engine);\n        // If match is false, then return accumulator w/ match addee\n        if (!match) {\n          return acc.concat([current]);\n        }\n        // If exists, then just return accumulator as is\n        return acc;\n      }, [])\n      .map((match) => {\n        // Find all sighting dates\n        const dates = allEntryEngines\n          .filter(entry => match.engine === entry.engine)\n          .map(entry => ({ date: entry.date, entryId: entry.entryId }))\n          .sort((a, b) => new Date(a.date) - new Date(b.date));\n        return {\n          engine: match.engine,\n          dates,\n          entryId: match.entryId,\n          color: match.color,\n        };\n      })\n      .sort((a, b) => new Date(a.dates[0].date) - new Date(b.dates[0].date));\n    return resightings;\n  },\n);\n\nconst getLineWithMostSightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    return trainLines\n      .map(line => ({\n        name: line.name,\n        value: entryData.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name).length), 0),\n      }))\n      .sort((a, b) => b.value - a.value)[0];\n  },\n);\n\nconst getLinesByDayOfWeek = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    return trainLines\n      .map(line => ({\n        name: line.name,\n        days: weekdays\n          .map(day => ({\n            full: day.full,\n            short: day.short,\n            index: day.index,\n            value: entryData.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name && new Date(b.date).getDay() === day.index).length), 0),\n          })),\n      }));\n  },\n);\n\nexport {\n  getAllEntriesWithDayAndTime,\n  getLinesByDayOfWeek,\n  getLineWithMostSightings,\n  getResightings,\n};\n/* eslint-enable no-console, arrow-body-style */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { getLineWithMostSightings } from '../../../selectors';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRef = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.tableRef.current.classList.remove('initial-state');\n    }, 100);\n  }\n\n  getEngineCountByLine(line) {\n    const { entries } = this.props;\n    return entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line).length), 0);\n  }\n\n  render() {\n    const { lineWithMostSightings, trainLineList } = this.props;\n    // Get line w/ max number of entries, round to nearest 100\n    // Divide by 10 (start at 0)\n    const maxEngineCt = Math.ceil(lineWithMostSightings.value / 100) * 100;\n    const xAxisInterval = maxEngineCt / 10;\n    const dataSet = [0];\n    let ct = 0;\n    do {\n      ct += xAxisInterval;\n      dataSet.push(ct);\n    }\n    while (ct < maxEngineCt);\n    return (\n      <div className=\"data-table engine-values-table initial-state\" ref={this.tableRef}>\n        <div className=\"y-axis\">\n          {\n            trainLineList.map((trainLine) => {\n              const bgStyle = {\n                backgroundColor: trainLine.color,\n                transform: `scaleX(${this.getEngineCountByLine(trainLine.name) / maxEngineCt})`,\n              };\n              return (\n                <div className=\"y-axis-row\" key={trainLine.id}>\n                  <div className=\"row-label\">{trainLine.name}</div>\n                  <div className=\"row-axis\" />\n                  <div className=\"value-display\" style={bgStyle} />\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  lineWithMostSightings: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.number,\n  }),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, trainLines } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const lineWithMostSightings = getLineWithMostSightings(state);\n  return {\n    entries,\n    lineWithMostSightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nfunction addMonths(date, months) {\n  const d = date.getDate();\n  date.setMonth(date.getMonth() + months);\n  if (date.getDate() !== d) {\n    date.setDate(0);\n  }\n  return date;\n}\n\nfunction getRoundedEndDate(startDate, now) {\n  let months = (now.getFullYear() - startDate.getFullYear()) * 12;\n  months -= startDate.getMonth();\n  months += now.getMonth() + 2;\n  let endDate = now;\n  if (months % 2 !== 0) {\n    endDate = addMonths(now, 1);\n  }\n  return new Date(`${endDate.getMonth() + 1}/1/${endDate.getFullYear()}`);\n}\n\nfunction getMonthsByInterval(startDate, now) {\n  // Get number of months between then and now\n  let months = (now.getFullYear() - startDate.getFullYear()) * 12;\n  months -= startDate.getMonth();\n  months += now.getMonth() + 1;\n  const arr = [];\n  let i = 0;\n  let date = startDate;\n  do {\n    arr.push(`${date.getMonth() + 1}/${date.getFullYear().toString().substr(2)}`);\n    date = addMonths(date, 2);\n    i += 1;\n  }\n  while (i <= months / 2);\n  return arr;\n}\n\nfunction getDaysBetweenDates(date1, date2) {\n  return Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\n}\n\nfunction getDatePositionInRange(date, startDate, now) {\n  return ((date - startDate) / (now - startDate));\n}\n\nfunction convertTimeToMinutesElapsed(time) {\n  const timeVals = time.split(':');\n  let mins = parseInt(timeVals[1], 10);\n  if (timeVals[2].indexOf('PM') !== -1 && timeVals[0] !== '12') {\n    mins += (parseInt(timeVals[0], 10) + 12) * 60;\n  } else {\n    mins += parseInt(timeVals[0], 10) * 60;\n  }\n  return mins;\n}\n\nexport {\n  convertTimeToMinutesElapsed,\n  getRoundedEndDate,\n  getMonthsByInterval,\n  getDaysBetweenDates,\n  getDatePositionInRange,\n};\n/* eslint-enable no-console */\n","/* eslint-disable no-console, no-useless-constructor */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDaysBetweenDates } from '../../../utils/DateUtils';\nimport { getLineWithMostSightings, getResightings } from '../../../selectors';\n\nclass OveviewValues extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getDirectionPercentage() {\n    const { entries } = this.props;\n    const north = entries.filter(entry => entry.direction === 'north');\n    const perc = Math.round(north.length / entries.length * 100);\n    return `${Number.isNaN(perc) ? '...' : perc}%`;\n  }\n\n  getLineWithMostSightings() {\n    const { entries, trainLineList } = this.props;\n    return trainLineList\n      .map(line => ({\n        name: line.name,\n        value: entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name).length), 0),\n      }))\n      .sort((a, b) => b.value - a.value)[0];\n  }\n\n  getDistinctResightings() {\n    const { resightings } = this.props;\n    // Need to create a second array because there are more resightings,\n    // than items in the resightings array (one engine can have more than\n    // one resighting...\n    const arr = [];\n    resightings\n      // It's actually fine, prob somewhat inefficient, if we're looking\n      // for the duration of the last item in the array and itself... it'll just be 0\n      .map(item => item.dates.reduce((a, b, c, array) => arr.push({ engine: item.engine, time: getDaysBetweenDates(new Date(b.date), new Date(array[Math.min(c + 1, array.length - 1)].date)) }), 0));\n    // Filter out all the 0's here\n    return arr.filter(item => item.time !== 0);\n  }\n\n  render() {\n    const { trainLineList, entries, lineWithMostSightings, resightings } = this.props;\n    const distinctResightings = this.getDistinctResightings();\n    let mostSightingsByLine = lineWithMostSightings;\n    if (!mostSightingsByLine) {\n      mostSightingsByLine = {\n        name: '',\n        value: '...',\n      };\n    }\n    let avgResightingDays = Math.round(distinctResightings.reduce((a, b) => (a + b.time), 0) / distinctResightings.length);\n    if (Number.isNaN(avgResightingDays)) {\n      avgResightingDays = 0;\n    }\n    let minResightingDays = distinctResightings.reduce((a, b) => Math.min(a, b.time), Infinity);\n    if (minResightingDays === Infinity) {\n      minResightingDays = 0;\n    }\n    let mostSightingsByEngine = resightings.sort((a, b) => b.dates.length - a.dates.length)[0];\n    let sightingEngine = {\n      line: '',\n      number: '',\n    };\n    let sightingCt = 0;\n    if (mostSightingsByEngine) {\n      sightingEngine = mostSightingsByEngine.engine;\n      sightingCt = mostSightingsByEngine.dates.length;\n      mostSightingsByEngine = entries.find(entry => entry._id === mostSightingsByEngine.entryId); /* eslint-disable-line no-underscore-dangle */\n      sightingEngine = mostSightingsByEngine.engines.find(engine => sightingEngine.indexOf(engine.number) !== -1);\n    }\n\n    return (\n      <div className=\"data-table\">\n        <div className=\"table-title\" />\n        <div className=\"table-values-grid\">\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ trainLineList.length }</div>\n            <div className=\"body-copy\">Different Freight Lines Observed</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.length }</div>\n            <div className=\"body-copy\">Number of Trains Observed</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.reduce((a, b) => (a + b.engines.length), 0) }</div>\n            <div className=\"body-copy\">Number of Diesel Engines</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ mostSightingsByLine.value }</div>\n            <div className=\"body-copy\">\n              { mostSightingsByLine.name }\n              &nbsp;is Observed Most Often\n            </div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ this.getDirectionPercentage() }</div>\n            <div className=\"body-copy\">Percentage of Trains Headed North</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ distinctResightings.length }</div>\n            <div className=\"body-copy\">Number of Resightings*</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ avgResightingDays }</div>\n            <div className=\"body-copy\">Average Number of Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ minResightingDays }</div>\n            <div className=\"body-copy\">Fewest Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ distinctResightings.reduce((a, b) => Math.max(a, b.time), 0) }</div>\n            <div className=\"body-copy\">Most Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ sightingCt }</div>\n            <div className=\"body-copy\">\n              {sightingEngine.line}\n              &nbsp;\n              {sightingEngine.number}\n              &nbsp;Has the Most Resightings\n            </div>\n          </div>\n        </div>\n        <div className=\"table-notes\">\n          <p className=\"body-xsmall\">*Resightings are the engines I&rsquo;ve observed on multiple occasions. It&rsquo;s entirely possible, more so likely, that these and others have passed back and forth at off hours. Some other observations:</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nOveviewValues.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  lineWithMostSightings: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.number,\n  }),\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const resightings = getResightings(state);\n  const lineWithMostSightings = getLineWithMostSightings(state);\n  return {\n    entries,\n    lineWithMostSightings,\n    resightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(OveviewValues);\n/* eslint-enable no-console, no-useless-constructor */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDatePositionInRange, getMonthsByInterval, getRoundedEndDate } from '../../../utils/DateUtils';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { showDetail } from '../../../actions';\nimport { getResightings } from '../../../selectors';\n\nclass ResightingValues extends Component {\n  constructor(props) {\n    super(props);\n    this.initialSightingDate = this.getInitialSightingDate();\n    this.tableRef = React.createRef();\n    this.yAxis = null;\n    this.scrollIndicatorRef = React.createRef();\n    this.handleScroll = this.handleScroll.bind(this);\n    this.scrollIndicatorTimer = null;\n  }\n\n  componentDidMount() {\n    this.scrollIndicatorTimer = setTimeout(() => {\n      this.scrollIndicatorRef.current.classList.add('hidden');\n      this.yAxis.removeEventListener('scroll', this.handleScroll);\n    }, 6000);\n    this.yAxis = this.tableRef.current.querySelector('.y-axis');\n    this.yAxis.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n    clearInterval(this.scrollIndicatorTimer);\n  }\n\n  getInitialSightingDate() {\n    const { entries } = this.props;\n    const dates = entries.slice().sort((a, b) => new Date(a.date) - new Date(b.date));\n    // Get 1st day of the start month\n    const initial = new Date(dates[0].date);\n    // return initial;\n    return `${initial.getMonth() + 1}/1/${initial.getFullYear()}`;\n  }\n\n  handleScroll() {\n    this.scrollIndicatorRef.current.classList.add('hidden');\n    this.yAxis.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const { dispatch, resightings } = this.props;\n    const endDate = getRoundedEndDate(new Date(this.initialSightingDate), new Date());\n    const dataSet = getMonthsByInterval(new Date(this.initialSightingDate), endDate);\n    let prevLeft = '';\n    let isPrevLeft = false;\n    console.log(resightings);\n\n    return (\n      <div className=\"data-table resightings-values-table\" ref={this.tableRef}>\n        <div className=\"table-title\" />\n        <div className=\"y-axis\">\n          {\n            resightings.map((entry) => {\n              prevLeft = '';\n              isPrevLeft = false;\n\n              return (\n                <div className=\"y-axis-row\" key={getRandomNumberKey()}>\n                  <div className=\"row-label\">{entry.engine}</div>\n                  <div className=\"row-axis\">\n                    {\n                      entry.dates.map((date) => {\n                        function onEntryClick() {\n                          dispatch(showDetail(date.entryId));\n                        }\n                        const left = `${getDatePositionInRange(new Date(date.date), new Date(this.initialSightingDate), endDate) * 100}%`;\n                        const bgStyle = {\n                          backgroundColor: entry.color,\n                          left,\n                        };\n                        const lineStyle = {\n                          backgroundColor: entry.color,\n                          left: prevLeft,\n                          width: `calc(${left} - ${prevLeft})`,\n                        };\n                        if (prevLeft !== '') {\n                          isPrevLeft = true;\n                        }\n                        prevLeft = left;\n                        return (\n                          <div key={getRandomNumberKey()}>\n                            <button\n                              className=\"sighting-marker\"\n                              onClick={onEntryClick}\n                              onKeyDown={onEntryClick}\n                              style={bgStyle}\n                              type=\"button\"\n                            >\n                              <span>{entry.engine.substr(entry.engine.indexOf(',') + 2)}</span>\n                            </button>\n                            {isPrevLeft\n                              && (\n                                <div\n                                  className=\"sighting-connector\"\n                                  style={lineStyle}\n                                />\n                              )\n                            }\n                          </div>\n                        );\n                      })\n                    }\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"scroll-indicator-icon\" ref={this.scrollIndicatorRef}>\n          <div />\n        </div>\n      </div>\n    );\n  }\n}\n\nResightingValues.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  resightings: PropTypes.arrayOf(PropTypes.object),\n};\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const resightings = getResightings(state);\n  return {\n    entries,\n    resightings,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResightingValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console, no-useless-constructor, react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport weekdays from '../../../utils/Weekdays';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { convertTimeToMinutesElapsed } from '../../../utils/DateUtils';\nimport { getAllEntriesWithDayAndTime } from '../../../selectors';\n\nclass ScheduleValues extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { dataSet, entries } = this.props;\n    console.log(entries[0]);\n    return (\n      <div className=\"data-table schedule-values-table\">\n        <div className=\"y-axis\">\n          {\n            weekdays.map(day => (\n              <div className=\"y-axis-row\" key={day.index}>\n                <div className=\"row-label\">{day.full}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"scatterplot\">\n          {\n            entries.map((entry) => {\n              /* function onEntryClick() {\n                dispatch(showDetail(entry.entryId));\n              } */\n              // console.log(`${Math.round(convertTimeToMinutesElapsed(entry.time))}/1440`);\n              const bgStyle = {\n                backgroundColor: entry.color,\n                left: `${Math.round(convertTimeToMinutesElapsed(entry.time) / 14.4)}%`,\n                top: `${38 * entry.day}px`,\n                marginTop: `${entry.offset * 3}px`,\n              };\n              return (\n                <div\n                  className=\"sighting-marker\"\n                  // onClick={onEntryClick}\n                  // onKeyDown={onEntryClick}\n                  key={getRandomNumberKey()}\n                  style={bgStyle}\n                  type=\"button\"\n                />\n              );\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nScheduleValues.defaultProps = {\n  dataSet: ['12 AM', '2 AM', '4AM', '6 AM', '8 AM', ' 10 AM', '12 PM', '2 PM', '4 PM', '6 PM', '8 PM', '10 PM'],\n};\n\nScheduleValues.propTypes = {\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n  entries: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const entries = getAllEntriesWithDayAndTime(state);\n  return {\n    entries,\n  };\n};\n\nexport default connect(mapStateToProps)(ScheduleValues);\n/* eslint-enable no-console, no-useless-constructor, react/prefer-stateless-function */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DataFilter from './DataFilter';\nimport EngineValues from './datasets/EngineValues';\nimport OverviewValues from './datasets/OverviewValues';\nimport ResightingValues from './datasets/ResightingValues';\nimport ScheduleValues from './datasets/ScheduleValues';\n\nclass AtAGlance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSet: {\n        label: '',\n        values: [],\n      },\n    };\n    this.handleDataSetChange = this.handleDataSetChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { dataSets } = this.props;\n    this.setState({\n      activeSet: dataSets[0],\n    });\n  }\n\n  handleDataSetChange(value) {\n    const { dataSets } = this.props;\n    const dataSet = dataSets.find(item => item.label === value);\n    this.setState({ activeSet: dataSet });\n  }\n\n  render() {\n    const { dataSets } = this.props;\n    const { activeSet } = this.state;\n    return (\n      <div className=\"at-a-glance\">\n        <div className=\"page-heading-divider\">\n          <h2 className=\"heading-lg\">At A Glance</h2>\n        </div>\n        <div className=\"aggregate-data-visualization-module\">\n          <div className=\"module-inner\">\n            <div className=\"data-filters\">\n              <ul className=\"data-filters-inner\">\n                {\n                  dataSets.map(item => (\n                    <DataFilter\n                      isActive={item.label === activeSet.label}\n                      key={item.label}\n                      label={item.label}\n                      onFilterClick={this.handleDataSetChange}\n                    />\n                  ))\n                }\n              </ul>\n            </div>\n            <div className=\"data-visualization\">\n              {activeSet.label === 'Overview'\n                && (\n                  <OverviewValues />\n                )\n              }\n              {activeSet.label === 'Resightings'\n                && (\n                  <ResightingValues />\n                )\n              }\n              {activeSet.label === 'Engines'\n                && (\n                  <EngineValues />\n                )\n              }\n              {activeSet.label === 'Schedule'\n                && (\n                  <ScheduleValues />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAtAGlance.defaultProps = {\n  dataSets: [\n    {\n      label: 'Overview',\n    },\n    {\n      label: 'Resightings',\n    },\n    {\n      label: 'Engines',\n    },\n    {\n      label: 'Schedule',\n    },\n  ],\n};\n\nAtAGlance.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default AtAGlance;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1) {\n      if (entry.time.indexOf('12:') === -1 || entry.time.indexOf('12:') > 0) {\n        arr[0] = parseInt(arr[0], 10) + 12;\n      }\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') === 0) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  render() {\n    const { entry, dispatch } = this.props;\n\n    function onEntryClick() {\n      dispatch(showDetail(entry._id)); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <button className=\"engine-manifest\" ref={this.divRef} type=\"button\" onClick={onEntryClick} onKeyDown={onEntryClick}>\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n        <span className=\"engine-details-button\">...</span>\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => { /* eslint-disable-line arrow-body-style */\n  return bindActionCreators(\n    {\n      showDetail,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapDispatchToProps)(Entry);\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date, entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","const Months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default Months;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\nimport months from '../../utils/Months';\n\nclass DateLine extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  render() {\n    const {\n      activeMonth,\n      date,\n      entries,\n      isMonthLabel,\n    } = this.props;\n    const month = months[date.split('/')[0] - 1];\n    const year = date.split('/')[2];\n\n    return (\n      <div className=\"date-line\" ref={this.divRef}>\n        {isMonthLabel\n          && (\n            <div className={`month-display ${`${month}-${year}` === activeMonth ? 'sticky' : ''}`} data-month={`${month}-${year}`}>\n              <span>{`${month} ${year}`}</span>\n            </div>\n          )\n        }\n        <div className=\"date-display\">\n          <span>{date.split('/')[1]}</span>\n        </div>\n        <EntriesForDate\n          date={date}\n          entries={entries}\n        />\n      </div>\n    );\n  }\n}\n\nDateLine.propTypes = {\n  activeMonth: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isMonthLabel: PropTypes.bool.isRequired,\n};\n\nexport default DateLine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DateLine from './DateLine';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMonth: '',\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n    this.currentMonth = -1;\n    this.chartWrapperRef = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    let month = '';\n    [].map.call(document.querySelectorAll('.month-display'), (item) => {\n      if (item.parentNode.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        // Should set the active month to whatever the last item less than scrollTop is...\n        month = item.getAttribute('data-month');\n      }\n    });\n    this.setState({ activeMonth: month });\n    //\n    if (this.chartWrapperRef !== null) {\n      if (this.chartWrapperRef.current.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        this.chartWrapperRef.current.classList.add('sticky');\n      } else {\n        this.chartWrapperRef.current.classList.remove('sticky');\n      }\n    }\n  }\n\n  render() {\n    const { entries } = this.props;\n    const { activeMonth } = this.state;\n    const dates = [...new Set(entries.map(entry => entry.date))];\n    let isMonthLabel = false;\n\n    return (\n      <div className=\"train-chart-wrapper\" ref={this.chartWrapperRef}>\n        <div className=\"page-heading-divider fixed-page-heading-divider\">\n          <h2 className=\"heading-lg\">Sightings</h2>\n        </div>\n        <div className=\"train-chart\">\n          <div className=\"x-axis-header clearfix\">\n            <div className=\"page-heading-divider\">\n              <h2 className=\"heading-lg\">Sightings</h2>\n            </div>\n            <ul>\n              <li><span>12 AM</span></li>\n              <li><span>2 AM</span></li>\n              <li><span>4 AM</span></li>\n              <li><span>6 AM</span></li>\n              <li><span>8 AM</span></li>\n              <li><span>10 AM</span></li>\n              <li><span>12 PM</span></li>\n              <li><span>2 PM</span></li>\n              <li><span>4 PM</span></li>\n              <li><span>6 PM</span></li>\n              <li><span>8 PM</span></li>\n              <li><span>10 PM</span></li>\n            </ul>\n          </div>\n          <div className=\"time-table\">\n            <div className=\"month-bar\" />\n            {\n              dates.map((date) => {\n                if (this.currentMonth !== date.split('/')[0]) {\n                  this.currentMonth = date.split('/')[0]; /* eslint-disable-line prefer-destructuring */\n                  isMonthLabel = true;\n                } else {\n                  isMonthLabel = false;\n                }\n                return (\n                  <DateLine\n                    activeMonth={activeMonth}\n                    key={date.replace(/\\//, '')}\n                    date={date}\n                    entries={entries}\n                    isMonthLabel={isMonthLabel}\n                  />\n                );\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      line: '',\n      location: '',\n      number: '',\n    };\n    this.handleLineChange = this.handleLineChange.bind(this);\n    this.handleNumberChange = this.handleNumberChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.isEngineValid = this.isEngineValid.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    const { line, location, number } = props;\n    this.setState({\n      line,\n      location,\n      number,\n    });\n  }\n\n  componentDidUpdate() {\n    const { id, updateEngines } = this.props;\n    const { line, location, number } = this.state;\n    updateEngines(id, this.isEngineValid(), line, location, number);\n  }\n\n  handleLineChange(event) {\n    this.setState({ line: event.target.value });\n  }\n\n  handleNumberChange(event) {\n    this.setState({ number: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleRemove() {\n    const { id, removeEngine } = this.props;\n    removeEngine(id);\n  }\n\n  isEngineValid() {\n    const { line, location, number } = this.state;\n    if (line === '' || location === '' || number === '') {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const { line, location, number } = this.state;\n    return (\n      <div className=\"flex-row add-engine-row\">\n        <label className=\"form-label form-select-label form-label-line\" htmlFor=\"line\">\n          <span>Line</span>\n          <select className=\"form-select\" id=\"line\" name=\"line\" value={line} onChange={this.handleLineChange}>\n            <option value=\"\">Select</option>\n            {\n              trainLineList.map(trainLine => (\n                <option value={trainLine.name} key={trainLine.id}>{trainLine.short}</option>\n              ))\n            }\n          </select>\n        </label>\n        <label className=\"form-label form-label-number\" htmlFor=\"number\">\n          <span>Number</span>\n          <input className=\"form-input\" id=\"number\" name=\"number\" type=\"number\" value={number} onChange={this.handleNumberChange} />\n        </label>\n        <label className=\"form-label form-select-label form-label-location\" htmlFor=\"location\">\n          <span>Location</span>\n          <select className=\"form-select\" id=\"location\" name=\"location\" value={location} onChange={this.handleLocationChange}>\n            <option value=\"\">Select</option>\n            <option value=\"front\">Front</option>\n            <option value=\"middle\">Middle</option>\n            <option value=\"end\">End</option>\n          </select>\n        </label>\n        <button className=\"remove-button\" type=\"button\" onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n\nAddEngine.propTypes = {\n  id: PropTypes.string.isRequired,\n  line: PropTypes.string,\n  location: PropTypes.string,\n  number: PropTypes.string,\n  removeEngine: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  updateEngines: PropTypes.func.isRequired,\n};\n\nexport default AddEngine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from '../menu/AddEngine';\nimport { addEntry, removeEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass EditEntry extends Component {\n  constructor(props) {\n    super(props);\n    const { entryData } = this.props;\n    // Map id property to engine objects\n    entryData.engines = entryData.engines.map((engine, index) => ({ ...engine, id: `engine-no-${index}` }));\n    // State defaults\n    this.state = {\n      date: formatDateForSelect(new Date(entryData.date)),\n      direction: entryData.direction,\n      engines: entryData.engines,\n      idIter: entryData.engines.length,\n      isActive: false,\n      isEntryValid: true,\n      notes: entryData.notes,\n      time: formatTimeForSelect(entryData.time),\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.showForm = this.showForm.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      this.hideForm();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel() {\n    this.hideForm();\n  }\n\n  handleRemove() {\n    const { dispatch, entryData } = this.props;\n    this.hideForm();\n    dispatch(removeEntry({\n      id: entryData._id, /* eslint-disable-line no-underscore-dangle */\n    }));\n  }\n\n  showForm() {\n    this.setState({ isActive: true });\n  }\n\n  hideForm() {\n    this.setState({ isActive: false });\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const {\n      date,\n      direction,\n      engines,\n      isActive,\n      isEntryValid,\n      notes,\n      time,\n    } = this.state;\n\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div className=\"form-wrapper\">\n        {\n          isActive\n            ? (\n              <button className=\"edit-entry-button\" onClick={this.hideForm} type=\"button\">\n                <div>\n                  <span className=\"text-button\">Close Edit</span>\n                </div>\n              </button>\n            ) : (\n              <button className=\"edit-entry-button\" onClick={this.showForm} type=\"button\">\n                <div>\n                  <span className=\"text-button\">Edit Entry</span>\n                </div>\n              </button>\n            )\n        }\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button\" type=\"submit\">Update Entry</button>\n            <button className=\"urgent-button\" type=\"button\" onClick={this.handleRemove}>Remove Entry</button>\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error updating the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nEditEntry.propTypes = {\n  dispatch: PropTypes.func,\n  entryData: PropTypes.shape({\n    date: PropTypes.string,\n    direction: PropTypes.string,\n    engines: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.string,\n    notes: PropTypes.string,\n    number: PropTypes.number,\n    time: PropTypes.string,\n    _id: PropTypes.string,\n  }),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EditEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport EditEntry from './EditEntry';\nimport months from '../../utils/Months';\nimport { formatDate, formatTime } from '../../utils/Formatting';\nimport { getResightings } from '../../selectors';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  findMatches(trainline, number) {\n    const { resightings, trainLineList } = this.props;\n    const engine = `${trainLineList.find(line => trainline === line.name).short}, ${number}`;\n    const sighting = resightings.find(entry => entry.engine === engine);\n    if (sighting) {\n      return sighting.dates.length;\n    }\n    return 1;\n  }\n\n  render() {\n    const { onDetailClose, data, isLoggedIn } = this.props;\n    const { loadedClass } = this.state;\n\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"entry-number\">\n                Entry No.&nbsp;\n                {data.number}\n              </span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">\n                {`${data.engines.length} engine train observed on ${formatDate(data.date, months)} at ${formatTime(data.time)} heading ${data.direction}.`}\n              </div>\n              <div className=\"detail-subhead\">Engines</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Ord.</th>\n                    <th>Line</th>\n                    <th>No.</th>\n                    <th>Pos.</th>\n                    <th>Sightings</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data.engines.map((engine) => {\n                      const bgStyle = {\n                        backgroundColor: engine.color,\n                      };\n                      return (\n                        <tr key={engine.number}>\n                          <td><span className=\"engine-color-indicator\" style={bgStyle}>{engine.order}</span></td>\n                          <td><span>{engine.line}</span></td>\n                          <td><span>{engine.number}</span></td>\n                          <td><span>{engine.location}</span></td>\n                          <td><span>{this.findMatches(engine.line, engine.number)}</span></td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n              <div className=\"detail-subhead\">Notes</div>\n              <p className=\"detail-notes\">{data.notes}</p>\n            </div>\n          </div>\n          {isLoggedIn\n            && (\n              <EditEntry\n                entryData={data}\n              />\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { trainLines, userStatus } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  const resightings = getResightings(state);\n  return {\n    isLoggedIn,\n    resightings,\n    trainLineList,\n  };\n};\n\nDetail.propTypes = {\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired,\n  }),\n  isLoggedIn: PropTypes.bool.isRequired,\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps)(Detail);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst About = () => (\n  <div>\n    <div className=\"menu-nav-item\">About the Project</div>\n    <p>\n      The Milwaukee District North tracks sit just beyond the alley in my backyard.\n       During off-peak hours, freight trains are cleared to run along this stretch of the Metra corridor.\n       They rumble past my home office window at seemingly random intervals while I work and attempt to apply structure to this new phase of my career.\n    </p>\n    <p>\n      This project also brought me up to speed with React/Redux and was developed using the full MERN stack.\n    </p>\n  </div>\n);\n\nexport default About;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from './AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n      }],\n      notes: '',\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-entry');\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { isActive, trainLineList } = this.props;\n    const { date, direction, engines, isEntryValid, notes, time } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add an Entry</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddEntry.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(AddEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTrainLine } from '../../actions';\n\nclass AddLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n      isEntryValid: true,\n    };\n    this.handleLineNameChange = this.handleLineNameChange.bind(this);\n    this.handleLineShortNameChange = this.handleLineShortNameChange.bind(this);\n    this.handleLineColorChange = this.handleLineColorChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleLineNameChange(event) {\n    this.setState({ lineName: event.target.value });\n  }\n\n  handleLineShortNameChange(event) {\n    this.setState({ lineShortName: event.target.value });\n  }\n\n  handleLineColorChange(event) {\n    this.setState({ lineColor: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n    } = this.state;\n    console.log(`${lineName},`);\n    let isValid = true;\n    event.preventDefault();\n    if (lineName === '') {\n      isValid = false;\n    }\n    if (isValid) {\n      dispatch(addTrainLine({\n        lineName,\n        lineShortName,\n        lineColor,\n        id: lineName.toLowerCase().replace(/\\s/, '-'),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    this.setState({\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-line');\n  }\n\n  render() {\n    const { isActive } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n      isEntryValid,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add a Train Line</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-line-name\" htmlFor=\"lineName\">\n            <span>Name</span>\n            <input className=\"form-input\" id=\"lineName\" name=\"lineName\" type=\"text\" value={lineName} onChange={this.handleLineNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-short-name\" htmlFor=\"lineShortName\">\n            <span>Short Name</span>\n            <input className=\"form-input\" id=\"lineShortName\" name=\"lineShortName\" type=\"text\" value={lineShortName} onChange={this.handleLineShortNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-color\" htmlFor=\"lineColor\">\n            <span>Color</span>\n            <input className=\"form-input\" id=\"lineColor\" name=\"lineColor\" type=\"text\" value={lineColor} onChange={this.handleLineColorChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Line</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddLine.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nexport default connect()(AddLine);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst Contact = () => (\n  <div>\n    <div className=\"menu-nav-item\">Contact</div>\n    <p>\n      jef.a.mayer(at)gmail.com\n      <br />\n      <a className=\"inline-link\" href=\"https://jefmayer.com\">jefmayer.com</a>\n    </p>\n  </div>\n);\n\nexport default Contact;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../actions';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleUserChange(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { user, password } = this.state;\n    event.preventDefault();\n    dispatch(login({ user, password })); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('login');\n  }\n\n  logout() {\n    const { dispatch, setActiveMenuItem } = this.props;\n    setActiveMenuItem('');\n    // Clear inputs\n    dispatch(logout());\n  }\n\n  render() {\n    const { isActive, isLoggedIn, isLoginError } = this.props;\n    const { user, password } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (isLoginError) {\n      errorDisplayClass = '';\n    }\n    return (\n      !isLoggedIn\n        ? (\n          <div>\n            <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Login</button>\n            <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n              <label className=\"form-label\" htmlFor=\"user\">\n                <span>Name</span>\n                <input className=\"form-input\" id=\"user\" name=\"user\" type=\"text\" value={user} onChange={this.handleUserChange} />\n              </label>\n              <label className=\"form-label\" htmlFor=\"password\">\n                <span>Password</span>\n                <input className=\"form-input\" id=\"password\" name=\"password\" type=\"password\" value={password} onChange={this.handlePasswordChange} />\n              </label>\n              <input className=\"submit-button\" type=\"submit\" value=\"Login\" />\n              <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n            </form>\n          </div>\n        ) : (\n          <button className=\"menu-nav-item menu-nav-button\" type=\"button\" onClick={this.logout}>Logout</button>\n        )\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isLoginError: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n    isLoginError,\n  } = userStatus;\n  return {\n    isLoggedIn,\n    isLoginError,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport About from './About';\nimport AddEntry from './AddEntry';\nimport AddLine from './AddLine';\nimport Contact from './Contact';\nimport Login from './Login';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMenuItem: '',\n    };\n    this.divRef = React.createRef();\n    this.setActiveMenuItem = this.setActiveMenuItem.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { menuDisplayClass } = this.props;\n    if (menuDisplayClass === 'closed') {\n      const timer = setTimeout(() => {\n        this.divRef.current.setAttribute('style', 'position:absolute;');\n        clearTimeout(timer);\n      }, 150);\n    } else {\n      this.divRef.current.setAttribute('style', 'position:fixed;');\n    }\n  }\n\n  setActiveMenuItem(name) {\n    this.setState({ activeMenuItem: name });\n  }\n\n  render() {\n    const { activeMenuItem } = this.state;\n    const { isLoggedIn, menuDisplayClass, onMenuClick } = this.props;\n    return (\n      <div className={`menu-container ${menuDisplayClass}`} ref={this.divRef}>\n        <button className=\"menu-button\" onClick={onMenuClick} type=\"button\">\n          <span className=\"menu-icon\">\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n          </span>\n        </button>\n        <div className=\"menu-nav\">\n          <div className=\"menu-nav-inner\">\n            <About />\n            <Contact />\n            {isLoggedIn\n              && (\n                <div>\n                  <AddEntry\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-entry'}\n                  />\n                  <AddLine\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-line'}\n                  />\n                </div>\n              )\n            }\n            <Login\n              setActiveMenuItem={this.setActiveMenuItem}\n              isActive={activeMenuItem === 'login'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMenu.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  menuDisplayClass: PropTypes.string.isRequired,\n  onMenuClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  return {\n    isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(Menu);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries, fetchTrainLines, hideDetail, hideMenu, showMenu } from '../actions';\nimport AtAGlance from '../components/ataglance/AtAGlance';\nimport Chart from '../components/chart/Chart';\nimport Detail from '../components/detail/Detail';\nimport Menu from '../components/menu/Menu';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n    dispatch(fetchTrainLines());\n  }\n\n  render() {\n    const { detailId, dispatch, entries, isDetailOpen, isMenuOpen } = this.props;\n\n    function onDetailClose() {\n      dispatch(hideDetail());\n    }\n\n    function onMenuClick() {\n      if (!isMenuOpen) {\n        dispatch(showMenu());\n      } else {\n        dispatch(hideMenu());\n      }\n    }\n\n    function getEntryById(id) {\n      return entries.find(entry => entry._id === id); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <div className=\"logo-wrapper\">\n            <img src={logo} className=\"logo-graphic\" alt=\"Trainspotted Logo\" />\n            <div className=\"logo-type\">Trainspotted</div>\n          </div>\n          <Menu\n            menuDisplayClass={isMenuOpen ? 'open' : 'closed'}\n            onMenuClick={onMenuClick}\n          />\n        </header>\n        <AtAGlance />\n        <Chart\n          entries={entries}\n        />\n        {isDetailOpen && getEntryById(detailId)\n          && (\n            <Detail\n              onDetailClose={onDetailClose}\n              data={getEntryById(detailId)}\n              entries={entries}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  detailId: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  isDetailOpen: PropTypes.bool,\n  isMenuOpen: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, entryDetail, menu } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    id: detailId,\n    isOpen: isDetailOpen,\n  } = entryDetail;\n  const {\n    isOpen: isMenuOpen,\n  } = menu;\n  return {\n    detailId,\n    entries,\n    isDetailOpen,\n    isMenuOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\n// console.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}