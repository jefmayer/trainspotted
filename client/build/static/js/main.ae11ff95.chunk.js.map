{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/utils/Months.js","js/components/chart/Chart.jsx","js/utils/Formatting.js","js/components/detail/Detail.jsx","js/utils/Lookup.js","js/components/menu/About.jsx","js/components/menu/AddEngine.jsx","js/components/menu/AddEntry.jsx","js/components/menu/AddLine.jsx","js/components/menu/Contact.jsx","js/components/menu/Login.jsx","js/components/menu/Menu.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","entryAdded","json","type","data","showDetail","id","hideDetail","showMenu","hideMenu","rootReducer","combineReducers","entryData","state","arguments","length","undefined","isFetching","items","action","Object","objectSpread","entryDetail","isOpen","menu","trainLines","userStatus","isLoggedIn","isLoginError","response","success","Entry","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","divRef","React","createRef","entry","arr","time","split","indexOf","parseInt","pct","toFixed","current","setAttribute","concat","_this$props","dispatch","onEntryClick","_id","react_default","a","createElement","className","ref","onClick","onKeyDown","engines","map","engine","bgStyle","backgroundColor","color","style","key","number","Component","connect","bindActionCreators","EntriesForDate","entryHeight","_this2","date","entries","chart_Entry","Months","Chart","_ref","dates","toConsumableArray","Set","currentMonth","isMonthLabel","months","chart_EntriesForDate","formatDateForDB","formatTimeForDB","timeValues","hours","amPm","formatDateForSelect","value","getDate","toString","month","getMonth","getFullYear","formatTimeForSelect","getHours","mins","getMinutes","createEntryId","dateArr","timeArr","Detail","loadedClass","timer","setTimeout","setState","clearInterval","onDetailClose","role","formatDate","ampm","formatTime","direction","cellPadding","cellSpacing","order","line","location","console","log","findMatches","About","AddEngine","handleLineChange","bind","assertThisInitialized","handleNumberChange","handleLocationChange","isEngineValid","handleRemove","updateEngines","_this$state","event","target","_this$props2","removeEngine","_this$state2","trainLineList","_this$state3","htmlFor","name","onChange","trainLine","short","AddEntry","idIter","isEntryValid","isValid","handleDateChange","handleTimeChange","handleDirectionChange","handleSubmit","handleCancel","displayForm","addEngine","reset","today","Date","preventDefault","forEach","_ref2","fetch","method","headers","Headers","Accept","Content-Type","body","JSON","stringify","then","addEntry","index","setActiveMenuItem","push","findIndex","splice","item","find","isActive","errorDisplayClass","onSubmit","menu_AddEngine","AddLine","lineName","handleLineNameChange","_ref3","addTrainLine","Contact","href","Login","user","password","handleUserChange","handlePasswordChange","logout","loginAttempt","login","Menu","activeMenuItem","menuDisplayClass","clearTimeout","onMenuClick","menu_About","menu_Contact","menu_AddEntry","menu_AddLine","menu_Login","App","receiveEntries","receiveTrainLines","detailId","isDetailOpen","isMenuOpen","src","logo","alt","menu_Menu","chart_Chart","detail_Detail","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","getState","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.ae11ff95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const SUBMIT_TRAIN_LINE = 'SUBMIT_TRAIN_LINE';\nexport const TRAIN_LINE_ADDED = 'TRAIN_LINE_ADDED';\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\nexport const REQUEST_TRAIN_LINES = 'REQUEST_LINES';\nexport const RECEIVE_TRAIN_LINES = 'RECEIVE_LINES';\nexport const SUBMIT_ENTRY = 'SUBMIT_ENTRY';\nexport const ENTRY_ADDED = 'ENTRY_ADDED';\nexport const SHOW_DETAIL = 'SHOW_DETAIL';\nexport const HIDE_DETAIL = 'HIDE_DETAIL';\nexport const SHOW_MENU = 'SHOW_MENU';\nexport const HIDE_MENU = 'HIDE_MENU';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n});\n\nexport const requestTrainLines = () => ({\n  type: REQUEST_TRAIN_LINES,\n});\n\nexport const receiveTrainLines = json => ({\n  type: RECEIVE_TRAIN_LINES,\n  data: json,\n});\n\nexport const submitTrainLine = () => ({\n  type: SUBMIT_TRAIN_LINE,\n});\n\nexport const trainLineAdded = json => ({\n  type: TRAIN_LINE_ADDED,\n  data: json,\n});\n\nexport const submitEntry = () => ({\n  type: SUBMIT_ENTRY,\n});\n\nexport const entryAdded = json => ({\n  type: ENTRY_ADDED,\n  data: json,\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n\nexport const fetchTrainLines = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestTrainLines());\n  return fetch('/getLines')\n    .then(response => response.json())\n    .then(json => dispatch(receiveTrainLines(json)));\n};\n\nexport const showDetail = id => ({\n  type: SHOW_DETAIL,\n  data: id,\n});\n\nexport const hideDetail = () => ({\n  type: HIDE_DETAIL,\n});\n\nexport const showMenu = () => ({\n  type: SHOW_MENU,\n});\n\nexport const hideMenu = () => ({\n  type: HIDE_MENU,\n});\n\nexport const loginAttempt = json => ({\n  type: LOG_IN,\n  data: json,\n});\n\nexport const login = ({ user, password }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/login', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      user,\n      password,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(loginAttempt(json)));\n};\n\nexport const addEntry = ({ date, direction, engines, id, time }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitEntry());\n  return fetch('/addEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      date,\n      time,\n      direction,\n      engines,\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const addTrainLine = ({ lineName }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitTrainLine());\n  return fetch('/addTrainLine', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      lineName,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const logout = () => ({\n  type: LOG_OUT,\n});\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  SUBMIT_TRAIN_LINE,\n  TRAIN_LINE_ADDED,\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n  REQUEST_TRAIN_LINES,\n  RECEIVE_TRAIN_LINES,\n  SUBMIT_ENTRY,\n  ENTRY_ADDED,\n  SHOW_DETAIL,\n  HIDE_DETAIL,\n  SHOW_MENU,\n  HIDE_MENU,\n  LOG_IN,\n  LOG_OUT,\n} from '../actions';\n\n\nconst entryData = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n    case SUBMIT_ENTRY:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n    case ENTRY_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst entryDetail = (state = {\n  isOpen: false,\n  id: '',\n}, action) => {\n  switch (action.type) {\n    case SHOW_DETAIL:\n      return {\n        ...state,\n        isOpen: true,\n        id: action.data,\n      };\n    case HIDE_DETAIL:\n      return {\n        ...state,\n        isOpen: false,\n        id: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst menu = (state = {\n  isOpen: false,\n}, action) => {\n  switch (action.type) {\n    case SHOW_MENU:\n      return {\n        ...state,\n        isOpen: true,\n      };\n    case HIDE_MENU:\n      return {\n        ...state,\n        isOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userStatus = (state = {\n  isLoggedIn: false,\n  isLoginError: false,\n  response: [{ success: 'error' }],\n}, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      if (action.data[0].success === 'success') {\n        return {\n          ...state,\n          isLoggedIn: true,\n          isLoginError: false,\n          response: action.data,\n        };\n      }\n      return {\n        ...state,\n        isLoggedIn: false,\n        isLoginError: true,\n        response: action.data,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst trainLines = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_TRAIN_LINES:\n    case SUBMIT_TRAIN_LINE:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_TRAIN_LINES:\n    case TRAIN_LINE_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryData,\n  entryDetail,\n  menu,\n  trainLines,\n  userStatus,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1 && entry.time.indexOf('12:') === -1) {\n      arr[0] = parseInt(arr[0], 10) + 12;\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') !== -1) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  render() {\n    const { entry, dispatch } = this.props;\n\n    function onEntryClick() {\n      dispatch(showDetail(entry._id)); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <button className=\"engine-manifest\" ref={this.divRef} type=\"button\" onClick={onEntryClick} onKeyDown={onEntryClick}>\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n        <span className=\"engine-details-button\">...</span>\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => { /* eslint-disable-line arrow-parens, arrow-body-style */\n  return bindActionCreators(\n    {\n      showDetail,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapDispatchToProps)(Entry);\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date } = this.props;\n    const { entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","const Months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default Months;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\nimport months from '../../utils/Months';\n\n\nconst Chart = ({ entries }) => {\n  const dates = [...new Set(entries.map(entry => entry.date))];\n  let currentMonth = -1;\n  let isMonthLabel = false;\n\n  return (\n    <div className=\"train-chart\">\n      <div className=\"x-axis-header clearfix\">\n        <ul>\n          <li><span>12 AM</span></li>\n          <li><span>2 AM</span></li>\n          <li><span>4 AM</span></li>\n          <li><span>6 AM</span></li>\n          <li><span>8 AM</span></li>\n          <li><span>10 AM</span></li>\n          <li><span>12 PM</span></li>\n          <li><span>2 PM</span></li>\n          <li><span>4 PM</span></li>\n          <li><span>6 PM</span></li>\n          <li><span>8 PM</span></li>\n          <li><span>10 PM</span></li>\n        </ul>\n      </div>\n      <div className=\"time-table\">\n        <div className=\"month-bar\" />\n        {\n          dates.map((date) => {\n            if (currentMonth !== date.split('/')[0]) {\n              currentMonth = date.split('/')[0]; /* eslint-disable-line prefer-destructuring */\n              isMonthLabel = true;\n            } else {\n              isMonthLabel = false;\n            }\n            return (\n              <div className=\"date-line\" key={date}>\n                {isMonthLabel\n                  && (\n                    <div className=\"month-display\">\n                      <span>{`${months[date.split('/')[0] - 1]} ${date.split('/')[2]}`}</span>\n                    </div>\n                  )\n                }\n                <div className=\"date-display\">\n                  <span>{date.split('/')[1]}</span>\n                </div>\n                <EntriesForDate\n                  date={date}\n                  entries={entries}\n                />\n              </div>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","export function formatDate(date, months) {\n  const arr = date.split('/');\n  return `${months[arr[0] - 1]} ${arr[1]}, ${arr[2]}`;\n}\n\nexport function formatTime(time) {\n  const arr = time.split(':');\n  let ampm = 'a.m.';\n  if (time.indexOf('PM') !== -1) {\n    ampm = 'p.m.';\n  }\n  return `${arr[0]}:${arr[1]} ${ampm}`;\n}\n\nexport function formatDateForDB(date) {\n  const arr = date.split('-');\n  return `${arr[1]}/${arr[2]}/${arr[0]}`;\n}\n\nexport function formatTimeForDB(time) {\n  const timeValues = time.split(':');\n  let hours = parseInt(timeValues[0], 10);\n  let amPm = 'AM';\n  if (hours > 12) {\n    hours -= 12;\n    amPm = 'PM';\n  } else if (hours === 12) {\n    amPm = 'PM';\n  } else if (hours === 0) {\n    hours = 12;\n  }\n  return `${hours}:${timeValues[1]}:00 ${amPm}`;\n}\n\nexport function formatDateForSelect(value) {\n  let date = value.getDate().toString();\n  if (date.length === 1) {\n    date = `0${date}`;\n  }\n  let month = (value.getMonth() + 1).toString();\n  if (month.length === 1) {\n    month = `0${month}`;\n  }\n  return `${value.getFullYear()}-${month}-${date}`;\n}\n\nexport function formatTimeForSelect(value) {\n  let hours = value.getHours().toString();\n  if (hours.length === 1) {\n    hours = `0${hours}`;\n  }\n  let mins = value.getMinutes().toString();\n  if (mins.length === 1) {\n    mins = `0${mins}`;\n  }\n  return `${hours}:${mins}`;\n}\n\nexport function createEntryId(date, time) {\n  const dateArr = date.split('-');\n  const timeArr = time.split(':');\n  return `${dateArr[0]}${dateArr[1]}${dateArr[2]}${timeArr[0]}${timeArr[1]}`;\n}\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport months from '../../utils/Months';\nimport { formatDate, formatTime } from '../../utils/Formatting';\nimport { findMatches } from '../../utils/Lookup';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  render() {\n    const { onDetailClose, data, entries } = this.props;\n    const { loadedClass } = this.state;\n\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"entry-number\">\n                Entry No.&nbsp;\n                {data.number}\n              </span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">\n                {`${data.engines.length} engine train observed on ${formatDate(data.date, months)} at ${formatTime(data.time)} heading ${data.direction}.`}\n              </div>\n              <div className=\"detail-subhead\">Engines</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Ord.</th>\n                    <th>Line</th>\n                    <th>No.</th>\n                    <th>Pos.</th>\n                    <th>Sightings</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data.engines.map((engine) => {\n                      const bgStyle = {\n                        backgroundColor: engine.color,\n                      };\n                      return (\n                        <tr key={engine.number}>\n                          <td><span className=\"engine-color-indicator\" style={bgStyle}>{engine.order}</span></td>\n                          <td><span>{engine.line}</span></td>\n                          <td><span>{engine.number}</span></td>\n                          <td><span>{engine.location}</span></td>\n                          <td><span>{findMatches(engine.line, engine.number, entries)}</span></td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n              <div className=\"detail-subhead\">Notes</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDetail.propTypes = {\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired,\n  }),\n  entries: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Detail;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\n\nexport function findMatches(line, number, entries) {\n  console.log(`${line}, ${number}, ${entries.length}`);\n  // Return filtered array of matches, if any\n  return '';\n}\n\nexport function test() {\n  return '';\n}\n\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst About = () => (\n  <div>\n    <div className=\"menu-nav-item\">About the Project</div>\n    <p>\n      Trainspotted is my home office, set up in front of a backyard window looking out at the Milwaukee District North tracks across the alley.\n       During off-peak hours, freight trains are cleared to run along the Metra corridor.\n       Much like my work situation, the trains don&rsquo;t adhere to any set schedule. This is an exercise in applying structure to the chaos surrounding this new phase of my life.\n    </p>\n    <p>\n      This project also brought me up to speed with React/Redux and was developed using the full MERN stack.\n    </p>\n  </div>\n);\n\nexport default About;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      line: '',\n      location: '',\n      number: '',\n    };\n    this.handleLineChange = this.handleLineChange.bind(this);\n    this.handleNumberChange = this.handleNumberChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.isEngineValid = this.isEngineValid.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    const { line, location, number } = props;\n    this.setState({\n      line,\n      location,\n      number,\n    });\n  }\n\n  componentDidUpdate() {\n    const { id, updateEngines } = this.props;\n    const { line, location, number } = this.state;\n    updateEngines(id, this.isEngineValid(), line, location, number);\n  }\n\n  handleLineChange(event) {\n    this.setState({ line: event.target.value });\n  }\n\n  handleNumberChange(event) {\n    this.setState({ number: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleRemove() {\n    const { id, removeEngine } = this.props;\n    removeEngine(id);\n  }\n\n  isEngineValid() {\n    const { line, location, number } = this.state;\n    if (line === '' || location === '' || number === '') {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const { line, location, number } = this.state;\n    return (\n      <div className=\"flex-row add-engine-row\">\n        <label className=\"form-label form-select-label form-label-line\" htmlFor=\"line\">\n          <span>Line</span>\n          <select className=\"form-select\" id=\"line\" name=\"line\" value={line} onChange={this.handleLineChange}>\n            <option value=\"\">Select</option>\n            {\n              trainLineList.map(trainLine => (\n                <option value={trainLine.name} key={trainLine.id}>{trainLine.short}</option>\n              ))\n            }\n          </select>\n        </label>\n        <label className=\"form-label form-label-number\" htmlFor=\"number\">\n          <span>Number</span>\n          <input className=\"form-input\" id=\"number\" name=\"number\" type=\"number\" value={number} onChange={this.handleNumberChange} />\n        </label>\n        <label className=\"form-label form-select-label form-label-location\" htmlFor=\"location\">\n          <span>Location</span>\n          <select className=\"form-select\" id=\"location\" name=\"location\" value={location} onChange={this.handleLocationChange}>\n            <option value=\"\">Select</option>\n            <option value=\"front\">Front</option>\n            <option value=\"middle\">Middle</option>\n            <option value=\"end\">End</option>\n          </select>\n        </label>\n        <button className=\"remove-button\" type=\"button\" onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n\nAddEngine.propTypes = {\n  id: PropTypes.string.isRequired,\n  line: PropTypes.string,\n  location: PropTypes.string,\n  number: PropTypes.string,\n  removeEngine: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  updateEngines: PropTypes.func.isRequired,\n};\n\nexport default AddEngine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from './AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        time: formatTimeForDB(time),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-entry');\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { isActive, trainLineList } = this.props;\n    const { date, direction, engines, isEntryValid, time } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add an Entry</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddEntry.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(AddEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTrainLine } from '../../actions';\n\nclass AddLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineName: '',\n      isEntryValid: true,\n    };\n    this.handleLineNameChange = this.handleLineNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleLineNameChange(event) {\n    this.setState({ lineName: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { lineName } = this.state;\n    console.log(`${lineName},`);\n    let isValid = true;\n    event.preventDefault();\n    if (lineName === '') {\n      isValid = false;\n    }\n    if (isValid) {\n      dispatch(addTrainLine({\n        lineName,\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    this.setState({\n      lineName: '',\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-line');\n  }\n\n  render() {\n    const { isActive } = this.props;\n    const { lineName, isEntryValid } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add a Train Line</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-line-name\" htmlFor=\"lineName\">\n            <span>Name</span>\n            <input className=\"form-input\" id=\"lineName\" name=\"lineName\" type=\"text\" value={lineName} onChange={this.handleLineNameChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Train Line</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddLine.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nexport default connect()(AddLine);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst Contact = () => (\n  <div>\n    <div className=\"menu-nav-item\">Contact</div>\n    <p>\n      jef.a.mayer(at)gmail.com\n      <br />\n      <a className=\"inline-link\" href=\"https://jefmayer.com\">jefmayer.com</a>\n    </p>\n  </div>\n);\n\nexport default Contact;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../actions';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleUserChange(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { user, password } = this.state;\n    event.preventDefault();\n    dispatch(login({ user, password })); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('login');\n  }\n\n  logout() {\n    const { dispatch, setActiveMenuItem } = this.props;\n    setActiveMenuItem('');\n    // Clear inputs\n    dispatch(logout());\n  }\n\n  render() {\n    const { isActive, isLoggedIn, isLoginError } = this.props;\n    const { user, password } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (isLoginError) {\n      errorDisplayClass = '';\n    }\n    return (\n      !isLoggedIn\n        ? (\n          <div>\n            <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Login</button>\n            <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n              <label className=\"form-label\" htmlFor=\"user\">\n                <span>Name</span>\n                <input className=\"form-input\" id=\"user\" name=\"user\" type=\"text\" value={user} onChange={this.handleUserChange} />\n              </label>\n              <label className=\"form-label\" htmlFor=\"password\">\n                <span>Password</span>\n                <input className=\"form-input\" id=\"password\" name=\"password\" type=\"password\" value={password} onChange={this.handlePasswordChange} />\n              </label>\n              <input className=\"submit-button\" type=\"submit\" value=\"Login\" />\n              <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n            </form>\n          </div>\n        ) : (\n          <button className=\"menu-nav-item menu-nav-button\" type=\"button\" onClick={this.logout}>Logout</button>\n        )\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isLoginError: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n    isLoginError,\n  } = userStatus;\n  return {\n    isLoggedIn,\n    isLoginError,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport About from './About';\nimport AddEntry from './AddEntry';\nimport AddLine from './AddLine';\nimport Contact from './Contact';\nimport Login from './Login';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMenuItem: '',\n    };\n    this.divRef = React.createRef();\n    this.setActiveMenuItem = this.setActiveMenuItem.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { menuDisplayClass } = this.props;\n    if (menuDisplayClass === 'closed') {\n      const timer = setTimeout(() => {\n        this.divRef.current.setAttribute('style', 'position:absolute;');\n        clearTimeout(timer);\n      }, 150);\n    } else {\n      this.divRef.current.setAttribute('style', 'position:fixed;');\n    }\n  }\n\n  setActiveMenuItem(name) {\n    this.setState({ activeMenuItem: name });\n  }\n\n  render() {\n    const { activeMenuItem } = this.state;\n    const { isLoggedIn, menuDisplayClass, onMenuClick } = this.props;\n    return (\n      <div className={`menu-container ${menuDisplayClass}`} ref={this.divRef}>\n        <button className=\"menu-button\" onClick={onMenuClick} type=\"button\">\n          <span className=\"menu-icon\">\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n          </span>\n        </button>\n        <div className=\"menu-nav\">\n          <div className=\"menu-nav-inner\">\n            <About />\n            <Contact />\n            {isLoggedIn\n              && (\n                <div>\n                  <AddEntry\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-entry'}\n                  />\n                  <AddLine\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-line'}\n                  />\n                </div>\n              )\n            }\n            <Login\n              setActiveMenuItem={this.setActiveMenuItem}\n              isActive={activeMenuItem === 'login'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMenu.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  menuDisplayClass: PropTypes.string.isRequired,\n  onMenuClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  return {\n    isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(Menu);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries, fetchTrainLines, hideDetail, hideMenu, showMenu } from '../actions';\nimport Chart from '../components/chart/Chart';\nimport Detail from '../components/detail/Detail';\nimport Menu from '../components/menu/Menu';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n    dispatch(fetchTrainLines());\n  }\n\n  render() {\n    const { detailId, dispatch, entries, isDetailOpen, isMenuOpen } = this.props;\n\n    function onDetailClose() {\n      dispatch(hideDetail());\n    }\n\n    function onMenuClick() {\n      if (!isMenuOpen) {\n        dispatch(showMenu());\n      } else {\n        dispatch(hideMenu());\n      }\n    }\n\n    function getEntryById(id) {\n      return entries.find(entry => entry._id === id); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <div className=\"logo-wrapper\">\n            <img src={logo} className=\"logo-graphic\" alt=\"Trainspotted Logo\" />\n            <div className=\"logo-type\">Trainspotted</div>\n          </div>\n          <Menu\n            menuDisplayClass={isMenuOpen ? 'open' : 'closed'}\n            onMenuClick={onMenuClick}\n          />\n        </header>\n        <Chart\n          entries={entries}\n        />\n        {isDetailOpen\n          && (\n            <Detail\n              onDetailClose={onDetailClose}\n              data={getEntryById(detailId)}\n              entries={entries}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  detailId: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  isDetailOpen: PropTypes.bool,\n  isMenuOpen: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, entryDetail, menu } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    id: detailId,\n    isOpen: isDetailOpen,\n  } = entryDetail;\n  const {\n    isOpen: isMenuOpen,\n  } = menu;\n  return {\n    detailId,\n    entries,\n    isDetailOpen,\n    isMenuOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}