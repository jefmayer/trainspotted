{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/components/chart/Chart.jsx","js/components/detail/Detail.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","showDetail","id","type","data","rootReducer","combineReducers","entryData","state","arguments","length","undefined","isFetching","items","action","Object","objectSpread","entryDetail","isOpen","Entry","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","divRef","React","createRef","entry","arr","time","split","indexOf","parseInt","pct","toFixed","current","setAttribute","concat","_this$props","dispatch","onEntryClick","_id","react_default","a","createElement","className","ref","onClick","onKeyDown","engines","map","engine","bgStyle","backgroundColor","color","style","key","number","Component","connect","bindActionCreators","EntriesForDate","entryHeight","_this2","date","entries","chart_Entry","Chart","_ref","dates","toConsumableArray","Set","months","chart_EntriesForDate","Detail","closeDetailHandler","detail","App","fetch","then","response","json","receiveEntries","detailId","src","logo","alt","chart_Chart","detail_Detail","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","console","log","getState","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.86b54a5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\nexport const SHOW_DETAIL = 'SHOW_DETAIL';\nexport const HIDE_DETAIL = 'HIDE_DETAIL';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n\nexport const showDetail = id => ({\n  type: SHOW_DETAIL,\n  data: id,\n});\n\nexport const hideDetail = () => ({\n  type: HIDE_DETAIL,\n});\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n  SHOW_DETAIL,\n  HIDE_DETAIL,\n} from '../actions';\n\n\nconst entryData = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst entryDetail = (state = {\n  isOpen: false,\n  id: '',\n}, action) => {\n  switch (action.type) {\n    case SHOW_DETAIL:\n      return {\n        ...state,\n        isOpen: true,\n        id: action.data,\n      };\n    case HIDE_DETAIL:\n      return {\n        ...state,\n        isOpen: false,\n        id: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryData,\n  entryDetail,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1 && entry.time.indexOf('12:') === -1) {\n      arr[0] = parseInt(arr[0], 10) + 12;\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') !== -1) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  render() {\n    const { entry, dispatch } = this.props;\n\n    function onEntryClick() {\n      dispatch(showDetail(entry._id)); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <button className=\"engine-manifest\" ref={this.divRef} type=\"button\" onClick={onEntryClick} onKeyDown={onEntryClick}>\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => { /* eslint-disable-line arrow-parens, arrow-body-style */\n  return bindActionCreators(\n    {\n      showDetail,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapDispatchToProps)(Entry);\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date } = this.props;\n    const { entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\n\n\nconst Chart = ({ entries }) => {\n  const dates = [...new Set(entries.map(entry => entry.date))];\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  return (\n    <div className=\"train-chart\">\n      <div className=\"x-axis-header clearfix\">\n        <ul>\n          <li><span>12 AM</span></li>\n          <li><span>2 AM</span></li>\n          <li><span>4 AM</span></li>\n          <li><span>6 AM</span></li>\n          <li><span>8 AM</span></li>\n          <li><span>10 AM</span></li>\n          <li><span>12 PM</span></li>\n          <li><span>2 PM</span></li>\n          <li><span>4 PM</span></li>\n          <li><span>6 PM</span></li>\n          <li><span>8 PM</span></li>\n          <li><span>10 PM</span></li>\n        </ul>\n      </div>\n      <div className=\"time-table\">\n        <div className=\"month-bar\" />\n        {\n          dates.map(date => (\n            <div className=\"date-line\" key={date}>\n              <div className=\"month-display\">\n                <span>{`${months[date.split('/')[0] - 1]} ${date.split('/')[2]}`}</span>\n              </div>\n              <div className=\"date-display\">\n                <span>{date.split('/')[1]}</span>\n              </div>\n              <EntriesForDate\n                date={date}\n                entries={entries}\n              />\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Detail = ({ closeDetailHandler, detail }) => (\n  <div>\n    <button type=\"button\" onClick={closeDetailHandler}>Close</button>\n    <div>Detail Content...</div>\n    <div>{ detail }</div>\n  </div>\n);\n\nDetail.propTypes = {\n  closeDetailHandler: PropTypes.func,\n  detail: PropTypes.shape({\n    active: PropTypes.bool,\n    data: PropTypes.shape(PropTypes.object),\n  }),\n};\n\nexport default Detail;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries } from '../actions';\nimport Chart from '../components/chart/Chart';\nimport Detail from '../components/detail/Detail';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n  }\n\n  render() {\n    const { entries, isOpen, detailId } = this.props;\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <img src={logo} className=\"app-logo\" alt=\"logo\" />\n          <div className=\"app-title\">Trainspotted</div>\n        </header>\n        <Chart\n          entries={entries}\n        />\n        {isOpen\n          && <Detail />\n        }\n        <div>{detailId}</div>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  detailId: PropTypes.string,\n  isOpen: PropTypes.bool,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, entryDetail } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    id: detailId, /* eslint-disable-line no-unused-vars */\n    isOpen, /* eslint-disable-line no-unused-vars */\n  } = entryDetail;\n  return {\n    entries,\n    detailId,\n    isOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}