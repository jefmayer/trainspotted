{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/ataglance/DataFilter.jsx","js/utils/Formatting.js","js/components/ataglance/datasets/EngineValues.jsx","js/selectors/index.js","js/components/ataglance/datasets/OverviewValues.jsx","js/utils/DateUtils.js","js/components/ataglance/datasets/ResightingValues.jsx","js/components/ataglance/datasets/TimeValues.jsx","js/components/ataglance/datasets/WeekdayValues.jsx","js/components/ataglance/AtAGlance.jsx","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/utils/Months.js","js/components/chart/DateLine.jsx","js/components/chart/Chart.jsx","js/components/menu/AddEngine.jsx","js/components/detail/EditEntry.jsx","js/components/detail/Detail.jsx","js/components/menu/About.jsx","js/components/menu/AddEntry.jsx","js/components/menu/AddLine.jsx","js/components/menu/Contact.jsx","js/components/menu/Login.jsx","js/components/menu/Menu.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","entryAdded","json","type","data","showDetail","id","hideDetail","showMenu","hideMenu","addEntry","_ref2","date","direction","engines","time","notes","dispatch","fetch","method","headers","Headers","Accept","Content-Type","body","JSON","stringify","then","response","rootReducer","combineReducers","entryData","state","arguments","length","undefined","isFetching","items","action","Object","objectSpread","entryDetail","isOpen","menu","trainLines","userStatus","isLoggedIn","isLoginError","success","DataFilter","onFilterClick","_this$props","_this","props","label","_this$props2","this","isActive","react_default","a","createElement","key","className","onClick","Component","formatDateForDB","arr","split","concat","formatTimeForDB","timeValues","hours","parseInt","amPm","formatDateForSelect","value","getDate","toString","month","getMonth","getFullYear","formatTimeForSelect","getHours","mins","getMinutes","createEntryId","dateArr","timeArr","getRandomNumberKey","Math","round","random","EngineValues","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tableRef","React","createRef","_this2","setTimeout","current","classList","remove","line","entries","reduce","b","filter","engine","_this3","dataSet","trainLineList","ref","map","trainLine","bgStyle","backgroundColor","color","transform","getEngineCountByLine","name","style","item","defaultProps","connect","getResightings","createSelector","allEntryEngines","forEach","entry","push","find","short","number","entryId","_id","duplicates","Set","size","add","acc","match","dates","sort","Date","OveviewValues","console","log","north","perc","Number","isNaN","resightings","c","array","date1","date2","min","distinctResightings","getDistinctResightings","sightingLeader","getLineWithMostSightings","getDirectionPercentage","Infinity","max","ResightingValues","initialSightingDate","getInitialSightingDate","yAxis","scrollIndicatorRef","handleScroll","bind","assertThisInitialized","querySelector","addEventListener","window","removeEventListener","slice","interval","startDate","now","dayInterval","ceil","i","substr","setDate","getDatesByInterval","prevLeft","isPrevLeft","onEntryClick","left","getDatePositionInRange","lineStyle","width","onKeyDown","indexOf","bindActionCreators","TimeValues","AtAGlance","activeSet","values","handleDataSetChange","dataSets","setState","ataglance_DataFilter","OverviewValues","datasets_ResightingValues","datasets_EngineValues","datasets_TimeValues","WeekdayValues","Entry","divRef","pct","toFixed","setAttribute","EntriesForDate","entryHeight","chart_Entry","Months","DateLine","activeMonth","isMonthLabel","months","year","data-month","chart_EntriesForDate","Chart","currentMonth","chartRef","scrollTop","pageYOffset","document","documentElement","querySelectorAll","parentNode","getBoundingClientRect","top","getAttribute","toConsumableArray","chart_DateLine","replace","AddEngine","location","handleLineChange","handleNumberChange","handleLocationChange","isEngineValid","handleRemove","updateEngines","_this$state","event","target","removeEngine","_this$state2","_this$state3","htmlFor","onChange","EditEntry","isValid","idIter","isEntryValid","handleDateChange","handleTimeChange","handleDirectionChange","handleNotesChange","handleSubmit","handleCancel","displayForm","addEngine","reset","today","preventDefault","index","order","findIndex","splice","errorDisplayClass","onSubmit","menu_AddEngine","Detail","loadedClass","timer","clearInterval","trainline","sighting","onDetailClose","role","formatDate","ampm","formatTime","cellPadding","cellSpacing","findMatches","detail_EditEntry","About","AddEntry","setActiveMenuItem","AddLine","lineName","lineShortName","lineColor","handleLineNameChange","handleLineShortNameChange","handleLineColorChange","_ref3","addTrainLine","toLowerCase","Contact","href","Login","user","password","handleUserChange","handlePasswordChange","logout","_ref","loginAttempt","login","Menu","activeMenuItem","menuDisplayClass","clearTimeout","onMenuClick","menu_About","menu_Contact","menu_AddEntry","menu_AddLine","menu_Login","App","receiveEntries","receiveTrainLines","detailId","isDetailOpen","isMenuOpen","src","logo","alt","menu_Menu","ataglance_AtAGlance","chart_Chart","detail_Detail","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","render","es","containers_App","getElementById"],"mappings":"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","file":"static/js/main.024d9175.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const SUBMIT_TRAIN_LINE = 'SUBMIT_TRAIN_LINE';\nexport const TRAIN_LINE_ADDED = 'TRAIN_LINE_ADDED';\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\nexport const REQUEST_TRAIN_LINES = 'REQUEST_LINES';\nexport const RECEIVE_TRAIN_LINES = 'RECEIVE_LINES';\nexport const SUBMIT_ENTRY = 'SUBMIT_ENTRY';\nexport const ENTRY_ADDED = 'ENTRY_ADDED';\nexport const SHOW_DETAIL = 'SHOW_DETAIL';\nexport const HIDE_DETAIL = 'HIDE_DETAIL';\nexport const SHOW_MENU = 'SHOW_MENU';\nexport const HIDE_MENU = 'HIDE_MENU';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n});\n\nexport const requestTrainLines = () => ({\n  type: REQUEST_TRAIN_LINES,\n});\n\nexport const receiveTrainLines = json => ({\n  type: RECEIVE_TRAIN_LINES,\n  data: json,\n});\n\nexport const submitTrainLine = () => ({\n  type: SUBMIT_TRAIN_LINE,\n});\n\nexport const trainLineAdded = json => ({\n  type: TRAIN_LINE_ADDED,\n  data: json,\n});\n\nexport const submitEntry = () => ({\n  type: SUBMIT_ENTRY,\n});\n\nexport const entryAdded = json => ({\n  type: ENTRY_ADDED,\n  data: json,\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n\nexport const fetchTrainLines = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestTrainLines());\n  return fetch('/getLines')\n    .then(response => response.json())\n    .then(json => dispatch(receiveTrainLines(json)));\n};\n\nexport const showDetail = id => ({\n  type: SHOW_DETAIL,\n  data: id,\n});\n\nexport const hideDetail = () => ({\n  type: HIDE_DETAIL,\n});\n\nexport const showMenu = () => ({\n  type: SHOW_MENU,\n});\n\nexport const hideMenu = () => ({\n  type: HIDE_MENU,\n});\n\nexport const loginAttempt = json => ({\n  type: LOG_IN,\n  data: json,\n});\n\nexport const login = ({ user, password }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/login', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      user,\n      password,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(loginAttempt(json)));\n};\n\nexport const addEntry = ({ date, direction, engines, id, time, notes }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitEntry());\n  return fetch('/addEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      date,\n      time,\n      direction,\n      engines,\n      id,\n      notes,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const addTrainLine = ({ lineName, lineShortName, lineColor, id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitTrainLine());\n  return fetch('/addTrainLine', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      lineName,\n      lineShortName,\n      lineColor,\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const logout = () => ({\n  type: LOG_OUT,\n});\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  SUBMIT_TRAIN_LINE,\n  TRAIN_LINE_ADDED,\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n  REQUEST_TRAIN_LINES,\n  RECEIVE_TRAIN_LINES,\n  SUBMIT_ENTRY,\n  ENTRY_ADDED,\n  SHOW_DETAIL,\n  HIDE_DETAIL,\n  SHOW_MENU,\n  HIDE_MENU,\n  LOG_IN,\n  LOG_OUT,\n} from '../actions';\n\n\nconst entryData = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n    case SUBMIT_ENTRY:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n    case ENTRY_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst entryDetail = (state = {\n  isOpen: false,\n  id: '',\n}, action) => {\n  switch (action.type) {\n    case SHOW_DETAIL:\n      return {\n        ...state,\n        isOpen: true,\n        id: action.data,\n      };\n    case HIDE_DETAIL:\n      return {\n        ...state,\n        isOpen: false,\n        id: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst menu = (state = {\n  isOpen: false,\n}, action) => {\n  switch (action.type) {\n    case SHOW_MENU:\n      return {\n        ...state,\n        isOpen: true,\n      };\n    case HIDE_MENU:\n      return {\n        ...state,\n        isOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userStatus = (state = {\n  isLoggedIn: false,\n  isLoginError: false,\n  response: [{ success: 'error' }],\n}, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      if (action.data[0].success === 'success') {\n        return {\n          ...state,\n          isLoggedIn: true,\n          isLoginError: false,\n          response: action.data,\n        };\n      }\n      return {\n        ...state,\n        isLoggedIn: false,\n        isLoginError: true,\n        response: action.data,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst trainLines = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_TRAIN_LINES:\n    case SUBMIT_TRAIN_LINE:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_TRAIN_LINES:\n    case TRAIN_LINE_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryData,\n  entryDetail,\n  menu,\n  trainLines,\n  userStatus,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DataFilter extends Component {\n  onFilterClick = () => {\n    const { label, onFilterClick } = this.props;\n    onFilterClick(label);\n  }\n\n  render() {\n    const { isActive, label } = this.props;\n    return (\n      <li key={label}>\n        <button className={isActive ? 'active' : ''} onClick={this.onFilterClick} type=\"button\">\n          <span>{label}</span>\n        </button>\n      </li>\n    );\n  }\n}\n\nDataFilter.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  onFilterClick: PropTypes.func.isRequired,\n};\n\nexport default DataFilter;\n","export function formatDate(date, months) {\n  const arr = date.split('/');\n  return `${months[arr[0] - 1]} ${arr[1]}, ${arr[2]}`;\n}\n\nexport function formatTime(time) {\n  const arr = time.split(':');\n  let ampm = 'a.m.';\n  if (time.indexOf('PM') !== -1) {\n    ampm = 'p.m.';\n  }\n  return `${arr[0]}:${arr[1]} ${ampm}`;\n}\n\nexport function formatDateForDB(date) {\n  const arr = date.split('-');\n  return `${arr[1]}/${arr[2]}/${arr[0]}`;\n}\n\nexport function formatTimeForDB(time) {\n  const timeValues = time.split(':');\n  let hours = parseInt(timeValues[0], 10);\n  let amPm = 'AM';\n  if (hours > 12) {\n    hours -= 12;\n    amPm = 'PM';\n  } else if (hours === 12) {\n    amPm = 'PM';\n  } else if (hours === 0) {\n    hours = 12;\n  }\n  return `${hours}:${timeValues[1]}:00 ${amPm}`;\n}\n\nexport function formatDateForSelect(value) {\n  let date = value.getDate().toString();\n  if (date.length === 1) {\n    date = `0${date}`;\n  }\n  let month = (value.getMonth() + 1).toString();\n  if (month.length === 1) {\n    month = `0${month}`;\n  }\n  return `${value.getFullYear()}-${month}-${date}`;\n}\n\nexport function formatTimeForSelect(value) {\n  let hours = value.getHours().toString();\n  if (hours.length === 1) {\n    hours = `0${hours}`;\n  }\n  let mins = value.getMinutes().toString();\n  if (mins.length === 1) {\n    mins = `0${mins}`;\n  }\n  return `${hours}:${mins}`;\n}\n\nexport function createEntryId(date, time) {\n  const dateArr = date.split('-');\n  const timeArr = time.split(':');\n  return `${dateArr[0]}${dateArr[1]}${dateArr[2]}${timeArr[0]}${timeArr[1]}`;\n}\n\nexport function getRandomNumberKey() {\n  return `key-${Math.round(Math.random() * 1000 * Math.random() * 1000 / Math.random() * 1000 + Math.random() * 1000)}`;\n}\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRef = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.tableRef.current.classList.remove('initial-state');\n    }, 100);\n  }\n\n  getEngineCountByLine(line) {\n    const { entries } = this.props;\n    return entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line).length), 0);\n  }\n\n  render() {\n    const { dataSet, trainLineList } = this.props;\n    return (\n      <div className=\"data-table engine-values-table initial-state\" ref={this.tableRef}>\n        <div className=\"y-axis\">\n          {\n            trainLineList.map((trainLine) => {\n              const bgStyle = {\n                backgroundColor: trainLine.color,\n                transform: `scaleX(${this.getEngineCountByLine(trainLine.name) / 500})`,\n              };\n              return (\n                <div className=\"y-axis-row\" key={trainLine.id}>\n                  <div className=\"row-label\">{trainLine.name}</div>\n                  <div className=\"row-axis\" />\n                  <div className=\"value-display\" style={bgStyle} />\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.defaultProps = {\n  // Should be dynamic based on max number of line w/ most entries...\n  dataSet: ['0', '50', '100', '150', '200', '250', '300', '350', '400', '450', '500'],\n};\n\nEngineValues.propTypes = {\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n  entries: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, trainLines } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    entries,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console, arrow-body-style */\nimport { createSelector } from 'reselect';\n\nconst getEntryData = state => state.entryData.items;\nconst getTrainlines = state => state.trainLines.items;\n\nexport const getResightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    // Build list of all engines with entry keys, dates, colors\n    const allEntryEngines = [];\n    entryData.forEach(entry => entry.engines.forEach(engine => allEntryEngines.push({\n      engine: `${trainLines.find(line => engine.line === line.name).short}, ${engine.number}`,\n      entryId: entry._id, /* eslint-disable-line no-underscore-dangle */\n      date: entry.date,\n      color: trainLines.find(line => engine.line === line.name).color,\n    })));\n    // Find all engines seen more than once\n    const duplicates = new Set();\n    const resightings = allEntryEngines\n      .filter(entry => duplicates.size === duplicates.add(entry.engine).size)\n      // But there can be more than 2 matches... so now need to remove duplicates\n      .reduce((acc, current) => {\n        const match = acc.find(entry => entry.engine === current.engine);\n        // If match is false, then return accumulator w/ match addee\n        if (!match) {\n          return acc.concat([current]);\n        }\n        // If exists, then just return accumulator as is\n        return acc;\n      }, [])\n      .map((match) => {\n        // Find all sighting dates\n        const dates = allEntryEngines\n          .filter(entry => match.engine === entry.engine)\n          .map(entry => ({ date: entry.date, entryId: entry.entryId }))\n          .sort((a, b) => new Date(a.date) - new Date(b.date));\n        return {\n          engine: match.engine,\n          dates,\n          entryId: match.entryId,\n          color: match.color,\n        };\n      })\n      .sort((a, b) => new Date(a.dates[0].date) - new Date(b.dates[0].date));\n    return resightings;\n  },\n);\n\nexport default getResightings;\n/* eslint-enable no-console, arrow-body-style */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDaysBetweenDates } from '../../../utils/DateUtils';\nimport { getResightings } from '../../../selectors';\n\nclass OveviewValues extends Component {\n  constructor(props) {\n    super(props);\n    console.log('values');\n  }\n\n  getDirectionPercentage() {\n    const { entries } = this.props;\n    const north = entries.filter(entry => entry.direction === 'north');\n    const perc = Math.round(north.length / entries.length * 100);\n    return `${Number.isNaN(perc) ? '...' : perc}%`;\n  }\n\n  getLineWithMostSightings() {\n    const { entries, trainLineList } = this.props;\n    return trainLineList\n      .map(line => ({\n        name: line.name,\n        value: entries.reduce((a, b) => (a + b.engines.filter(engine => engine.line === line.name).length), 0),\n      }))\n      .sort((a, b) => b.value - a.value)[0];\n  }\n\n  getDistinctResightings() {\n    const { resightings } = this.props;\n    // Need to create a second array because there are more resightings,\n    // than items in the resightings array (one engine can have more than\n    // one resighting...\n    let arr = [];\n    resightings\n      // It's actually fine, prob somewhat inefficient, if we're looking\n      // for the duration of the last item in the array and itself... it'll just be 0\n      .map(item => item.dates.reduce((a, b, c, array) => arr.push({ engine: item.engine, time: getDaysBetweenDates(new Date(b.date), new Date(array[Math.min(c + 1, array.length - 1)].date)) }), 0));\n    // Filter out all the 0's here\n    arr = arr.filter(item => item.time !== 0);\n    return arr;\n  }\n\n  render() {\n    const { trainLineList, entries } = this.props;\n    const distinctResightings = this.getDistinctResightings();\n    let sightingLeader = this.getLineWithMostSightings();\n    if (!sightingLeader) {\n      sightingLeader = {\n        name: '',\n        value: '...',\n      };\n    }\n    return (\n      <div className=\"data-table\">\n        <div className=\"table-values-grid\">\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ trainLineList.length }</div>\n            <div className=\"body-copy\">Trainlines Observed</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.length }</div>\n            <div className=\"body-copy\">Total Number of Trains</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ entries.reduce((a, b) => (a + b.engines.length), 0) }</div>\n            <div className=\"body-copy\">Total Number of Engines</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ sightingLeader.value }</div>\n            <div className=\"body-copy\">\n              { sightingLeader.name }\n              &nbsp;Engines are Observed Most Often\n            </div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ this.getDirectionPercentage() }</div>\n            <div className=\"body-copy\">Percentage of Trains Headed North</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ distinctResightings.length }</div>\n            <div className=\"body-copy\">Total Number of Resightings*</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ Math.round(distinctResightings.reduce((a, b) => (a + b.time), 0) / distinctResightings.length) }</div>\n            <div className=\"body-copy\">Average Days Between a Resighting</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ distinctResightings.reduce((a, b) => Math.min(a, b.time), Infinity) }</div>\n            <div className=\"body-copy\">Fewest Days Between Resightings</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">{ distinctResightings.reduce((a, b) => Math.max(a, b.time), 0) }</div>\n            <div className=\"body-copy\">Most Days Between Resightings</div>\n          </div>\n          <div className=\"table-value\">\n            <div className=\"heading-xl\">...</div>\n            <div className=\"body-copy\">Engine With Most Resightings</div>\n          </div>\n        </div>\n        <div className=\"table-notes\">\n          <p className=\"body-xsmall\">*Resightings are the engines I&rsquo;ve observed on multiple occasions. It&rsquo;s entirely possible, more so likely, that these and others have passed back and forth at off hours. Some other observations:</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nOveviewValues.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const resightings = getResightings(state);\n  return {\n    entries,\n    resightings,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(OveviewValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nexport function getDatesByInterval(interval, startDate, now) {\n  // Get number of days between dates\n  const dayInterval = Math.ceil((now - startDate) / (1000 * 60 * 60 * 24) / interval);\n  // Build array of m/yy based off interval\n  const arr = [];\n  let i = 0;\n  let date = startDate;\n  do {\n    arr.push(`${date.getMonth() + 1}/${date.getFullYear().toString().substr(2)}`);\n    date = new Date(date.setDate(date.getDate() + dayInterval));\n    i += 1;\n  }\n  while (i <= interval);\n  return arr;\n}\n\nexport function getDaysBetweenDates(date1, date2) {\n  return Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\n}\n\nexport function getDatePositionInRange(date, startDate, now) {\n  return ((date - startDate) / (now - startDate));\n}\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDatesByInterval, getDatePositionInRange } from '../../../utils/DateUtils';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { showDetail } from '../../../actions';\nimport { getResightings } from '../../../selectors';\n\nclass ResightingValues extends Component {\n  constructor(props) {\n    super(props);\n    this.initialSightingDate = this.getInitialSightingDate();\n    this.tableRef = React.createRef();\n    this.yAxis = null;\n    this.scrollIndicatorRef = React.createRef();\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    /* setTimeout(() => {\n      this.tableRef.current.classList.remove('initial-state');\n    }, 100); */\n    this.yAxis = this.tableRef.current.querySelector('.y-axis');\n    this.yAxis.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  getInitialSightingDate() {\n    const { entries } = this.props;\n    const dates = entries.slice().sort((a, b) => new Date(a.date) - new Date(b.date));\n    return new Date(dates[0].date);\n  }\n\n  handleScroll() {\n    this.scrollIndicatorRef.current.classList.add('hidden');\n    this.yAxis.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const { dispatch, resightings } = this.props;\n    const dataSet = getDatesByInterval(10, new Date(this.initialSightingDate), new Date());\n    let prevLeft = '';\n    let isPrevLeft = false;\n\n    return (\n      <div className=\"data-table resightings-values-table\" ref={this.tableRef}>\n        <div className=\"y-axis\">\n          {\n            resightings.map((entry) => {\n              prevLeft = '';\n              isPrevLeft = false;\n\n              return (\n                <div className=\"y-axis-row\" key={getRandomNumberKey()}>\n                  <div className=\"row-label\">{entry.engine}</div>\n                  <div className=\"row-axis\">\n                    {\n                      entry.dates.map((date) => {\n                        function onEntryClick() {\n                          dispatch(showDetail(date.entryId));\n                        }\n                        const left = `${getDatePositionInRange(new Date(date.date), new Date(this.initialSightingDate), new Date()) * 100}%`;\n                        const bgStyle = {\n                          backgroundColor: entry.color,\n                          left,\n                        };\n                        const lineStyle = {\n                          backgroundColor: entry.color,\n                          left: prevLeft,\n                          width: `calc(${left} - ${prevLeft})`,\n                        };\n                        if (prevLeft !== '') {\n                          isPrevLeft = true;\n                        }\n                        prevLeft = left;\n                        return (\n                          <div key={getRandomNumberKey()}>\n                            <button\n                              className=\"sighting-marker\"\n                              onClick={onEntryClick}\n                              onKeyDown={onEntryClick}\n                              style={bgStyle}\n                              type=\"button\"\n                            >\n                              <span className=\"hidden\">{entry.engine.substr(entry.engine.indexOf(',') + 2)}</span>\n                            </button>\n                            {isPrevLeft\n                              && (\n                                <div\n                                  className=\"sighting-connector\"\n                                  style={lineStyle}\n                                />\n                              )\n                            }\n                          </div>\n                        );\n                      })\n                    }\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"scroll-indicator-icon\" ref={this.scrollIndicatorRef}>\n          <div />\n        </div>\n      </div>\n    );\n  }\n}\n\nResightingValues.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  resightings: PropTypes.arrayOf(PropTypes.object),\n};\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const resightings = getResightings(state);\n  return {\n    entries,\n    resightings,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResightingValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass TimeValues extends Component {\n  constructor(props) {\n    super(props);\n    console.log('TimeValues');\n  }\n\n  render() {\n    const { dataSet, trainLineList } = this.props;\n    return (\n      <div className=\"data-table time-values-table\">\n        <div className=\"y-axis\">\n          {\n            trainLineList.map(trainLine => (\n              <div className=\"y-axis-row\" key={trainLine.id}>\n                <div className=\"row-label\">{trainLine.name}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={`${item}-${Math.round(Math.random() * 1000)}`}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTimeValues.defaultProps = {\n  dataSet: ['12 AM', '2 AM', '4AM', '6 AM', '8 AM', ' 10 AM', '12 PM', '2 PM', '4 PM', '6 PM', '8 PM', '10 PM'],\n};\n\nTimeValues.propTypes = {\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(TimeValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n    console.log('values');\n  }\n\n  render() {\n    const { dataSet, trainLineList } = this.props;\n    return (\n      <div className=\"data-table\">\n        <div className=\"y-axis\">\n          {\n            trainLineList.map(trainLine => (\n              <div className=\"y-axis-row\" key={trainLine.id}>\n                <div className=\"row-label\">{trainLine.name}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={`${item}-${Math.round(Math.random() * 1000)}`}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.defaultProps = {\n  dataSet: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n};\n\nEngineValues.propTypes = {\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DataFilter from './DataFilter';\nimport EngineValues from './datasets/EngineValues';\nimport OverviewValues from './datasets/OverviewValues';\nimport ResightingValues from './datasets/ResightingValues';\nimport TimeValues from './datasets/TimeValues';\nimport WeekdayValues from './datasets/WeekdayValues';\n\nclass AtAGlance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSet: {\n        label: '',\n        values: [],\n      },\n    };\n    this.handleDataSetChange = this.handleDataSetChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { dataSets } = this.props;\n    this.setState({\n      activeSet: dataSets[0],\n    });\n  }\n\n  handleDataSetChange(value) {\n    const { dataSets } = this.props;\n    const dataSet = dataSets.find(item => item.label === value);\n    this.setState({ activeSet: dataSet });\n  }\n\n  render() {\n    const { dataSets } = this.props;\n    const { activeSet } = this.state;\n    return (\n      <div className=\"at-a-glance\">\n        <div className=\"page-heading-divider\">\n          <h2 className=\"heading-lg\">At A Glance</h2>\n        </div>\n        <div className=\"aggregate-data-visualization-module\">\n          <div className=\"module-inner\">\n            <div className=\"data-filters\">\n              <ul className=\"data-filters-inner\">\n                {\n                  dataSets.map(item => (\n                    <DataFilter\n                      isActive={item.label === activeSet.label}\n                      key={item.label}\n                      label={item.label}\n                      onFilterClick={this.handleDataSetChange}\n                    />\n                  ))\n                }\n              </ul>\n            </div>\n            <div className=\"data-visualization\">\n              {activeSet.label === 'Overview'\n                && (\n                  <OverviewValues />\n                )\n              }\n              {activeSet.label === 'Resightings'\n                && (\n                  <ResightingValues />\n                )\n              }\n              {activeSet.label === 'Engines'\n                && (\n                  <EngineValues />\n                )\n              }\n              {activeSet.label === 'Time'\n                && (\n                  <TimeValues />\n                )\n              }\n              {activeSet.label === 'Weekday'\n                && (\n                  <WeekdayValues />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAtAGlance.defaultProps = {\n  dataSets: [\n    {\n      label: 'Overview',\n    },\n    {\n      label: 'Resightings',\n    },\n    {\n      label: 'Engines',\n    },\n    {\n      label: 'Time',\n    },\n    {\n      label: 'Weekday',\n    },\n  ],\n};\n\nAtAGlance.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default AtAGlance;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1) {\n      if (entry.time.indexOf('12:') === -1 || entry.time.indexOf('12:') > 0) {\n        arr[0] = parseInt(arr[0], 10) + 12;\n      }\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') === 0) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  render() {\n    const { entry, dispatch } = this.props;\n\n    function onEntryClick() {\n      dispatch(showDetail(entry._id)); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <button className=\"engine-manifest\" ref={this.divRef} type=\"button\" onClick={onEntryClick} onKeyDown={onEntryClick}>\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n        <span className=\"engine-details-button\">...</span>\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => { /* eslint-disable-line arrow-body-style */\n  return bindActionCreators(\n    {\n      showDetail,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapDispatchToProps)(Entry);\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date, entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","const Months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default Months;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\nimport months from '../../utils/Months';\n\nclass DateLine extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  render() {\n    const {\n      activeMonth,\n      date,\n      entries,\n      isMonthLabel,\n    } = this.props;\n    const month = months[date.split('/')[0] - 1];\n    const year = date.split('/')[2];\n\n    return (\n      <div className=\"date-line\" ref={this.divRef}>\n        {isMonthLabel\n          && (\n            <div className={`month-display ${month === activeMonth ? 'sticky' : ''}`} data-month={month}>\n              <span>{`${month} ${year}`}</span>\n            </div>\n          )\n        }\n        <div className=\"date-display\">\n          <span>{date.split('/')[1]}</span>\n        </div>\n        <EntriesForDate\n          date={date}\n          entries={entries}\n        />\n      </div>\n    );\n  }\n}\n\nDateLine.propTypes = {\n  activeMonth: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isMonthLabel: PropTypes.bool.isRequired,\n};\n\nexport default DateLine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DateLine from './DateLine';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMonth: '',\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n    this.currentMonth = -1;\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    let month = '';\n    [].map.call(document.querySelectorAll('.month-display'), (item) => {\n      if (item.parentNode.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        // Should set the active month to whatever the last item less than scrollTop is...\n        month = item.getAttribute('data-month');\n      }\n    });\n    this.setState({ activeMonth: month });\n    //\n    if (this.chartRef !== null) {\n      if (this.chartRef.current.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        this.chartRef.current.classList.add('sticky');\n      } else {\n        this.chartRef.current.classList.remove('sticky');\n      }\n    }\n  }\n\n  render() {\n    const { entries } = this.props;\n    const { activeMonth } = this.state;\n    const dates = [...new Set(entries.map(entry => entry.date))];\n    let isMonthLabel = false;\n\n    return (\n      <div>\n        <div className=\"train-chart\" ref={this.chartRef}>\n          <div className=\"x-axis-header clearfix\">\n            <div className=\"page-heading-divider\">\n              <h2 className=\"heading-lg\">Sightings</h2>\n            </div>\n            <ul>\n              <li><span>12 AM</span></li>\n              <li><span>2 AM</span></li>\n              <li><span>4 AM</span></li>\n              <li><span>6 AM</span></li>\n              <li><span>8 AM</span></li>\n              <li><span>10 AM</span></li>\n              <li><span>12 PM</span></li>\n              <li><span>2 PM</span></li>\n              <li><span>4 PM</span></li>\n              <li><span>6 PM</span></li>\n              <li><span>8 PM</span></li>\n              <li><span>10 PM</span></li>\n            </ul>\n          </div>\n          <div className=\"time-table\">\n            <div className=\"month-bar\" />\n            {\n              dates.map((date) => {\n                if (this.currentMonth !== date.split('/')[0]) {\n                  this.currentMonth = date.split('/')[0]; /* eslint-disable-line prefer-destructuring */\n                  isMonthLabel = true;\n                } else {\n                  isMonthLabel = false;\n                }\n                return (\n                  <DateLine\n                    activeMonth={activeMonth}\n                    key={date.replace(/\\//, '')}\n                    date={date}\n                    entries={entries}\n                    isMonthLabel={isMonthLabel}\n                  />\n                );\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      line: '',\n      location: '',\n      number: '',\n    };\n    this.handleLineChange = this.handleLineChange.bind(this);\n    this.handleNumberChange = this.handleNumberChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.isEngineValid = this.isEngineValid.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    const { line, location, number } = props;\n    this.setState({\n      line,\n      location,\n      number,\n    });\n  }\n\n  componentDidUpdate() {\n    const { id, updateEngines } = this.props;\n    const { line, location, number } = this.state;\n    updateEngines(id, this.isEngineValid(), line, location, number);\n  }\n\n  handleLineChange(event) {\n    this.setState({ line: event.target.value });\n  }\n\n  handleNumberChange(event) {\n    this.setState({ number: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleRemove() {\n    const { id, removeEngine } = this.props;\n    removeEngine(id);\n  }\n\n  isEngineValid() {\n    const { line, location, number } = this.state;\n    if (line === '' || location === '' || number === '') {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const { line, location, number } = this.state;\n    return (\n      <div className=\"flex-row add-engine-row\">\n        <label className=\"form-label form-select-label form-label-line\" htmlFor=\"line\">\n          <span>Line</span>\n          <select className=\"form-select\" id=\"line\" name=\"line\" value={line} onChange={this.handleLineChange}>\n            <option value=\"\">Select</option>\n            {\n              trainLineList.map(trainLine => (\n                <option value={trainLine.name} key={trainLine.id}>{trainLine.short}</option>\n              ))\n            }\n          </select>\n        </label>\n        <label className=\"form-label form-label-number\" htmlFor=\"number\">\n          <span>Number</span>\n          <input className=\"form-input\" id=\"number\" name=\"number\" type=\"number\" value={number} onChange={this.handleNumberChange} />\n        </label>\n        <label className=\"form-label form-select-label form-label-location\" htmlFor=\"location\">\n          <span>Location</span>\n          <select className=\"form-select\" id=\"location\" name=\"location\" value={location} onChange={this.handleLocationChange}>\n            <option value=\"\">Select</option>\n            <option value=\"front\">Front</option>\n            <option value=\"middle\">Middle</option>\n            <option value=\"end\">End</option>\n          </select>\n        </label>\n        <button className=\"remove-button\" type=\"button\" onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n\nAddEngine.propTypes = {\n  id: PropTypes.string.isRequired,\n  line: PropTypes.string,\n  location: PropTypes.string,\n  number: PropTypes.string,\n  removeEngine: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  updateEngines: PropTypes.func.isRequired,\n};\n\nexport default AddEngine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from '../menu/AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass EditEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isActive: false,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n        notes: '',\n      }],\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    this.setState({ isActive: true });\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { trainLineList, entryData } = this.props;\n    const {\n      date,\n      direction,\n      engines,\n      isActive,\n      isEntryValid,\n      notes,\n      time,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    console.log(entryData);\n    return (\n      <div>\n        <button className=\"edit-entry-button\" onClick={this.displayForm} type=\"button\">\n          <span className=\"text-button\">Edit Entry</span>\n        </button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nEditEntry.propTypes = {\n  dispatch: PropTypes.func,\n  entryData: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EditEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport EditEntry from './EditEntry';\nimport months from '../../utils/Months';\nimport { formatDate, formatTime } from '../../utils/Formatting';\nimport { getResightings } from '../../selectors';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  editEntry() {\n    console.log(this);\n  }\n\n  findMatches(trainline, number) {\n    const { resightings, trainLineList } = this.props;\n    const engine = `${trainLineList.find(line => trainline === line.name).short}, ${number}`;\n    const sighting = resightings.find(entry => entry.engine === engine);\n    if (sighting) {\n      return sighting.dates.length;\n    }\n    return 1;\n  }\n\n  render() {\n    const { onDetailClose, data, isLoggedIn } = this.props;\n    const { loadedClass } = this.state;\n\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"entry-number\">\n                Entry No.&nbsp;\n                {data.number}\n              </span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">\n                {`${data.engines.length} engine train observed on ${formatDate(data.date, months)} at ${formatTime(data.time)} heading ${data.direction}.`}\n              </div>\n              <div className=\"detail-subhead\">Engines</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Ord.</th>\n                    <th>Line</th>\n                    <th>No.</th>\n                    <th>Pos.</th>\n                    <th>Sightings</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data.engines.map((engine) => {\n                      const bgStyle = {\n                        backgroundColor: engine.color,\n                      };\n                      return (\n                        <tr key={engine.number}>\n                          <td><span className=\"engine-color-indicator\" style={bgStyle}>{engine.order}</span></td>\n                          <td><span>{engine.line}</span></td>\n                          <td><span>{engine.number}</span></td>\n                          <td><span>{engine.location}</span></td>\n                          <td><span>{this.findMatches(engine.line, engine.number)}</span></td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n              <div className=\"detail-subhead\">Notes</div>\n              <p className=\"detail-notes\">{data.notes}</p>\n            </div>\n          </div>\n          {isLoggedIn\n            && (\n              <EditEntry\n                entryData={data}\n              />\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { trainLines, userStatus } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  const resightings = getResightings(state);\n  return {\n    isLoggedIn,\n    resightings,\n    trainLineList,\n  };\n};\n\nDetail.propTypes = {\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired,\n  }),\n  isLoggedIn: PropTypes.bool.isRequired,\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps)(Detail);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst About = () => (\n  <div>\n    <div className=\"menu-nav-item\">About the Project</div>\n    <p>\n      The Milwaukee District North tracks sit just beyond the alley in my backyard.\n       During off-peak hours, freight trains are cleared to run along this stretch of the Metra corridor.\n       They rumble past my home office window at seemingly random intervals while I work and attempt to apply structure to this new phase of my career.\n    </p>\n    <p>\n      This project also brought me up to speed with React/Redux and was developed using the full MERN stack.\n    </p>\n  </div>\n);\n\nexport default About;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from './AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n      }],\n      notes: '',\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-entry');\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { isActive, trainLineList } = this.props;\n    const { date, direction, engines, isEntryValid, notes, time } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add an Entry</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddEntry.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(AddEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTrainLine } from '../../actions';\n\nclass AddLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n      isEntryValid: true,\n    };\n    this.handleLineNameChange = this.handleLineNameChange.bind(this);\n    this.handleLineShortNameChange = this.handleLineShortNameChange.bind(this);\n    this.handleLineColorChange = this.handleLineColorChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleLineNameChange(event) {\n    this.setState({ lineName: event.target.value });\n  }\n\n  handleLineShortNameChange(event) {\n    this.setState({ lineShortName: event.target.value });\n  }\n\n  handleLineColorChange(event) {\n    this.setState({ lineColor: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n    } = this.state;\n    console.log(`${lineName},`);\n    let isValid = true;\n    event.preventDefault();\n    if (lineName === '') {\n      isValid = false;\n    }\n    if (isValid) {\n      dispatch(addTrainLine({\n        lineName,\n        lineShortName,\n        lineColor,\n        id: lineName.toLowerCase().replace(/\\s/, '-'),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    this.setState({\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-line');\n  }\n\n  render() {\n    const { isActive } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n      isEntryValid,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add a Train Line</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-line-name\" htmlFor=\"lineName\">\n            <span>Name</span>\n            <input className=\"form-input\" id=\"lineName\" name=\"lineName\" type=\"text\" value={lineName} onChange={this.handleLineNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-short-name\" htmlFor=\"lineShortName\">\n            <span>Short Name</span>\n            <input className=\"form-input\" id=\"lineShortName\" name=\"lineShortName\" type=\"text\" value={lineShortName} onChange={this.handleLineShortNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-color\" htmlFor=\"lineColor\">\n            <span>Color</span>\n            <input className=\"form-input\" id=\"lineColor\" name=\"lineColor\" type=\"text\" value={lineColor} onChange={this.handleLineColorChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Line</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddLine.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nexport default connect()(AddLine);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst Contact = () => (\n  <div>\n    <div className=\"menu-nav-item\">Contact</div>\n    <p>\n      jef.a.mayer(at)gmail.com\n      <br />\n      <a className=\"inline-link\" href=\"https://jefmayer.com\">jefmayer.com</a>\n    </p>\n  </div>\n);\n\nexport default Contact;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../actions';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleUserChange(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { user, password } = this.state;\n    event.preventDefault();\n    dispatch(login({ user, password })); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('login');\n  }\n\n  logout() {\n    const { dispatch, setActiveMenuItem } = this.props;\n    setActiveMenuItem('');\n    // Clear inputs\n    dispatch(logout());\n  }\n\n  render() {\n    const { isActive, isLoggedIn, isLoginError } = this.props;\n    const { user, password } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (isLoginError) {\n      errorDisplayClass = '';\n    }\n    return (\n      !isLoggedIn\n        ? (\n          <div>\n            <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Login</button>\n            <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n              <label className=\"form-label\" htmlFor=\"user\">\n                <span>Name</span>\n                <input className=\"form-input\" id=\"user\" name=\"user\" type=\"text\" value={user} onChange={this.handleUserChange} />\n              </label>\n              <label className=\"form-label\" htmlFor=\"password\">\n                <span>Password</span>\n                <input className=\"form-input\" id=\"password\" name=\"password\" type=\"password\" value={password} onChange={this.handlePasswordChange} />\n              </label>\n              <input className=\"submit-button\" type=\"submit\" value=\"Login\" />\n              <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n            </form>\n          </div>\n        ) : (\n          <button className=\"menu-nav-item menu-nav-button\" type=\"button\" onClick={this.logout}>Logout</button>\n        )\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isLoginError: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n    isLoginError,\n  } = userStatus;\n  return {\n    isLoggedIn,\n    isLoginError,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport About from './About';\nimport AddEntry from './AddEntry';\nimport AddLine from './AddLine';\nimport Contact from './Contact';\nimport Login from './Login';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMenuItem: '',\n    };\n    this.divRef = React.createRef();\n    this.setActiveMenuItem = this.setActiveMenuItem.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { menuDisplayClass } = this.props;\n    if (menuDisplayClass === 'closed') {\n      const timer = setTimeout(() => {\n        this.divRef.current.setAttribute('style', 'position:absolute;');\n        clearTimeout(timer);\n      }, 150);\n    } else {\n      this.divRef.current.setAttribute('style', 'position:fixed;');\n    }\n  }\n\n  setActiveMenuItem(name) {\n    this.setState({ activeMenuItem: name });\n  }\n\n  render() {\n    const { activeMenuItem } = this.state;\n    const { isLoggedIn, menuDisplayClass, onMenuClick } = this.props;\n    return (\n      <div className={`menu-container ${menuDisplayClass}`} ref={this.divRef}>\n        <button className=\"menu-button\" onClick={onMenuClick} type=\"button\">\n          <span className=\"menu-icon\">\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n          </span>\n        </button>\n        <div className=\"menu-nav\">\n          <div className=\"menu-nav-inner\">\n            <About />\n            <Contact />\n            {isLoggedIn\n              && (\n                <div>\n                  <AddEntry\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-entry'}\n                  />\n                  <AddLine\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-line'}\n                  />\n                </div>\n              )\n            }\n            <Login\n              setActiveMenuItem={this.setActiveMenuItem}\n              isActive={activeMenuItem === 'login'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMenu.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  menuDisplayClass: PropTypes.string.isRequired,\n  onMenuClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  return {\n    isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(Menu);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries, fetchTrainLines, hideDetail, hideMenu, showMenu } from '../actions';\nimport AtAGlance from '../components/ataglance/AtAGlance';\nimport Chart from '../components/chart/Chart';\nimport Detail from '../components/detail/Detail';\nimport Menu from '../components/menu/Menu';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n    dispatch(fetchTrainLines());\n  }\n\n  render() {\n    const { detailId, dispatch, entries, isDetailOpen, isMenuOpen } = this.props;\n\n    function onDetailClose() {\n      dispatch(hideDetail());\n    }\n\n    function onMenuClick() {\n      if (!isMenuOpen) {\n        dispatch(showMenu());\n      } else {\n        dispatch(hideMenu());\n      }\n    }\n\n    function getEntryById(id) {\n      return entries.find(entry => entry._id === id); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <div className=\"logo-wrapper\">\n            <img src={logo} className=\"logo-graphic\" alt=\"Trainspotted Logo\" />\n            <div className=\"logo-type\">Trainspotted</div>\n          </div>\n          <Menu\n            menuDisplayClass={isMenuOpen ? 'open' : 'closed'}\n            onMenuClick={onMenuClick}\n          />\n        </header>\n        <AtAGlance />\n        <Chart\n          entries={entries}\n        />\n        {isDetailOpen\n          && (\n            <Detail\n              onDetailClose={onDetailClose}\n              data={getEntryById(detailId)}\n              entries={entries}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  detailId: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  isDetailOpen: PropTypes.bool,\n  isMenuOpen: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, entryDetail, menu } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    id: detailId,\n    isOpen: isDetailOpen,\n  } = entryDetail;\n  const {\n    isOpen: isMenuOpen,\n  } = menu;\n  return {\n    detailId,\n    entries,\n    isDetailOpen,\n    isMenuOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\n// console.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}