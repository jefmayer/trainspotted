{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/utils/Months.js","js/components/chart/Chart.jsx","js/utils/Formatting.js","js/components/detail/Detail.jsx","js/components/menu/About.jsx","js/components/menu/AddEngine.jsx","js/components/menu/AddEntry.jsx","js/components/menu/AddLine.jsx","js/components/menu/Contact.jsx","js/components/menu/Login.jsx","js/components/menu/Menu.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","showDetail","id","type","data","hideDetail","showMenu","hideMenu","rootReducer","combineReducers","entryData","state","arguments","length","undefined","isFetching","items","action","Object","objectSpread","entryDetail","isOpen","menu","trainLines","userStatus","isLoggedIn","isLoginError","response","success","Entry","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","divRef","React","createRef","entry","arr","time","split","indexOf","parseInt","pct","toFixed","current","setAttribute","concat","_this$props","dispatch","onEntryClick","_id","react_default","a","createElement","className","ref","onClick","onKeyDown","engines","map","engine","bgStyle","backgroundColor","color","style","key","number","Component","connect","bindActionCreators","EntriesForDate","entryHeight","_this2","date","entries","chart_Entry","Months","Chart","_ref","dates","toConsumableArray","Set","months","chart_EntriesForDate","formatDateForDB","formatTimeForDB","timeValues","hours","amPm","createEntryId","dateArr","timeArr","Detail","loadedClass","timer","setTimeout","setState","clearInterval","onDetailClose","role","formatDate","ampm","formatTime","direction","cellPadding","cellSpacing","order","line","location","About","AddEngine","handleLineChange","bind","assertThisInitialized","handleNumberChange","handleLocationChange","isEngineValid","handleRemove","updateEngines","_this$state","event","target","value","_this$props2","removeEngine","_this$state2","trainLineList","_this$state3","htmlFor","name","onChange","trainLine","short","AddEntry","idIter","isEntryValid","isValid","handleDateChange","handleTimeChange","handleDirectionChange","handleSubmit","displayForm","addEngine","today","Date","getDate","toString","month","getMonth","getFullYear","getHours","mins","getMinutes","preventDefault","forEach","_ref2","fetch","method","headers","Headers","Accept","Content-Type","body","JSON","stringify","then","json","entryAdded","addEntry","index","setActiveMenuItem","push","findIndex","splice","item","find","isActive","errorDisplayClass","onSubmit","menu_AddEngine","AddLine","lineName","handleLineNameChange","console","log","Contact","href","Login","user","password","handleUserChange","handlePasswordChange","logout","loginAttempt","login","Menu","activeMenuItem","menuDisplayClass","clearTimeout","onMenuClick","menu_About","menu_Contact","menu_AddEntry","menu_AddLine","menu_Login","App","receiveEntries","receiveTrainLines","detailId","isDetailOpen","isMenuOpen","src","logo","alt","menu_Menu","chart_Chart","detail_Detail","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","getState","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.8485b65f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\nexport const REQUEST_TRAIN_LINES = 'REQUEST_LINES';\nexport const RECEIVE_TRAIN_LINES = 'RECEIVE_LINES';\nexport const SUBMIT_ENTRY = 'SUBMIT_ENTRY';\nexport const ENTRY_ADDED = 'ENTRY_ADDED';\nexport const SHOW_DETAIL = 'SHOW_DETAIL';\nexport const HIDE_DETAIL = 'HIDE_DETAIL';\nexport const SHOW_MENU = 'SHOW_MENU';\nexport const HIDE_MENU = 'HIDE_MENU';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n});\n\nexport const requestTrainLines = () => ({\n  type: REQUEST_TRAIN_LINES,\n});\n\nexport const receiveTrainLines = json => ({\n  type: RECEIVE_TRAIN_LINES,\n  data: json,\n});\n\nexport const submitEntry = () => ({\n  type: SUBMIT_ENTRY,\n});\n\nexport const entryAdded = json => ({\n  type: ENTRY_ADDED,\n  data: json,\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n\nexport const fetchTrainLines = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestTrainLines());\n  return fetch('/getLines')\n    .then(response => response.json())\n    .then(json => dispatch(receiveTrainLines(json)));\n};\n\nexport const showDetail = id => ({\n  type: SHOW_DETAIL,\n  data: id,\n});\n\nexport const hideDetail = () => ({\n  type: HIDE_DETAIL,\n});\n\nexport const showMenu = () => ({\n  type: SHOW_MENU,\n});\n\nexport const hideMenu = () => ({\n  type: HIDE_MENU,\n});\n\nexport const loginAttempt = json => ({\n  type: LOG_IN,\n  data: json,\n});\n\nexport const login = ({ user, password }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/login', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      user,\n      password,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(loginAttempt(json)));\n};\n\nexport const addEntry = ({ date, direction, engines, id, time }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitEntry());\n  return fetch('/addEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      date,\n      time,\n      direction,\n      engines,\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const logout = () => ({\n  type: LOG_OUT,\n});\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n  REQUEST_TRAIN_LINES,\n  RECEIVE_TRAIN_LINES,\n  SUBMIT_ENTRY,\n  ENTRY_ADDED,\n  SHOW_DETAIL,\n  HIDE_DETAIL,\n  SHOW_MENU,\n  HIDE_MENU,\n  LOG_IN,\n  LOG_OUT,\n} from '../actions';\n\n\nconst entryData = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n    case SUBMIT_ENTRY:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n    case ENTRY_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst entryDetail = (state = {\n  isOpen: false,\n  id: '',\n}, action) => {\n  switch (action.type) {\n    case SHOW_DETAIL:\n      return {\n        ...state,\n        isOpen: true,\n        id: action.data,\n      };\n    case HIDE_DETAIL:\n      return {\n        ...state,\n        isOpen: false,\n        id: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst menu = (state = {\n  isOpen: false,\n}, action) => {\n  switch (action.type) {\n    case SHOW_MENU:\n      return {\n        ...state,\n        isOpen: true,\n      };\n    case HIDE_MENU:\n      return {\n        ...state,\n        isOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userStatus = (state = {\n  isLoggedIn: false,\n  isLoginError: false,\n  response: [{ success: 'error' }],\n}, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      if (action.data[0].success === 'success') {\n        return {\n          ...state,\n          isLoggedIn: true,\n          isLoginError: false,\n          response: action.data,\n        };\n      }\n      return {\n        ...state,\n        isLoggedIn: false,\n        isLoginError: true,\n        response: action.data,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst trainLines = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_TRAIN_LINES:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_TRAIN_LINES:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryData,\n  entryDetail,\n  menu,\n  trainLines,\n  userStatus,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1 && entry.time.indexOf('12:') === -1) {\n      arr[0] = parseInt(arr[0], 10) + 12;\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') !== -1) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  render() {\n    const { entry, dispatch } = this.props;\n\n    function onEntryClick() {\n      dispatch(showDetail(entry._id)); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <button className=\"engine-manifest\" ref={this.divRef} type=\"button\" onClick={onEntryClick} onKeyDown={onEntryClick}>\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n        <span className=\"engine-details-button\">...</span>\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => { /* eslint-disable-line arrow-parens, arrow-body-style */\n  return bindActionCreators(\n    {\n      showDetail,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapDispatchToProps)(Entry);\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date } = this.props;\n    const { entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","const Months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default Months;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\nimport months from '../../utils/Months';\n\n\nconst Chart = ({ entries }) => {\n  const dates = [...new Set(entries.map(entry => entry.date))];\n\n  return (\n    <div className=\"train-chart\">\n      <div className=\"x-axis-header clearfix\">\n        <ul>\n          <li><span>12 AM</span></li>\n          <li><span>2 AM</span></li>\n          <li><span>4 AM</span></li>\n          <li><span>6 AM</span></li>\n          <li><span>8 AM</span></li>\n          <li><span>10 AM</span></li>\n          <li><span>12 PM</span></li>\n          <li><span>2 PM</span></li>\n          <li><span>4 PM</span></li>\n          <li><span>6 PM</span></li>\n          <li><span>8 PM</span></li>\n          <li><span>10 PM</span></li>\n        </ul>\n      </div>\n      <div className=\"time-table\">\n        <div className=\"month-bar\" />\n        {\n          dates.map(date => (\n            <div className=\"date-line\" key={date}>\n              <div className=\"month-display\">\n                <span>{`${months[date.split('/')[0] - 1]} ${date.split('/')[2]}`}</span>\n              </div>\n              <div className=\"date-display\">\n                <span>{date.split('/')[1]}</span>\n              </div>\n              <EntriesForDate\n                date={date}\n                entries={entries}\n              />\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","export function formatDate(date, months) {\n  const arr = date.split('/');\n  return `${months[arr[0] - 1]} ${arr[1]}, ${arr[2]}`;\n}\n\nexport function formatTime(time) {\n  const arr = time.split(':');\n  let ampm = 'a.m.';\n  if (time.indexOf('PM') !== -1) {\n    ampm = 'p.m.';\n  }\n  return `${arr[0]}:${arr[1]} ${ampm}`;\n}\n\nexport function formatDateForDB(date) {\n  const arr = date.split('-');\n  return `${arr[1]}/${arr[2]}/${arr[0]}`;\n}\n\nexport function formatTimeForDB(time) {\n  const timeValues = time.split(':');\n  let hours = parseInt(timeValues[0], 10);\n  let amPm = 'AM';\n  if (hours > 12) {\n    hours -= 12;\n    amPm = 'PM';\n  } else if (hours === 12) {\n    amPm = 'PM';\n  } else if (hours === 0) {\n    hours = 12;\n  }\n  return `${hours}:${timeValues[1]}:00 ${amPm}`;\n}\n\nexport function createEntryId(date, time) {\n  const dateArr = date.split('-');\n  const timeArr = time.split(':');\n  return `${dateArr[0]}${dateArr[1]}${dateArr[2]}${timeArr[0]}${timeArr[1]}`;\n}\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport months from '../../utils/Months';\nimport { formatDate, formatTime } from '../../utils/Formatting';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  render() {\n    const { onDetailClose, data } = this.props;\n    const { loadedClass } = this.state;\n\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"entry-number\">\n                Entry No.&nbsp;\n                {data.number}\n              </span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">\n                {`${data.engines.length} engine train observed on ${formatDate(data.date, months)} at ${formatTime(data.time)} heading ${data.direction}.`}\n              </div>\n              <div className=\"detail-subhead\">Engines</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Ord.</th>\n                    <th>Line</th>\n                    <th>No.</th>\n                    <th>Pos.</th>\n                    <th>Sightings</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data.engines.map((engine) => {\n                      const bgStyle = {\n                        backgroundColor: engine.color,\n                      };\n                      return (\n                        <tr key={engine.number}>\n                          <td><span className=\"engine-color-indicator\" style={bgStyle}>{engine.order}</span></td>\n                          <td><span>{engine.line}</span></td>\n                          <td><span>{engine.number}</span></td>\n                          <td><span>{engine.location}</span></td>\n                          <td><span>&nbsp;</span></td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n              <div className=\"detail-subhead\">Notes</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDetail.propTypes = {\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Detail;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst About = () => (\n  <div>\n    <div className=\"menu-nav-item\">About the Project</div>\n    <p>\n      Trainspotted is my home office, set up in front of a backyard window looking out at the Milwaukee District North tracks across the alley.\n       During off-peak hours, freight trains are cleared to run along the Metra corridor.\n       Much like my work situation, the trains don&rsquo;t adhere to any set schedule. This is an exercise in applying structure to the chaos surrounding this new phase of my life.\n    </p>\n    <p>\n      This project also brought me up to speed with React/Redux and was developed using the full MERN stack.\n    </p>\n  </div>\n);\n\nexport default About;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      line: '',\n      location: '',\n      number: '',\n    };\n    this.handleLineChange = this.handleLineChange.bind(this);\n    this.handleNumberChange = this.handleNumberChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.isEngineValid = this.isEngineValid.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { id, updateEngines } = this.props;\n    const { line, location, number } = this.state;\n    updateEngines(id, this.isEngineValid(), line, location, number);\n  }\n\n  handleLineChange(event) {\n    this.setState({ line: event.target.value });\n  }\n\n  handleNumberChange(event) {\n    this.setState({ number: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleRemove() {\n    const { id, removeEngine } = this.props;\n    removeEngine(id);\n  }\n\n  isEngineValid() {\n    const { line, location, number } = this.state;\n    if (line === '' || location === '' || number === '') {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const { line, location, number } = this.state;\n    return (\n      <div className=\"flex-row add-engine-row\">\n        <label className=\"form-label form-select-label form-label-line\" htmlFor=\"line\">\n          <span>Line</span>\n          <select className=\"form-select\" id=\"line\" name=\"line\" value={line} onChange={this.handleLineChange}>\n            <option value=\"\">Select</option>\n            {\n              trainLineList.map(trainLine => (\n                <option value={trainLine.name} key={trainLine.id}>{trainLine.short}</option>\n              ))\n            }\n          </select>\n        </label>\n        <label className=\"form-label form-label-number\" htmlFor=\"number\">\n          <span>Number</span>\n          <input className=\"form-input\" id=\"number\" name=\"number\" type=\"number\" value={number} onChange={this.handleNumberChange} />\n        </label>\n        <label className=\"form-label form-select-label form-label-location\" htmlFor=\"location\">\n          <span>Location</span>\n          <select className=\"form-select\" id=\"location\" name=\"location\" value={location} onChange={this.handleLocationChange}>\n            <option value=\"\">Select</option>\n            <option value=\"front\">Front</option>\n            <option value=\"middle\">Middle</option>\n            <option value=\"end\">End</option>\n          </select>\n        </label>\n        <button className=\"remove-button\" type=\"button\" onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n\nAddEngine.propTypes = {\n  id: PropTypes.string.isRequired,\n  removeEngine: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  updateEngines: PropTypes.func.isRequired,\n};\n\nexport default AddEngine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from './AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB } from '../../utils/Formatting';\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    let date = today.getDate().toString();\n    if (date.length === 1) {\n      date = `0${date}`;\n    }\n    let month = (today.getMonth() + 1).toString();\n    if (month.length === 1) {\n      month = `0${month}`;\n    }\n    this.setState({ date: `${today.getFullYear()}-${month}-${date}` });\n    let hours = today.getHours().toString();\n    if (hours.length === 1) {\n      hours = `0${hours}`;\n    }\n    let mins = today.getMinutes().toString();\n    if (mins.length === 1) {\n      mins = `0${mins}`;\n    }\n    this.setState({ time: `${hours}:${mins}` });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        time: formatTimeForDB(time),\n      }));\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-entry');\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { isActive, trainLineList } = this.props;\n    const { date, direction, engines, isEntryValid, time } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add an Entry</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddEntry.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(AddEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass AddLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineName: '',\n    };\n    this.handleLineNameChange = this.handleLineNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleLineNameChange(event) {\n    this.setState({ lineName: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { lineName } = this.state;\n    console.log(`${lineName},`);\n    event.preventDefault();\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-line');\n  }\n\n  render() {\n    const { isActive } = this.props;\n    const { lineName } = this.state;\n    const errorDisplayClass = 'hidden';\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add a Train Line</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-line-name\" htmlFor=\"lineName\">\n            <span>Name</span>\n            <input className=\"form-input\" id=\"lineName\" name=\"lineName\" type=\"text\" value={lineName} onChange={this.handleLineNameChange} />\n          </label>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddLine.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nexport default AddLine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst Contact = () => (\n  <div>\n    <div className=\"menu-nav-item\">Contact</div>\n    <p>\n      jef.a.mayer(at)gmail.com\n      <br />\n      <a className=\"inline-link\" href=\"https://jefmayer.com\">jefmayer.com</a>\n    </p>\n  </div>\n);\n\nexport default Contact;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../actions';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleUserChange(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { user, password } = this.state;\n    event.preventDefault();\n    dispatch(login({ user, password })); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('login');\n  }\n\n  logout() {\n    const { dispatch, setActiveMenuItem } = this.props;\n    setActiveMenuItem('');\n    // Clear inputs\n    dispatch(logout());\n  }\n\n  render() {\n    const { isActive, isLoggedIn, isLoginError } = this.props;\n    const { user, password } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (isLoginError) {\n      errorDisplayClass = '';\n    }\n    return (\n      !isLoggedIn\n        ? (\n          <div>\n            <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Login</button>\n            <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n              <label className=\"form-label\" htmlFor=\"user\">\n                <span>Name</span>\n                <input className=\"form-input\" id=\"user\" name=\"user\" type=\"text\" value={user} onChange={this.handleUserChange} />\n              </label>\n              <label className=\"form-label\" htmlFor=\"password\">\n                <span>Password</span>\n                <input className=\"form-input\" id=\"password\" name=\"password\" type=\"password\" value={password} onChange={this.handlePasswordChange} />\n              </label>\n              <input className=\"submit-button\" type=\"submit\" value=\"Login\" />\n              <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n            </form>\n          </div>\n        ) : (\n          <button className=\"menu-nav-item menu-nav-button\" type=\"button\" onClick={this.logout}>Logout</button>\n        )\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isLoginError: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n    isLoginError,\n  } = userStatus;\n  return {\n    isLoggedIn,\n    isLoginError,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport About from './About';\nimport AddEntry from './AddEntry';\nimport AddLine from './AddLine';\nimport Contact from './Contact';\nimport Login from './Login';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMenuItem: '',\n    };\n    this.divRef = React.createRef();\n    this.setActiveMenuItem = this.setActiveMenuItem.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { menuDisplayClass } = this.props;\n    if (menuDisplayClass === 'closed') {\n      const timer = setTimeout(() => {\n        this.divRef.current.setAttribute('style', 'position:absolute;');\n        clearTimeout(timer);\n      }, 150);\n    } else {\n      this.divRef.current.setAttribute('style', 'position:fixed;');\n    }\n  }\n\n  setActiveMenuItem(name) {\n    this.setState({ activeMenuItem: name });\n  }\n\n  render() {\n    const { activeMenuItem } = this.state;\n    const { isLoggedIn, menuDisplayClass, onMenuClick } = this.props;\n    return (\n      <div className={`menu-container ${menuDisplayClass}`} ref={this.divRef}>\n        <button className=\"menu-button\" onClick={onMenuClick} type=\"button\">\n          <span className=\"menu-icon\">\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n          </span>\n        </button>\n        <div className=\"menu-nav\">\n          <div className=\"menu-nav-inner\">\n            <About />\n            <Contact />\n            {isLoggedIn\n              && (\n                <div>\n                  <AddEntry\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-entry'}\n                  />\n                  <AddLine\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-line'}\n                  />\n                </div>\n              )\n            }\n            <Login\n              setActiveMenuItem={this.setActiveMenuItem}\n              isActive={activeMenuItem === 'login'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMenu.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  menuDisplayClass: PropTypes.string.isRequired,\n  onMenuClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  return {\n    isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(Menu);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries, fetchTrainLines, hideDetail, hideMenu, showMenu } from '../actions';\nimport Chart from '../components/chart/Chart';\nimport Detail from '../components/detail/Detail';\nimport Menu from '../components/menu/Menu';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n    dispatch(fetchTrainLines());\n  }\n\n  render() {\n    const { detailId, dispatch, entries, isDetailOpen, isMenuOpen } = this.props;\n\n    function onDetailClose() {\n      dispatch(hideDetail());\n    }\n\n    function onMenuClick() {\n      if (!isMenuOpen) {\n        dispatch(showMenu());\n      } else {\n        dispatch(hideMenu());\n      }\n    }\n\n    function getEntryById(id) {\n      return entries.find(entry => entry._id === id); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <div className=\"logo-wrapper\">\n            <img src={logo} className=\"logo-graphic\" alt=\"Trainspotted Logo\" />\n            <div className=\"logo-type\">Trainspotted</div>\n          </div>\n          <Menu\n            menuDisplayClass={isMenuOpen ? 'open' : 'closed'}\n            onMenuClick={onMenuClick}\n          />\n        </header>\n        <Chart\n          entries={entries}\n        />\n        {isDetailOpen\n          && (\n            <Detail\n              onDetailClose={onDetailClose}\n              data={getEntryById(detailId)}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  detailId: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  isDetailOpen: PropTypes.bool,\n  isMenuOpen: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, entryDetail, menu } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    id: detailId,\n    isOpen: isDetailOpen,\n  } = entryDetail;\n  const {\n    isOpen: isMenuOpen,\n  } = menu;\n  return {\n    detailId,\n    entries,\n    isDetailOpen,\n    isMenuOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}