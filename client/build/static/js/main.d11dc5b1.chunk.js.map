{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/components/chart/Chart.jsx","js/components/detail/Detail.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","fetchEntries","dispatch","type","fetch","then","response","json","data","receivedAt","Date","now","receiveEntries","rootReducer","combineReducers","entryDataReducer","state","arguments","length","undefined","isFetching","items","action","Object","objectSpread","lastUpdated","Entry","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","divRef","React","createRef","entry","arr","time","split","indexOf","parseInt","pct","toFixed","current","setAttribute","concat","onEntryClick","console","log","react_default","a","createElement","className","ref","onClick","onKeyDown","engines","map","engine","bgStyle","backgroundColor","color","style","key","number","Component","EntriesForDate","entryHeight","_this2","date","entries","chart_Entry","_id","Chart","activeDataSet","dates","toConsumableArray","Set","months","chart_EntriesForDate","Detail","_ref","closeDetailHandler","detail","App","src","logo","alt","chart_Chart","detail_Detail","connect","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.d11dc5b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n  receivedAt: Date.now(),\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n} from '../actions';\n\n\nconst entryDataReducer = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n        lastUpdated: action.receivedAt,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryDataReducer,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1 && entry.time.indexOf('12:') === -1) {\n      arr[0] = parseInt(arr[0], 10) + 12;\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') !== -1) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  render() {\n    const { entry } = this.props;\n\n    function onEntryClick() {\n      console.log('onEntryClick');\n    }\n\n    return (\n      <button className=\"engine-manifest\" ref={this.divRef} type=\"button\" onClick={onEntryClick} onKeyDown={onEntryClick}>\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n};\n\nexport default Entry;\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date } = this.props;\n    const { entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeDataSet: {},\n    };\n  }\n\n  /* onEntryClick(data) {\n    this.setState({\n      activeDataSet: data,\n    });\n    const { activeDataSet } = this.state;\n    console.log(activeDataSet);\n  } */\n\n  render() {\n    const { entries } = this.props;\n    const { activeDataSet } = this.state;\n    const dates = [...new Set(entries.map(entry => entry.date))];\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n\n    return (\n      <div className=\"train-chart\">\n        <div className=\"x-axis-header clearfix\">\n          <ul>\n            <li><span>12 AM</span></li>\n            <li><span>2 AM</span></li>\n            <li><span>4 AM</span></li>\n            <li><span>6 AM</span></li>\n            <li><span>8 AM</span></li>\n            <li><span>10 AM</span></li>\n            <li><span>12 PM</span></li>\n            <li><span>2 PM</span></li>\n            <li><span>4 PM</span></li>\n            <li><span>6 PM</span></li>\n            <li><span>8 PM</span></li>\n            <li><span>10 PM</span></li>\n          </ul>\n        </div>\n        <div className=\"time-table\">\n          <div className=\"month-bar\" />\n          {\n            dates.map(date => (\n              <div className=\"date-line\" key={date}>\n                <div className=\"month-display\">\n                  <span>{`${months[date.split('/')[0] - 1]} ${date.split('/')[2]}`}</span>\n                </div>\n                <div className=\"date-display\">\n                  <span>{date.split('/')[1]}</span>\n                </div>\n                <EntriesForDate\n                  date={date}\n                  entries={entries}\n                  onClick={activeDataSet}\n                />\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Detail = ({ closeDetailHandler, detail }) => (\n  <div>\n    <button type=\"button\" onClick={closeDetailHandler}>Close</button>\n    <div>Detail Content...</div>\n    <div>{ detail }</div>\n  </div>\n);\n\nDetail.propTypes = {\n  closeDetailHandler: PropTypes.func,\n  detail: PropTypes.shape({\n    active: PropTypes.bool,\n    data: PropTypes.shape(PropTypes.object),\n  }),\n};\n\nexport default Detail;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries } from '../actions';\nimport Chart from '../components/chart/Chart';\nimport Detail from '../components/detail/Detail';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n  }\n\n  render() {\n    const { entries } = this.props;\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <img src={logo} className=\"app-logo\" alt=\"logo\" />\n          <div className=\"app-title\">Trainspotted</div>\n        </header>\n        <Chart entries={entries} />\n        <Detail />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryDataReducer } = state;\n  const {\n    items: entries,\n  } = entryDataReducer || {\n    items: [],\n  };\n  return {\n    entries,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\n/* const initialState = {\n  entires: [],\n  entryDetailId: '',\n};\n// const store = createStore(rootReducer, initialState); */\n// console.log(store.getState());\n\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}