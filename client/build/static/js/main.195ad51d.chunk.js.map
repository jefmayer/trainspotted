{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/ataglance/DataFilter.jsx","js/components/ataglance/datasets/EngineValues.jsx","js/components/ataglance/datasets/ResightingValues.jsx","js/components/ataglance/datasets/TimeValues.jsx","js/components/ataglance/datasets/WeekdayValues.jsx","js/components/ataglance/AtAGlance.jsx","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/utils/Months.js","js/components/chart/Chart.jsx","js/components/menu/AddEngine.jsx","js/utils/Formatting.js","js/components/detail/EditEntry.jsx","js/components/detail/Detail.jsx","js/utils/Lookup.js","js/components/menu/About.jsx","js/components/menu/AddEntry.jsx","js/components/menu/AddLine.jsx","js/components/menu/Contact.jsx","js/components/menu/Login.jsx","js/components/menu/Menu.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","entryAdded","json","type","data","showDetail","id","hideDetail","showMenu","hideMenu","addEntry","_ref2","date","direction","engines","time","notes","dispatch","fetch","method","headers","Headers","Accept","Content-Type","body","JSON","stringify","then","response","rootReducer","combineReducers","entryData","state","arguments","length","undefined","isFetching","items","action","Object","objectSpread","entryDetail","isOpen","menu","trainLines","userStatus","isLoggedIn","isLoginError","success","DataFilter","onFilterClick","_this$props","_this","props","label","_this$props2","this","isActive","react_default","a","createElement","key","className","onClick","Component","EngineValues","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","console","log","dataSet","trainLineList","map","trainLine","name","item","concat","Math","round","random","defaultProps","connect","ResightingValues","TimeValues","AtAGlance","activeSet","values","handleDataSetChange","bind","assertThisInitialized","dataSets","setState","value","find","_this2","ataglance_DataFilter","datasets_EngineValues","datasets_ResightingValues","datasets_TimeValues","WeekdayValues","Entry","divRef","React","createRef","entry","arr","split","indexOf","parseInt","pct","toFixed","current","setAttribute","onEntryClick","_id","ref","onKeyDown","engine","bgStyle","backgroundColor","color","style","number","bindActionCreators","EntriesForDate","entryHeight","entries","chart_Entry","Months","Chart","_ref","dates","toConsumableArray","Set","currentMonth","isMonthLabel","months","chart_EntriesForDate","AddEngine","line","location","handleLineChange","handleNumberChange","handleLocationChange","isEngineValid","handleRemove","updateEngines","_this$state","event","target","removeEngine","_this$state2","_this$state3","htmlFor","onChange","short","formatDateForDB","formatTimeForDB","timeValues","hours","amPm","formatDateForSelect","getDate","toString","month","getMonth","getFullYear","formatTimeForSelect","getHours","mins","getMinutes","createEntryId","dateArr","timeArr","EditEntry","isValid","idIter","isEntryValid","handleDateChange","handleTimeChange","handleDirectionChange","handleNotesChange","handleSubmit","handleCancel","displayForm","addEngine","reset","today","Date","preventDefault","forEach","index","order","push","findIndex","splice","errorDisplayClass","onSubmit","menu_AddEngine","Detail","loadedClass","timer","setTimeout","clearInterval","onDetailClose","role","formatDate","ampm","formatTime","cellPadding","cellSpacing","findMatches","detail_EditEntry","About","AddEntry","setActiveMenuItem","AddLine","lineName","lineShortName","lineColor","handleLineNameChange","handleLineShortNameChange","handleLineColorChange","_ref3","addTrainLine","toLowerCase","replace","Contact","href","Login","user","password","handleUserChange","handlePasswordChange","logout","loginAttempt","login","Menu","activeMenuItem","menuDisplayClass","clearTimeout","onMenuClick","menu_About","menu_Contact","menu_AddEntry","menu_AddLine","menu_Login","App","receiveEntries","receiveTrainLines","detailId","isDetailOpen","isMenuOpen","src","logo","alt","menu_Menu","ataglance_AtAGlance","chart_Chart","detail_Detail","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","getState","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yNC+C3BC,EAAa,SAAAC,GAAI,MAAK,CACjCC,KAxCyB,cAyCzBC,KAAMF,IAiBKG,EAAa,SAAAC,GAAE,MAAK,CAC/BH,KA1DyB,cA2DzBC,KAAME,IAGKC,EAAa,iBAAO,CAC/BJ,KA9DyB,gBAiEdK,EAAW,iBAAO,CAC7BL,KAjEuB,cAoEZM,EAAW,iBAAO,CAC7BN,KApEuB,cA6FZO,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,UAAWC,EAApBH,EAAoBG,QAASR,EAA7BK,EAA6BL,GAAIS,EAAjCJ,EAAiCI,KAAMC,EAAvCL,EAAuCK,MAAvC,OAAmD,SAAAC,GAEzE,OADAA,EA/DgC,CAChCd,KArC0B,iBAoGnBe,MAAM,YAAa,CACxBC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CACnBC,OAAQ,mBACRC,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CACnBd,OACAG,OACAF,YACAC,UACAR,KACAU,YAGDW,KAAK,SAAAC,GAAQ,OAAIA,EAAS1B,SAC1ByB,KAAK,SAAAzB,GAAI,OAAIe,EAAShB,EAAWC,QCuBvB2B,EARKC,YAAgB,CAClCC,UAvHgB,WAGJ,IAHKC,EAGLC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHa,CACzBG,YAAY,EACZC,MAAO,IACNC,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACZ,OAAQG,EAAOnC,MACb,IDtB2B,kBCuB3B,IDnBwB,eCoBtB,OAAOoC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEI,YAAY,IAEhB,ID3B2B,kBC4B3B,IDxBuB,cCyBrB,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEI,YAAY,EACZC,MAAOC,EAAOlC,OAElB,QACE,OAAO4B,IAqGXS,YAjGkB,WAGN,IAHOT,EAGPC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHe,CAC3BS,QAAQ,EACRpC,GAAI,IACHgC,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACZ,OAAQG,EAAOnC,MACb,IDvCuB,cCwCrB,OAAOoC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEU,QAAQ,EACRpC,GAAIgC,EAAOlC,OAEf,ID5CuB,cC6CrB,OAAOmC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEU,QAAQ,EACRpC,GAAIgC,EAAOlC,OAEf,QACE,OAAO4B,IAgFXW,KA5EW,WAEC,IAFAX,EAEAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFQ,CACpBS,QAAQ,GAER,QADYT,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACGhC,MACb,ID1DqB,YC2DnB,OAAOoC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEU,QAAQ,IAEZ,ID9DqB,YC+DnB,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEU,QAAQ,IAEZ,QACE,OAAOV,IA8DXY,WA3BiB,WAGL,IAHMZ,EAGNC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHc,CAC1BG,YAAY,EACZC,MAAO,IACNC,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACZ,OAAQG,EAAOnC,MACb,IDnH+B,gBCoH/B,IDxH6B,oBCyH3B,OAAOoC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEI,YAAY,IAEhB,IDxH+B,gBCyH/B,ID7H4B,mBC8H1B,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEI,YAAY,EACZC,MAAOC,EAAOlC,OAElB,QACE,OAAO4B,IASXa,WA3DiB,WAIL,IAJMb,EAINC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAJc,CAC1Ba,YAAY,EACZC,cAAc,EACdnB,SAAU,CAAC,CAAEoB,QAAS,WACrBV,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACZ,OAAQG,EAAOnC,MACb,ID7EkB,SC8EhB,MAA+B,YAA3BmC,EAAOlC,KAAK,GAAG4C,QACVT,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEc,YAAY,EACZC,cAAc,EACdnB,SAAUU,EAAOlC,OAGdmC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEc,YAAY,EACZC,cAAc,EACdnB,SAAUU,EAAOlC,OAErB,ID3FmB,UC4FjB,OAAOmC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEc,YAAY,IAEhB,QACE,OAAOd,gDCpFEiB,6MAvBbC,cAAgB,WAAM,IAAAC,EACaC,EAAKC,MAA9BC,EADYH,EACZG,OACRJ,EAFoBC,EACLD,eACDI,4EAGP,IAAAC,EACqBC,KAAKH,MAAzBI,EADDF,EACCE,SAAUH,EADXC,EACWD,MAClB,OACEI,EAAAC,EAAAC,cAAA,MAAIC,IAAKP,GACPI,EAAAC,EAAAC,cAAA,UAAQE,UAAWL,EAAW,SAAW,GAAIM,QAASP,KAAKN,cAAe/C,KAAK,UAC7EuD,EAAAC,EAAAC,cAAA,YAAON,YAXQU,aCEnBC,cACJ,SAAAA,EAAYZ,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAAS,GACjBb,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAA0B,GAAAI,KAAAb,KAAMH,IACNiB,QAAQC,IAAI,UAFKnB,wEAKV,IAAAD,EAC4BK,KAAKH,MAAhCmB,EADDrB,EACCqB,QAASC,EADVtB,EACUsB,cACjB,OACEf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAEXW,EAAcC,IAAI,SAAAC,GAAS,OACzBjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaD,IAAKc,EAAUrE,IACzCoD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaa,EAAUC,MACtClB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAKvBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAEVU,EAAQE,IAAI,SAAAG,GAAI,OACdnB,EAAAC,EAAAC,cAAA,MAAIC,IAAG,GAAAiB,OAAKD,EAAL,KAAAC,OAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,YAAqBJ,gBAzBhDb,aAoC3BC,EAAaiB,aAAe,CAC1BV,QAAS,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAQvE,IAUeW,cAVS,SAACnD,GAKvB,MAAO,CACLyC,cALqBzC,EAAfY,WAENP,QAOW8C,CAAyBlB,GCvDlCmB,cACJ,SAAAA,EAAY/B,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAA4B,GACjBhC,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAA6C,GAAAf,KAAAb,KAAMH,IACNiB,QAAQC,IAAI,UAFKnB,wEAKV,IAAAD,EAC4BK,KAAKH,MAAhCmB,EADDrB,EACCqB,QAASC,EADVtB,EACUsB,cACjB,OACEf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAEXW,EAAcC,IAAI,SAAAC,GAAS,OACzBjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaD,IAAKc,EAAUrE,IACzCoD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaa,EAAUC,MACtClB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAKvBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAEVU,EAAQE,IAAI,SAAAG,GAAI,OACdnB,EAAAC,EAAAC,cAAA,MAAIC,IAAG,GAAAiB,OAAKD,EAAL,KAAAC,OAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,YAAqBJ,gBAzB5Cb,aAoC/BoB,EAAiBF,aAAe,CAC9BV,QAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,UAQ7E,IAUeW,cAVS,SAACnD,GAKvB,MAAO,CACLyC,cALqBzC,EAAfY,WAENP,QAOW8C,CAAyBC,GCvDlCC,cACJ,SAAAA,EAAYhC,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAA6B,GACjBjC,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAA8C,GAAAhB,KAAAb,KAAMH,IACNiB,QAAQC,IAAI,UAFKnB,wEAKV,IAAAD,EAC4BK,KAAKH,MAAhCmB,EADDrB,EACCqB,QAASC,EADVtB,EACUsB,cACjB,OACEf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAEXW,EAAcC,IAAI,SAAAC,GAAS,OACzBjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaD,IAAKc,EAAUrE,IACzCoD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaa,EAAUC,MACtClB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAKvBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAEVU,EAAQE,IAAI,SAAAG,GAAI,OACdnB,EAAAC,EAAAC,cAAA,MAAIC,IAAG,GAAAiB,OAAKD,EAAL,KAAAC,OAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,YAAqBJ,gBAzBlDb,aAoCzBqB,EAAWH,aAAe,CACxBV,QAAS,CAAC,QAAS,OAAQ,MAAO,OAAQ,OAAQ,SAAU,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,UAQvG,IAUeW,cAVS,SAACnD,GAKvB,MAAO,CACLyC,cALqBzC,EAAfY,WAENP,QAOW8C,CAAyBE,GCvDlCpB,cACJ,SAAAA,EAAYZ,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAAS,GACjBb,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAA0B,GAAAI,KAAAb,KAAMH,IACNiB,QAAQC,IAAI,UAFKnB,wEAKV,IAAAD,EAC4BK,KAAKH,MAAhCmB,EADDrB,EACCqB,QAASC,EADVtB,EACUsB,cACjB,OACEf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAEXW,EAAcC,IAAI,SAAAC,GAAS,OACzBjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaD,IAAKc,EAAUrE,IACzCoD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaa,EAAUC,MACtClB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAKvBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAEVU,EAAQE,IAAI,SAAAG,GAAI,OACdnB,EAAAC,EAAAC,cAAA,MAAIC,IAAG,GAAAiB,OAAKD,EAAL,KAAAC,OAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,YAAqBJ,gBAzBhDb,aAoC3BC,EAAaiB,aAAe,CAC1BV,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAQ1C,IAUeW,cAVS,SAACnD,GAKvB,MAAO,CACLyC,cALqBzC,EAAfY,WAENP,QAOW8C,CAAyBlB,GCnDlCqB,cACJ,SAAAA,EAAYjC,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAA8B,IACjBlC,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAA+C,GAAAjB,KAAAb,KAAMH,KACDrB,MAAQ,CACXuD,UAAW,CACTjC,MAAO,GACPkC,OAAQ,KAGZpC,EAAKqC,oBAAsBrC,EAAKqC,oBAAoBC,KAAzBnD,OAAAoD,EAAA,EAAApD,CAAAa,IARVA,mFAWC,IACVwC,EAAapC,KAAKH,MAAlBuC,SACRpC,KAAKqC,SAAS,CACZN,UAAWK,EAAS,iDAIJE,GAAO,IAEnBtB,EADehB,KAAKH,MAAlBuC,SACiBG,KAAK,SAAAlB,GAAI,OAAIA,EAAKvB,QAAUwC,IACrDtC,KAAKqC,SAAS,CAAEN,UAAWf,qCAGpB,IAAAwB,EAAAxC,KACCoC,EAAapC,KAAKH,MAAlBuC,SACAL,EAAc/B,KAAKxB,MAAnBuD,UACR,OACE7B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAd,gBAEFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uCACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBAEV8B,EAASlB,IAAI,SAAAG,GAAI,OACfnB,EAAAC,EAAAC,cAACqC,EAAD,CACExC,SAAUoB,EAAKvB,QAAUiC,EAAUjC,MACnCO,IAAKgB,EAAKvB,MACVA,MAAOuB,EAAKvB,MACZJ,cAAe8C,EAAKP,0BAM9B/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACQ,YAApByB,EAAUjC,OAEPI,EAAAC,EAAAC,cAACsC,EAAD,MAGiB,gBAApBX,EAAUjC,OAEPI,EAAAC,EAAAC,cAACuC,EAAD,MAGiB,SAApBZ,EAAUjC,OAEPI,EAAAC,EAAAC,cAACwC,EAAD,MAGiB,YAApBb,EAAUjC,OAEPI,EAAAC,EAAAC,cAACyC,EAAD,iBAnEMrC,aA8ExBsB,EAAUJ,aAAe,CACvBU,SAAU,CACR,CACEtC,MAAO,WAET,CACEA,MAAO,QAET,CACEA,MAAO,WAET,CACEA,MAAO,iBASEgC,gBCrGTgB,cACJ,SAAAA,EAAYjD,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAA8C,IACjBlD,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAA+D,GAAAjC,KAAAb,KAAMH,KACDkD,OAASC,IAAMC,YAFHrD,mFAKC,IACVsD,EAAUlD,KAAKH,MAAfqD,MAGFC,EAAMD,EAAM3F,KAAK6F,MAAM,MACK,IAA9BF,EAAM3F,KAAK8F,QAAQ,QAA+C,IAA/BH,EAAM3F,KAAK8F,QAAQ,SACxDF,EAAI,GAAKG,SAASH,EAAI,GAAI,IAAM,KAGA,IAA9BD,EAAM3F,KAAK8F,QAAQ,QAA+C,IAA/BH,EAAM3F,KAAK8F,QAAQ,SACxDF,EAAI,GAAKG,SAASH,EAAI,GAAI,IAAM,IAElC,IAAMI,IAAiB,KAATJ,EAAI,GAAmC,GAAvBG,SAASH,EAAI,GAAI,KAAY,KAAKK,QAAQ,GACxExD,KAAK+C,OAAOU,QAAQC,aAAa,QAAjC,QAAApC,OAAkDiC,EAAlD,wCAGO,IAAA5D,EACqBK,KAAKH,MAAzBqD,EADDvD,EACCuD,MAAOzF,EADRkC,EACQlC,SAEf,SAASkG,IACPlG,EAASZ,EAAWqG,EAAMU,MAG5B,OACE1D,EAAAC,EAAAC,cAAA,UAAQE,UAAU,kBAAkBuD,IAAK7D,KAAK+C,OAAQpG,KAAK,SAAS4D,QAASoD,EAAcG,UAAWH,GAElGT,EAAM5F,QAAQ4D,IAAI,SAAC6C,GACjB,IAAMC,EAAU,CACdC,gBAAiBF,EAAOG,OAE1B,OACEhE,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAgB6D,MAAOH,EAAS3D,IAAK0D,EAAOK,QACzDL,EAAOK,UAKhBlE,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBAAhB,eA3CYE,aAkELmB,cATY,SAAAlE,GACzB,OAAO4G,YACL,CACExH,cAEFY,IAIWkE,CAA4BmB,GC9B5BwB,cArCb,SAAAA,EAAYzE,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAAsE,IACjB1E,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAAuF,GAAAzD,KAAAb,KAAMH,KACDkD,OAASC,IAAMC,YACpBrD,EAAK2E,YAAc,EAHF3E,mFAOjBI,KAAK+C,OAAOU,QAAQC,aAAa,QAAjC,UAAApC,OAAoDtB,KAAKuE,YAAzD,yCAGO,IAAA/B,EAAAxC,KACC5C,EAAS4C,KAAKH,MAAdzC,KACAoH,EAAYxE,KAAKH,MAAjB2E,QAER,OACEtE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBuD,IAAK7D,KAAK+C,QAExCyB,EAAQtD,IAAI,SAACgC,GACX,OAAIA,EAAM9F,OAASA,GACboF,EAAK+B,YAAc,GAAKrB,EAAM5F,QAAQoB,SACxC8D,EAAK+B,YAAc,IAAMrB,EAAM5F,QAAQoB,OAAS,IAE3CwB,EAAAC,EAAAC,cAACqE,EAAD,CAAOpE,IAAK6C,EAAMU,IAAKV,MAAOA,KAEhC,aAzBU1C,aCUdkE,EAfA,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YC8DaC,EAnED,SAAAC,GAAiB,IAAdJ,EAAcI,EAAdJ,QACTK,EAAK9F,OAAA+F,EAAA,EAAA/F,CAAO,IAAIgG,IAAIP,EAAQtD,IAAI,SAAAgC,GAAK,OAAIA,EAAM9F,SACjD4H,GAAgB,EAChBC,GAAe,EAEnB,OACE/E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAd,cAEFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBAGRF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAEbuE,EAAM3D,IAAI,SAAC9D,GAOT,OANI4H,IAAiB5H,EAAKgG,MAAM,KAAK,IACnC4B,EAAe5H,EAAKgG,MAAM,KAAK,GAC/B6B,GAAe,GAEfA,GAAe,EAGf/E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYD,IAAKjD,GAC7B6H,GAEG/E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,eAAAkB,OAAU4D,EAAO9H,EAAKgG,MAAM,KAAK,GAAK,GAAtC,KAAA9B,OAA4ClE,EAAKgG,MAAM,KAAK,MAIlElD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,YAAOhD,EAAKgG,MAAM,KAAK,KAEzBlD,EAAAC,EAAAC,cAAC+E,EAAD,CACE/H,KAAMA,EACNoH,QAASA,WC8CdY,cAnGb,SAAAA,EAAYvF,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAAoF,IACjBxF,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAAqG,GAAAvE,KAAAb,KAAMH,KACDrB,MAAQ,CACX6G,KAAM,GACNC,SAAU,GACVlB,OAAQ,IAEVxE,EAAK2F,iBAAmB3F,EAAK2F,iBAAiBrD,KAAtBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACxBA,EAAK4F,mBAAqB5F,EAAK4F,mBAAmBtD,KAAxBnD,OAAAoD,EAAA,EAAApD,CAAAa,IAC1BA,EAAK6F,qBAAuB7F,EAAK6F,qBAAqBvD,KAA1BnD,OAAAoD,EAAA,EAAApD,CAAAa,IAC5BA,EAAK8F,cAAgB9F,EAAK8F,cAAcxD,KAAnBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACrBA,EAAK+F,aAAe/F,EAAK+F,aAAazD,KAAlBnD,OAAAoD,EAAA,EAAApD,CAAAa,IAXHA,yFAcOC,GAAO,IACvBwF,EAA2BxF,EAA3BwF,KAAMC,EAAqBzF,EAArByF,SAAUlB,EAAWvE,EAAXuE,OACxBpE,KAAKqC,SAAS,CACZgD,OACAC,WACAlB,wDAIiB,IAAAzE,EACWK,KAAKH,MAA3B/C,EADW6C,EACX7C,GAAI8I,EADOjG,EACPiG,cADOC,EAEgB7F,KAAKxB,MAAhC6G,EAFWQ,EAEXR,KAAMC,EAFKO,EAELP,SAAUlB,EAFLyB,EAEKzB,OACxBwB,EAAc9I,EAAIkD,KAAK0F,gBAAiBL,EAAMC,EAAUlB,4CAGzC0B,GACf9F,KAAKqC,SAAS,CAAEgD,KAAMS,EAAMC,OAAOzD,mDAGlBwD,GACjB9F,KAAKqC,SAAS,CAAE+B,OAAQ0B,EAAMC,OAAOzD,qDAGlBwD,GACnB9F,KAAKqC,SAAS,CAAEiD,SAAUQ,EAAMC,OAAOzD,+CAG1B,IAAAvC,EACgBC,KAAKH,MAA1B/C,EADKiD,EACLjD,IACRkJ,EAFajG,EACDiG,cACClJ,2CAGC,IAAAmJ,EACqBjG,KAAKxB,MAAhC6G,EADMY,EACNZ,KAAMC,EADAW,EACAX,SAAUlB,EADV6B,EACU7B,OACxB,MAAa,KAATiB,GAA4B,KAAbC,GAA8B,KAAXlB,mCAM/B,IACCnD,EAAkBjB,KAAKH,MAAvBoB,cADDiF,EAE4BlG,KAAKxB,MAAhC6G,EAFDa,EAECb,KAAMC,EAFPY,EAEOZ,SAAUlB,EAFjB8B,EAEiB9B,OACxB,OACElE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,+CAA+C6F,QAAQ,QACtEjG,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcxD,GAAG,OAAOsE,KAAK,OAAOkB,MAAO+C,EAAMe,SAAUpG,KAAKuF,kBAChFrF,EAAAC,EAAAC,cAAA,UAAQkC,MAAM,IAAd,UAEErB,EAAcC,IAAI,SAAAC,GAAS,OACzBjB,EAAAC,EAAAC,cAAA,UAAQkC,MAAOnB,EAAUC,KAAMf,IAAKc,EAAUrE,IAAKqE,EAAUkF,WAKrEnG,EAAAC,EAAAC,cAAA,SAAOE,UAAU,+BAA+B6F,QAAQ,UACtDjG,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaxD,GAAG,SAASsE,KAAK,SAASzE,KAAK,SAAS2F,MAAO8B,EAAQgC,SAAUpG,KAAKwF,sBAEtGtF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mDAAmD6F,QAAQ,YAC1EjG,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcxD,GAAG,WAAWsE,KAAK,WAAWkB,MAAOgD,EAAUc,SAAUpG,KAAKyF,sBAC5FvF,EAAAC,EAAAC,cAAA,UAAQkC,MAAM,IAAd,UACApC,EAAAC,EAAAC,cAAA,UAAQkC,MAAM,SAAd,SACApC,EAAAC,EAAAC,cAAA,UAAQkC,MAAM,UAAd,UACApC,EAAAC,EAAAC,cAAA,UAAQkC,MAAM,OAAd,SAGJpC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gBAAgB3D,KAAK,SAAS4D,QAASP,KAAK2F,uBApF9CnF,aCUjB,SAAS8F,EAAgBlJ,GAC9B,IAAM+F,EAAM/F,EAAKgG,MAAM,KACvB,SAAA9B,OAAU6B,EAAI,GAAd,KAAA7B,OAAoB6B,EAAI,GAAxB,KAAA7B,OAA8B6B,EAAI,IAG7B,SAASoD,EAAgBhJ,GAC9B,IAAMiJ,EAAajJ,EAAK6F,MAAM,KAC1BqD,EAAQnD,SAASkD,EAAW,GAAI,IAChCE,EAAO,KASX,OARID,EAAQ,IACVA,GAAS,GACTC,EAAO,MACY,KAAVD,EACTC,EAAO,KACY,IAAVD,IACTA,EAAQ,IAEV,GAAAnF,OAAUmF,EAAV,KAAAnF,OAAmBkF,EAAW,GAA9B,QAAAlF,OAAuCoF,GAGlC,SAASC,EAAoBrE,GAClC,IAAIlF,EAAOkF,EAAMsE,UAAUC,WACP,IAAhBzJ,EAAKsB,SACPtB,EAAI,IAAAkE,OAAOlE,IAEb,IAAI0J,GAASxE,EAAMyE,WAAa,GAAGF,WAInC,OAHqB,IAAjBC,EAAMpI,SACRoI,EAAK,IAAAxF,OAAOwF,IAEd,GAAAxF,OAAUgB,EAAM0E,cAAhB,KAAA1F,OAAiCwF,EAAjC,KAAAxF,OAA0ClE,GAGrC,SAAS6J,EAAoB3E,GAClC,IAAImE,EAAQnE,EAAM4E,WAAWL,WACR,IAAjBJ,EAAM/H,SACR+H,EAAK,IAAAnF,OAAOmF,IAEd,IAAIU,EAAO7E,EAAM8E,aAAaP,WAI9B,OAHoB,IAAhBM,EAAKzI,SACPyI,EAAI,IAAA7F,OAAO6F,IAEb,GAAA7F,OAAUmF,EAAV,KAAAnF,OAAmB6F,GAGd,SAASE,EAAcjK,EAAMG,GAClC,IAAM+J,EAAUlK,EAAKgG,MAAM,KACrBmE,EAAUhK,EAAK6F,MAAM,KAC3B,SAAA9B,OAAUgG,EAAQ,IAAlBhG,OAAuBgG,EAAQ,IAA/BhG,OAAoCgG,EAAQ,IAA5ChG,OAAiDiG,EAAQ,IAAzDjG,OAA8DiG,EAAQ,QCrDlEC,cACJ,SAAAA,EAAY3H,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAAwH,IACjB5H,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAAyI,GAAA3G,KAAAb,KAAMH,KACDrB,MAAQ,CACXpB,KAAM,GACNC,UAAW,QACXC,QAAS,CAAC,CACRR,GAAI,cACJuI,KAAM,GACNjB,OAAQ,GACRkB,SAAU,GACVmC,SAAS,IAEXC,OAAQ,EACRzH,UAAU,EACV0H,cAAc,EACdnK,MAAO,GACPD,KAAM,IAERqC,EAAKgI,iBAAmBhI,EAAKgI,iBAAiB1F,KAAtBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACxBA,EAAKiI,iBAAmBjI,EAAKiI,iBAAiB3F,KAAtBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACxBA,EAAKkI,sBAAwBlI,EAAKkI,sBAAsB5F,KAA3BnD,OAAAoD,EAAA,EAAApD,CAAAa,IAC7BA,EAAKmI,kBAAoBnI,EAAKmI,kBAAkB7F,KAAvBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACzBA,EAAKoI,aAAepI,EAAKoI,aAAa9F,KAAlBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACpBA,EAAKqI,aAAerI,EAAKqI,aAAa/F,KAAlBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACpBA,EAAKsI,YAActI,EAAKsI,YAAYhG,KAAjBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACnBA,EAAKuI,UAAYvI,EAAKuI,UAAUjG,KAAfnD,OAAAoD,EAAA,EAAApD,CAAAa,IACjBA,EAAKoG,aAAepG,EAAKoG,aAAa9D,KAAlBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACpBA,EAAKgG,cAAgBhG,EAAKgG,cAAc1D,KAAnBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACrBA,EAAKwI,MAAQxI,EAAKwI,MAAMlG,KAAXnD,OAAAoD,EAAA,EAAApD,CAAAa,IA5BIA,mFAgCjB,IAAMyI,EAAQ,IAAIC,KAClBtI,KAAKqC,SAAS,CACZjF,KAAMuJ,EAAoB0B,GAC1B9K,KAAM0J,EAAoBoB,8CAIbvC,GACf9F,KAAKqC,SAAS,CAAEjF,KAAM0I,EAAMC,OAAOzD,iDAGpBwD,GACf9F,KAAKqC,SAAS,CAAE9E,KAAMuI,EAAMC,OAAOzD,sDAGfwD,GACpB9F,KAAKqC,SAAS,CAAEhF,UAAWyI,EAAMC,OAAOzD,kDAGxBwD,GAChB9F,KAAKqC,SAAS,CAAE7E,MAAOsI,EAAMC,OAAOzD,6CAGzBwD,GAAO,IACVrI,EAAauC,KAAKH,MAAlBpC,SADUoI,EAEgC7F,KAAKxB,MAA/CpB,EAFUyI,EAEVzI,KAAMC,EAFIwI,EAEJxI,UAAWC,EAFPuI,EAEOvI,QAASE,EAFhBqI,EAEgBrI,MAAOD,EAFvBsI,EAEuBtI,KACrCkK,GAAU,EACd3B,EAAMyC,iBACNjL,EAAQkL,QAAQ,SAACzE,GACVA,EAAO0D,UACVA,GAAU,KAGVA,IACFhK,EAASP,EAAS,CAChBE,KAAMkJ,EAAgBlJ,GACtBC,YACAC,QAASA,EAAQ4D,IAAI,SAAC6C,EAAQ0E,GAAT,MACnB,CACEpD,KAAMtB,EAAOsB,KACbjB,OAAQL,EAAOK,OACfsE,MAAOD,EAAQ,EACfnD,SAAUvB,EAAOuB,YAGrBxI,GAAIuK,EAAcjK,EAAMG,GACxBC,QACAD,KAAMgJ,EAAgBhJ,MAGxByC,KAAKoI,SAEPpI,KAAKqC,SAAS,CAAEsF,aAAcF,yCAGnB3B,GACXA,EAAMyC,iBACNvI,KAAKoI,wCAIL,IAAMC,EAAQ,IAAIC,KAClBtI,KAAKqC,SAAS,CACZjF,KAAMuJ,EAAoB0B,GAC1BhL,UAAW,QACXqK,OAAQ,EACRC,cAAc,EACdrK,QAAS,CAAC,CACRR,GAAI,cACJ2K,SAAS,EACTpC,KAAM,GACNC,SAAU,GACVlB,OAAQ,GACR5G,MAAO,KAETD,KAAM0J,EAAoBoB,2CAK5BrI,KAAKqC,SAAS,CAAEpC,UAAU,wCAGhB,IAAAgG,EACkBjG,KAAKxB,MAAzBlB,EADE2I,EACF3I,QACFR,EAFImJ,EACOyB,OACG,EACpBpK,EAAQqL,KAAK,CACX7L,GAAE,aAAAwE,OAAexE,GACjBuI,KAAM,GACNjB,OAAQ,GACRkB,SAAU,GACVmC,SAAS,IAEXzH,KAAKqC,SAAS,CAAEqF,OAAQ5K,IACxBkD,KAAKqC,SAAS,CAAE/E,iDAGLR,GAAI,IACPQ,EAAY0C,KAAKxB,MAAjBlB,QACFmL,EAAQnL,EAAQsL,UAAU,SAAA7E,GAAM,OAAIA,EAAOjH,KAAOA,IACxDQ,EAAQuL,OAAOJ,EAAO,GACtBzI,KAAKqC,SAAS,CAAE/E,kDAGJR,EAAI2K,EAASpC,EAAMC,EAAUlB,GAAQ,IAE3C/C,EADcrB,KAAKxB,MAAjBlB,QACaiF,KAAK,SAAAwB,GAAM,OAAIA,EAAOjH,KAAOA,IACrC,OAATuE,IACFA,EAAKgE,KAAOA,EACZhE,EAAKiE,SAAWA,EAChBjE,EAAK+C,OAASA,EACd/C,EAAKoG,QAAUA,oCAIV,IAAAjF,EAAAxC,KAAAL,EAC8BK,KAAKH,MAAlCoB,EADDtB,EACCsB,cAAe1C,EADhBoB,EACgBpB,UADhB2H,EAUHlG,KAAKxB,MAPPpB,EAHK8I,EAGL9I,KACAC,EAJK6I,EAIL7I,UACAC,EALK4I,EAKL5I,QACA2C,EANKiG,EAMLjG,SACA0H,EAPKzB,EAOLyB,aACAnK,EARK0I,EAQL1I,MACAD,EATK2I,EASL3I,KAEEuL,EAAoB,SAKxB,OAJKnB,IACHmB,EAAoB,IAEtBhI,QAAQC,IAAIxC,GAEV2B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,oBAAoBC,QAASP,KAAKkI,YAAavL,KAAK,UACpEuD,EAAAC,EAAAC,cAAA,QAAME,UAAU,eAAhB,eAEFJ,EAAAC,EAAAC,cAAA,QAAME,UAAS,uBAAAgB,OAAyBrB,EAAW,GAAK,UAAY8I,SAAU/I,KAAKgI,cACjF9H,EAAAC,EAAAC,cAAA,SAAOE,UAAU,6BAA6B6F,QAAQ,QACpDjG,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaxD,GAAG,OAAOsE,KAAK,OAAOzE,KAAK,OAAO2F,MAAOlF,EAAMgJ,SAAUpG,KAAK4H,oBAE9F1H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,6BAA6B6F,QAAQ,QACpDjG,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaxD,GAAG,OAAOsE,KAAK,OAAOzE,KAAK,OAAO2F,MAAO/E,EAAM6I,SAAUpG,KAAK6H,oBAE9F3H,EAAAC,EAAAC,cAAA,SAAOE,UAAU,oDAAoD6F,QAAQ,aAC3EjG,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcxD,GAAG,YAAYsE,KAAK,YAAYkB,MAAOjF,EAAW+I,SAAUpG,KAAK8H,uBAC/F5H,EAAAC,EAAAC,cAAA,UAAQkC,MAAM,SAAd,SACApC,EAAAC,EAAAC,cAAA,UAAQkC,MAAM,SAAd,YAKJhF,EAAQ4D,IAAI,SAAA6C,GAAM,OAChB7D,EAAAC,EAAAC,cAAC4I,EAAD,CACElM,GAAIiH,EAAOjH,GACXuD,IAAK0D,EAAOjH,GACZuI,KAAMtB,EAAOsB,KACbC,SAAUvB,EAAOuB,SACjBlB,OAAQL,EAAOK,OACf4B,aAAcxD,EAAKwD,aACnB/E,cAAeA,EACf2E,cAAepD,EAAKoD,kBAI1B1F,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gCAAgC3D,KAAK,SAAS4D,QAASP,KAAKmI,WAA9E,sBACAjI,EAAAC,EAAAC,cAAA,SAAOE,UAAU,8BAA8B6F,QAAQ,SACrDjG,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,YAAUE,UAAU,gBAAgBxD,GAAG,QAAQsE,KAAK,QAAQkB,MAAO9E,EAAO4I,SAAUpG,KAAK+H,qBAE3F7H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,2BAA2B3D,KAAK,UAAlD,aACAuD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gBAAgB3D,KAAK,SAAS4D,QAASP,KAAKiI,gBAEhE/H,EAAAC,EAAAC,cAAA,OAAKE,UAAS,cAAAgB,OAAgBwH,IAA9B,mEAlNctI,aAyOTmB,cAVS,SAACnD,GAKvB,MAAO,CACLyC,cALqBzC,EAAfY,WAENP,QAOW8C,CAAyB6F,OCxOlCyB,cACJ,SAAAA,EAAYpJ,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAAiJ,IACjBrJ,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAAkK,GAAApI,KAAAb,KAAMH,KACDrB,MAAQ,CACX0K,YAAa,IAHEtJ,mFAOC,IAAA4C,EAAAxC,KACZmJ,EAAQC,WAAW,WACvB5G,EAAKH,SAAS,CAAE6G,YAAa,kBAC7BG,cAAcF,IACb,yCAIHrI,QAAQC,IAAIf,uCAGL,IAAAL,EAC8CK,KAAKH,MAAlDyJ,EADD3J,EACC2J,cAAe1M,EADhB+C,EACgB/C,KAAM4H,EADtB7E,EACsB6E,QAASlF,EAD/BK,EAC+BL,WAC9B4J,EAAgBlJ,KAAKxB,MAArB0K,YAER,OACEhJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,kBAAAgB,OAAoB4H,IAChChJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYiJ,KAAK,OAAOhJ,QAAS+I,IAChDpJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,gBAEG1D,EAAKwH,QAERlE,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAAe3D,KAAK,SAAS4D,QAAS+I,MAG5DpJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,GAAAgB,OACM1E,EAAKU,QAAQoB,OADnB,8BAAA4C,OF/CP,SAAoBlE,EAAM8H,GAC/B,IAAM/B,EAAM/F,EAAKgG,MAAM,KACvB,SAAA9B,OAAU4D,EAAO/B,EAAI,GAAK,GAA1B,KAAA7B,OAAgC6B,EAAI,GAApC,MAAA7B,OAA2C6B,EAAI,IE8CmBqG,CAAW5M,EAAKQ,KAAM8H,GAD5E,QAAA5D,OF1CP,SAAoB/D,GACzB,IAAM4F,EAAM5F,EAAK6F,MAAM,KACnBqG,EAAO,OAIX,OAH4B,IAAxBlM,EAAK8F,QAAQ,QACfoG,EAAO,QAET,GAAAnI,OAAU6B,EAAI,GAAd,KAAA7B,OAAoB6B,EAAI,GAAxB,KAAA7B,OAA8BmI,GEqCwEC,CAAW9M,EAAKW,MAD1G,aAAA+D,OAC2H1E,EAAKS,UADhI,MAGA6C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAf,WACAJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,eAAeqJ,YAAY,IAAIC,YAAY,KAC1D1J,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,yBAGJF,EAAAC,EAAAC,cAAA,aAEIxD,EAAKU,QAAQ4D,IAAI,SAAC6C,GAChB,IAAMC,EAAU,CACdC,gBAAiBF,EAAOG,OAE1B,OACEhE,EAAAC,EAAAC,cAAA,MAAIC,IAAK0D,EAAOK,QACdlE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBAAyB6D,MAAOH,GAAUD,EAAO2E,QACrExI,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,YAAO2D,EAAOsB,OAClBnF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,YAAO2D,EAAOK,SAClBlE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,YAAO2D,EAAOuB,WAClBpF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,YCvEvB,SAAqBiF,EAAMjB,EAAQI,GAGxC,OAFA1D,QAAQC,IAAR,GAAAO,OAAe+D,EAAf,MAAA/D,OAAwB8C,EAAxB,MAAA9C,OAAmCkD,EAAQ9F,SAEpC,GDoE4BmL,CAAY9F,EAAOsB,KAAMtB,EAAOK,OAAQI,UAO/DtE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAf,SACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgB1D,EAAKY,SAGrC8B,GAEGY,EAAAC,EAAAC,cAAC0J,EAAD,CACEvL,UAAW3B,aA9EN4D,aA6GNmB,cArBS,SAACnD,GAKvB,MAAO,CACLc,WALqBd,EAAfa,WAENC,aAkBWqC,CAAyBsH,GErGzBc,EAdD,kBACZ7J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAf,qBACAJ,EAAAC,EAAAC,cAAA,6XAKAF,EAAAC,EAAAC,cAAA,qHCHE4J,cACJ,SAAAA,EAAYnK,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAAgK,IACjBpK,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAAiL,GAAAnJ,KAAAb,KAAMH,KACDrB,MAAQ,CACXpB,KAAM,GACNC,UAAW,QACXC,QAAS,CAAC,CACRR,GAAI,cACJuI,KAAM,GACNjB,OAAQ,GACRkB,SAAU,GACVmC,SAAS,IAEXC,OAAQ,EACRC,cAAc,EACdnK,MAAO,GACPD,KAAM,IAERqC,EAAKgI,iBAAmBhI,EAAKgI,iBAAiB1F,KAAtBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACxBA,EAAKiI,iBAAmBjI,EAAKiI,iBAAiB3F,KAAtBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACxBA,EAAKkI,sBAAwBlI,EAAKkI,sBAAsB5F,KAA3BnD,OAAAoD,EAAA,EAAApD,CAAAa,IAC7BA,EAAKmI,kBAAoBnI,EAAKmI,kBAAkB7F,KAAvBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACzBA,EAAKoI,aAAepI,EAAKoI,aAAa9F,KAAlBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACpBA,EAAKqI,aAAerI,EAAKqI,aAAa/F,KAAlBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACpBA,EAAKsI,YAActI,EAAKsI,YAAYhG,KAAjBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACnBA,EAAKuI,UAAYvI,EAAKuI,UAAUjG,KAAfnD,OAAAoD,EAAA,EAAApD,CAAAa,IACjBA,EAAKoG,aAAepG,EAAKoG,aAAa9D,KAAlBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACpBA,EAAKgG,cAAgBhG,EAAKgG,cAAc1D,KAAnBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACrBA,EAAKwI,MAAQxI,EAAKwI,MAAMlG,KAAXnD,OAAAoD,EAAA,EAAApD,CAAAa,IA3BIA,mFA+BjB,IAAMyI,EAAQ,IAAIC,KAClBtI,KAAKqC,SAAS,CACZjF,KAAMuJ,EAAoB0B,GAC1B9K,KAAM0J,EAAoBoB,8CAIbvC,GACf9F,KAAKqC,SAAS,CAAEjF,KAAM0I,EAAMC,OAAOzD,iDAGpBwD,GACf9F,KAAKqC,SAAS,CAAE9E,KAAMuI,EAAMC,OAAOzD,sDAGfwD,GACpB9F,KAAKqC,SAAS,CAAEhF,UAAWyI,EAAMC,OAAOzD,kDAGxBwD,GAChB9F,KAAKqC,SAAS,CAAE7E,MAAOsI,EAAMC,OAAOzD,6CAGzBwD,GAAO,IACVrI,EAAauC,KAAKH,MAAlBpC,SADUoI,EAEgC7F,KAAKxB,MAA/CpB,EAFUyI,EAEVzI,KAAMC,EAFIwI,EAEJxI,UAAWC,EAFPuI,EAEOvI,QAASE,EAFhBqI,EAEgBrI,MAAOD,EAFvBsI,EAEuBtI,KACrCkK,GAAU,EACd3B,EAAMyC,iBACNjL,EAAQkL,QAAQ,SAACzE,GACVA,EAAO0D,UACVA,GAAU,KAGVA,IACFhK,EAASP,EAAS,CAChBE,KAAMkJ,EAAgBlJ,GACtBC,YACAC,QAASA,EAAQ4D,IAAI,SAAC6C,EAAQ0E,GAAT,MACnB,CACEpD,KAAMtB,EAAOsB,KACbjB,OAAQL,EAAOK,OACfsE,MAAOD,EAAQ,EACfnD,SAAUvB,EAAOuB,YAGrBxI,GAAIuK,EAAcjK,EAAMG,GACxBC,QACAD,KAAMgJ,EAAgBhJ,MAGxByC,KAAKoI,SAEPpI,KAAKqC,SAAS,CAAEsF,aAAcF,yCAGnB3B,GACXA,EAAMyC,iBACNvI,KAAKoI,wCAIL,IAAMC,EAAQ,IAAIC,KAClBtI,KAAKqC,SAAS,CACZjF,KAAMuJ,EAAoB0B,GAC1BhL,UAAW,QACXqK,OAAQ,EACRC,cAAc,EACdrK,QAAS,CAAC,CACRR,GAAI,cACJ2K,SAAS,EACTpC,KAAM,GACNC,SAAU,GACVlB,OAAQ,GACR5G,MAAO,KAETD,KAAM0J,EAAoBoB,4CAM5B4B,EAD8BjK,KAAKH,MAA3BoK,mBACU,iDAGR,IAAAhE,EACkBjG,KAAKxB,MAAzBlB,EADE2I,EACF3I,QACFR,EAFImJ,EACOyB,OACG,EACpBpK,EAAQqL,KAAK,CACX7L,GAAE,aAAAwE,OAAexE,GACjBuI,KAAM,GACNjB,OAAQ,GACRkB,SAAU,GACVmC,SAAS,IAEXzH,KAAKqC,SAAS,CAAEqF,OAAQ5K,IACxBkD,KAAKqC,SAAS,CAAE/E,iDAGLR,GAAI,IACPQ,EAAY0C,KAAKxB,MAAjBlB,QACFmL,EAAQnL,EAAQsL,UAAU,SAAA7E,GAAM,OAAIA,EAAOjH,KAAOA,IACxDQ,EAAQuL,OAAOJ,EAAO,GACtBzI,KAAKqC,SAAS,CAAE/E,kDAGJR,EAAI2K,EAASpC,EAAMC,EAAUlB,GAAQ,IAE3C/C,EADcrB,KAAKxB,MAAjBlB,QACaiF,KAAK,SAAAwB,GAAM,OAAIA,EAAOjH,KAAOA,IACrC,OAATuE,IACFA,EAAKgE,KAAOA,EACZhE,EAAKiE,SAAWA,EAChBjE,EAAK+C,OAASA,EACd/C,EAAKoG,QAAUA,oCAIV,IAAAjF,EAAAxC,KAAAL,EAC6BK,KAAKH,MAAjCI,EADDN,EACCM,SAAUgB,EADXtB,EACWsB,cADXiF,EAEyDlG,KAAKxB,MAA7DpB,EAFD8I,EAEC9I,KAAMC,EAFP6I,EAEO7I,UAAWC,EAFlB4I,EAEkB5I,QAASqK,EAF3BzB,EAE2ByB,aAAcnK,EAFzC0I,EAEyC1I,MAAOD,EAFhD2I,EAEgD3I,KACnDuL,EAAoB,SAIxB,OAHKnB,IACHmB,EAAoB,IAGpB5I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gCAAgCC,QAASP,KAAKkI,YAAavL,KAAK,UAAlF,gBACAuD,EAAAC,EAAAC,cAAA,QAAME,UAAS,uBAAAgB,OAAyBrB,EAAW,GAAK,UAAY8I,SAAU/I,KAAKgI,cACjF9H,EAAAC,EAAAC,cAAA,SAAOE,UAAU,6BAA6B6F,QAAQ,QACpDjG,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaxD,GAAG,OAAOsE,KAAK,OAAOzE,KAAK,OAAO2F,MAAOlF,EAAMgJ,SAAUpG,KAAK4H,oBAE9F1H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,6BAA6B6F,QAAQ,QACpDjG,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaxD,GAAG,OAAOsE,KAAK,OAAOzE,KAAK,OAAO2F,MAAO/E,EAAM6I,SAAUpG,KAAK6H,oBAE9F3H,EAAAC,EAAAC,cAAA,SAAOE,UAAU,oDAAoD6F,QAAQ,aAC3EjG,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcxD,GAAG,YAAYsE,KAAK,YAAYkB,MAAOjF,EAAW+I,SAAUpG,KAAK8H,uBAC/F5H,EAAAC,EAAAC,cAAA,UAAQkC,MAAM,SAAd,SACApC,EAAAC,EAAAC,cAAA,UAAQkC,MAAM,SAAd,YAKJhF,EAAQ4D,IAAI,SAAA6C,GAAM,OAChB7D,EAAAC,EAAAC,cAAC4I,EAAD,CACElM,GAAIiH,EAAOjH,GACXuD,IAAK0D,EAAOjH,GACZuI,KAAMtB,EAAOsB,KACbC,SAAUvB,EAAOuB,SACjBlB,OAAQL,EAAOK,OACf4B,aAAcxD,EAAKwD,aACnB/E,cAAeA,EACf2E,cAAepD,EAAKoD,kBAI1B1F,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gCAAgC3D,KAAK,SAAS4D,QAASP,KAAKmI,WAA9E,sBACAjI,EAAAC,EAAAC,cAAA,SAAOE,UAAU,8BAA8B6F,QAAQ,SACrDjG,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,YAAUE,UAAU,gBAAgBxD,GAAG,QAAQsE,KAAK,QAAQkB,MAAO9E,EAAO4I,SAAUpG,KAAK+H,qBAE3F7H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,2BAA2B3D,KAAK,UAAlD,aACAuD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gBAAgB3D,KAAK,SAAS4D,QAASP,KAAKiI,gBAEhE/H,EAAAC,EAAAC,cAAA,OAAKE,UAAS,cAAAgB,OAAgBwH,IAA9B,mEAvMatI,aA+NRmB,cAVS,SAACnD,GAKvB,MAAO,CACLyC,cALqBzC,EAAfY,WAENP,QAOW8C,CAAyBqI,GCjOlCE,eACJ,SAAAA,EAAYrK,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAAkK,IACjBtK,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAAmL,GAAArJ,KAAAb,KAAMH,KACDrB,MAAQ,CACX2L,SAAU,GACVC,cAAe,GACfC,UAAW,GACX1C,cAAc,GAEhB/H,EAAK0K,qBAAuB1K,EAAK0K,qBAAqBpI,KAA1BnD,OAAAoD,EAAA,EAAApD,CAAAa,IAC5BA,EAAK2K,0BAA4B3K,EAAK2K,0BAA0BrI,KAA/BnD,OAAAoD,EAAA,EAAApD,CAAAa,IACjCA,EAAK4K,sBAAwB5K,EAAK4K,sBAAsBtI,KAA3BnD,OAAAoD,EAAA,EAAApD,CAAAa,IAC7BA,EAAKoI,aAAepI,EAAKoI,aAAa9F,KAAlBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACpBA,EAAKsI,YAActI,EAAKsI,YAAYhG,KAAjBnD,OAAAoD,EAAA,EAAApD,CAAAa,IAZFA,oFAeEkG,GACnB9F,KAAKqC,SAAS,CAAE8H,SAAUrE,EAAMC,OAAOzD,0DAGfwD,GACxB9F,KAAKqC,SAAS,CAAE+H,cAAetE,EAAMC,OAAOzD,sDAGxBwD,GACpB9F,KAAKqC,SAAS,CAAEgI,UAAWvE,EAAMC,OAAOzD,6CAG7BwD,GAAO,IACVrI,EAAauC,KAAKH,MAAlBpC,SADUoI,EAMd7F,KAAKxB,MAHP2L,EAHgBtE,EAGhBsE,SACAC,EAJgBvE,EAIhBuE,cACAC,EALgBxE,EAKhBwE,UAEFvJ,QAAQC,IAAR,GAAAO,OAAe6I,EAAf,MACA,IAAI1C,GAAU,EACd3B,EAAMyC,iBACW,KAAb4B,IACF1C,GAAU,GAERA,IACFhK,EnB8EsB,SAAAgN,GAAA,IAAGN,EAAHM,EAAGN,SAAUC,EAAbK,EAAaL,cAAeC,EAA5BI,EAA4BJ,UAAWvN,EAAvC2N,EAAuC3N,GAAvC,OAAgD,SAAAW,GAE1E,OADAA,EA7FoC,CACpCd,KAlC+B,sBA+HxBe,MAAM,gBAAiB,CAC5BC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CACnBC,OAAQ,mBACRC,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CACnBiM,WACAC,gBACAC,YACAvN,SAGDqB,KAAK,SAAAC,GAAQ,OAAIA,EAAS1B,SAC1ByB,KAAK,SAAAzB,GAAI,OAAIe,EAAShB,EAAWC,OmB9FvBgO,CAAa,CACpBP,WACAC,gBACAC,YACAvN,GAAIqN,EAASQ,cAAcC,QAAQ,KAAM,QAG3C5K,KAAKoI,SAEPpI,KAAKqC,SAAS,CAAEsF,aAAcF,yCAGnB3B,GACXA,EAAMyC,iBACNvI,KAAKoI,wCAILpI,KAAKqC,SAAS,CACZ8H,SAAU,4CAMZF,EAD8BjK,KAAKH,MAA3BoK,mBACU,6CAGX,IACChK,EAAaD,KAAKH,MAAlBI,SADDgG,EAOHjG,KAAKxB,MAJP2L,EAHKlE,EAGLkE,SACAC,EAJKnE,EAILmE,cACAC,EALKpE,EAKLoE,UAGEvB,EAAoB,SAIxB,OAZO7C,EAML0B,eAIAmB,EAAoB,IAGpB5I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gCAAgCC,QAASP,KAAKkI,YAAavL,KAAK,UAAlF,oBACAuD,EAAAC,EAAAC,cAAA,QAAME,UAAS,uBAAAgB,OAAyBrB,EAAW,GAAK,UAAY8I,SAAU/I,KAAKgI,cACjF9H,EAAAC,EAAAC,cAAA,SAAOE,UAAU,kCAAkC6F,QAAQ,YACzDjG,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaxD,GAAG,WAAWsE,KAAK,WAAWzE,KAAK,OAAO2F,MAAO6H,EAAU/D,SAAUpG,KAAKsK,wBAE1GpK,EAAAC,EAAAC,cAAA,SAAOE,UAAU,wCAAwC6F,QAAQ,iBAC/DjG,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaxD,GAAG,gBAAgBsE,KAAK,gBAAgBzE,KAAK,OAAO2F,MAAO8H,EAAehE,SAAUpG,KAAKuK,6BAEzHrK,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mCAAmC6F,QAAQ,aAC1DjG,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaxD,GAAG,YAAYsE,KAAK,YAAYzE,KAAK,OAAO2F,MAAO+H,EAAWjE,SAAUpG,KAAKwK,yBAE7GtK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,2BAA2B3D,KAAK,UAAlD,YACAuD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gBAAgB3D,KAAK,SAAS4D,QAASP,KAAKiI,gBAEhE/H,EAAAC,EAAAC,cAAA,OAAKE,UAAS,cAAAgB,OAAgBwH,IAA9B,2DAtGYtI,aAmHPmB,iBAAUuI,IC3GVW,GAXC,kBACd3K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAf,WACAJ,EAAAC,EAAAC,cAAA,oCAEEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,cAAcwK,KAAK,wBAAhC,mBCHAC,eACJ,SAAAA,EAAYlL,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAA+K,IACjBnL,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAAgM,GAAAlK,KAAAb,KAAMH,KACDrB,MAAQ,CACXwM,KAAM,GACNC,SAAU,IAEZrL,EAAKsL,iBAAmBtL,EAAKsL,iBAAiBhJ,KAAtBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACxBA,EAAKuL,qBAAuBvL,EAAKuL,qBAAqBjJ,KAA1BnD,OAAAoD,EAAA,EAAApD,CAAAa,IAC5BA,EAAKoI,aAAepI,EAAKoI,aAAa9F,KAAlBnD,OAAAoD,EAAA,EAAApD,CAAAa,IACpBA,EAAKwL,OAASxL,EAAKwL,OAAOlJ,KAAZnD,OAAAoD,EAAA,EAAApD,CAAAa,IACdA,EAAKsI,YAActI,EAAKsI,YAAYhG,KAAjBnD,OAAAoD,EAAA,EAAApD,CAAAa,IAVFA,gFAaFkG,GACf9F,KAAKqC,SAAS,CAAE2I,KAAMlF,EAAMC,OAAOzD,qDAGhBwD,GACnB9F,KAAKqC,SAAS,CAAE4I,SAAUnF,EAAMC,OAAOzD,6CAG5BwD,GAAO,IACVrI,EAAauC,KAAKH,MAAlBpC,SADUoI,EAES7F,KAAKxB,MAAxBwM,EAFUnF,EAEVmF,KAAMC,EAFIpF,EAEJoF,SACdnF,EAAMyC,iBACN9K,ErBwDiB,SAAAmH,GAAA,IAAGoG,EAAHpG,EAAGoG,KAAMC,EAATrG,EAASqG,SAAT,OAAwB,SAAAxN,GAE3C,OADAA,EAzEmC,CACnCd,KAd6B,oBAuFtBe,MAAM,SAAU,CACrBC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CACnBC,OAAQ,mBACRC,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CACnB8M,OACAC,eAGD9M,KAAK,SAAAC,GAAQ,OAAIA,EAAS1B,SAC1ByB,KAAK,SAAAzB,GAAI,OAAIe,EAnBU,SAAAf,GAAI,MAAK,CACnCC,KAvEoB,SAwEpBC,KAAMF,GAiBmB2O,CAAa3O,OqBtE3B4O,CAAM,CAAEN,OAAMC,qDAKvBhB,EAD8BjK,KAAKH,MAA3BoK,mBACU,0CAGX,IAAAtK,EACiCK,KAAKH,MAArCpC,EADDkC,EACClC,UACRwM,EAFOtK,EACWsK,mBACA,IAElBxM,ErBqGyB,CAC3Bd,KApIqB,6CqBiCZ,IAAAoD,EACwCC,KAAKH,MAA5CI,EADDF,EACCE,SAAUX,EADXS,EACWT,WAAYC,EADvBQ,EACuBR,aADvB0G,EAEoBjG,KAAKxB,MAAxBwM,EAFD/E,EAEC+E,KAAMC,EAFPhF,EAEOgF,SACVnC,EAAoB,SAIxB,OAHIvJ,IACFuJ,EAAoB,IAGnBxJ,EAkBGY,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gCAAgC3D,KAAK,SAAS4D,QAASP,KAAKoL,QAA9E,UAhBAlL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gCAAgCC,QAASP,KAAKkI,YAAavL,KAAK,UAAlF,SACAuD,EAAAC,EAAAC,cAAA,QAAME,UAAS,uBAAAgB,OAAyBrB,EAAW,GAAK,UAAY8I,SAAU/I,KAAKgI,cACjF9H,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAa6F,QAAQ,QACpCjG,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaxD,GAAG,OAAOsE,KAAK,OAAOzE,KAAK,OAAO2F,MAAO0I,EAAM5E,SAAUpG,KAAKkL,oBAE9FhL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAa6F,QAAQ,YACpCjG,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,aAAaxD,GAAG,WAAWsE,KAAK,WAAWzE,KAAK,WAAW2F,MAAO2I,EAAU7E,SAAUpG,KAAKmL,wBAE9GjL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,gBAAgB3D,KAAK,SAAS2F,MAAM,UACrDpC,EAAAC,EAAAC,cAAA,OAAKE,UAAS,cAAAgB,OAAgBwH,IAA9B,2DA/DMtI,aA6FLmB,eAZS,SAACnD,GAAU,IACzBa,EAAeb,EAAfa,WAKR,MAAO,CACLC,WAFED,EAFFC,WAKAC,aAHEF,EADFE,eAQWoC,CAAyBoJ,ICzFlCQ,eACJ,SAAAA,EAAY1L,GAAO,IAAAD,EAAA,OAAAb,OAAA2B,EAAA,EAAA3B,CAAAiB,KAAAuL,IACjB3L,EAAAb,OAAA4B,EAAA,EAAA5B,CAAAiB,KAAAjB,OAAA6B,EAAA,EAAA7B,CAAAwM,GAAA1K,KAAAb,KAAMH,KACDrB,MAAQ,CACXgN,eAAgB,IAElB5L,EAAKmD,OAASC,IAAMC,YACpBrD,EAAKqK,kBAAoBrK,EAAKqK,kBAAkB/H,KAAvBnD,OAAAoD,EAAA,EAAApD,CAAAa,IANRA,oFASE,IAAA4C,EAAAxC,KAEnB,GAAyB,WADIA,KAAKH,MAA1B4L,iBAEN,IAAMtC,EAAQC,WAAW,WACvB5G,EAAKO,OAAOU,QAAQC,aAAa,QAAS,sBAC1CgI,aAAavC,IACZ,UAEHnJ,KAAK+C,OAAOU,QAAQC,aAAa,QAAS,6DAI5BtC,GAChBpB,KAAKqC,SAAS,CAAEmJ,eAAgBpK,qCAGzB,IACCoK,EAAmBxL,KAAKxB,MAAxBgN,eADD7L,EAE+CK,KAAKH,MAAnDP,EAFDK,EAECL,WAAYmM,EAFb9L,EAEa8L,iBAAkBE,EAF/BhM,EAE+BgM,YACtC,OACEzL,EAAAC,EAAAC,cAAA,OAAKE,UAAS,kBAAAgB,OAAoBmK,GAAoB5H,IAAK7D,KAAK+C,QAC9D7C,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcC,QAASoL,EAAahP,KAAK,UACzDuD,EAAAC,EAAAC,cAAA,QAAME,UAAU,aACdJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAChBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAChBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,eAGpBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAACwL,EAAD,MACA1L,EAAAC,EAAAC,cAACyL,GAAD,MACCvM,GAEGY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0L,EAAD,CACE7B,kBAAmBjK,KAAKiK,kBACxBhK,SAA6B,cAAnBuL,IAEZtL,EAAAC,EAAAC,cAAC2L,GAAD,CACE9B,kBAAmBjK,KAAKiK,kBACxBhK,SAA6B,aAAnBuL,KAKlBtL,EAAAC,EAAAC,cAAC4L,GAAD,CACE/B,kBAAmBjK,KAAKiK,kBACxBhK,SAA6B,UAAnBuL,cA1DLhL,aAmFJmB,eAVS,SAACnD,GAKvB,MAAO,CACLc,WALqBd,EAAfa,WAENC,aAOWqC,CAAyB4J,wBCjFlCU,sMACgB,IACVxO,EAAauC,KAAKH,MAAlBpC,SACRA,EvBqC8B,SAAAA,GAEhC,OADAA,EArCmC,CACnCd,KAd6B,oBAmDtBe,MAAM,eACVS,KAAK,SAAAC,GAAQ,OAAIA,EAAS1B,SAC1ByB,KAAK,SAAAzB,GAAI,OAAIe,EApCY,SAAAf,GAAI,MAAK,CACrCC,KAjB6B,kBAkB7BC,KAAMF,GAkCmBwP,CAAexP,QuBxCtCe,EvB2CiC,SAAAA,GAEnC,OADAA,EAnCsC,CACtCd,KArBiC,kBAwD1Be,MAAM,aACVS,KAAK,SAAAC,GAAQ,OAAIA,EAAS1B,SAC1ByB,KAAK,SAAAzB,GAAI,OAAIe,EAlCe,SAAAf,GAAI,MAAK,CACxCC,KAxBiC,gBAyBjCC,KAAMF,GAgCmByP,CAAkBzP,yCuB5ClC,IAeeI,EAff6C,EAC2DK,KAAKH,MAA/DuM,EADDzM,EACCyM,SAAU3O,EADXkC,EACWlC,SAAU+G,EADrB7E,EACqB6E,QAAS6H,EAD9B1M,EAC8B0M,aAAcC,EAD5C3M,EAC4C2M,WAkBnD,OACEpM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKmM,IAAKC,KAAMlM,UAAU,eAAemM,IAAI,sBAC7CvM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAf,iBAEFJ,EAAAC,EAAAC,cAACsM,GAAD,CACEjB,iBAAkBa,EAAa,OAAS,SACxCX,YArBR,WAIIlO,EAHG6O,EAGMrP,IAFAD,SAsBTkD,EAAAC,EAAAC,cAACuM,EAAD,MACAzM,EAAAC,EAAAC,cAACwM,EAAD,CACEpI,QAASA,IAEV6H,GAEGnM,EAAAC,EAAAC,cAACyM,EAAD,CACEvD,cAnCV,WACE7L,EAASV,MAmCDH,MAxBYE,EAwBOsP,EAvBpB5H,EAAQjC,KAAK,SAAAW,GAAK,OAAIA,EAAMU,MAAQ9G,KAwBnC0H,QAASA,YA/CLhE,cAoFHmB,eApBS,SAACnD,GAAU,IACzBD,EAAiCC,EAAjCD,UAAWU,EAAsBT,EAAtBS,YAAaE,EAASX,EAATW,KAEvBqF,EACLjG,EADFM,MASF,MAAO,CACLuN,SALEnN,EAFFnC,GAQA0H,UACA6H,aAPEpN,EADFC,OASAoN,WALEnN,EADFD,SAUWyC,CAAyBsK,ICtFlCa,GAAa,CAACC,KAKpB,IAAMC,GAAQC,YACZC,EACAC,IAAeC,WAAf,EAAmBN,KAGrBhM,QAAQC,IAAIiM,GAAMK,YAElBC,IAASC,OACPrN,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAUR,MAAOA,IACf9M,EAAAC,EAAAC,cAACqN,GAAD,OACWC,SAASC,eAAe","file":"static/js/main.195ad51d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const SUBMIT_TRAIN_LINE = 'SUBMIT_TRAIN_LINE';\nexport const TRAIN_LINE_ADDED = 'TRAIN_LINE_ADDED';\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\nexport const REQUEST_TRAIN_LINES = 'REQUEST_LINES';\nexport const RECEIVE_TRAIN_LINES = 'RECEIVE_LINES';\nexport const SUBMIT_ENTRY = 'SUBMIT_ENTRY';\nexport const ENTRY_ADDED = 'ENTRY_ADDED';\nexport const SHOW_DETAIL = 'SHOW_DETAIL';\nexport const HIDE_DETAIL = 'HIDE_DETAIL';\nexport const SHOW_MENU = 'SHOW_MENU';\nexport const HIDE_MENU = 'HIDE_MENU';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n});\n\nexport const requestTrainLines = () => ({\n  type: REQUEST_TRAIN_LINES,\n});\n\nexport const receiveTrainLines = json => ({\n  type: RECEIVE_TRAIN_LINES,\n  data: json,\n});\n\nexport const submitTrainLine = () => ({\n  type: SUBMIT_TRAIN_LINE,\n});\n\nexport const trainLineAdded = json => ({\n  type: TRAIN_LINE_ADDED,\n  data: json,\n});\n\nexport const submitEntry = () => ({\n  type: SUBMIT_ENTRY,\n});\n\nexport const entryAdded = json => ({\n  type: ENTRY_ADDED,\n  data: json,\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n\nexport const fetchTrainLines = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestTrainLines());\n  return fetch('/getLines')\n    .then(response => response.json())\n    .then(json => dispatch(receiveTrainLines(json)));\n};\n\nexport const showDetail = id => ({\n  type: SHOW_DETAIL,\n  data: id,\n});\n\nexport const hideDetail = () => ({\n  type: HIDE_DETAIL,\n});\n\nexport const showMenu = () => ({\n  type: SHOW_MENU,\n});\n\nexport const hideMenu = () => ({\n  type: HIDE_MENU,\n});\n\nexport const loginAttempt = json => ({\n  type: LOG_IN,\n  data: json,\n});\n\nexport const login = ({ user, password }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/login', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      user,\n      password,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(loginAttempt(json)));\n};\n\nexport const addEntry = ({ date, direction, engines, id, time, notes }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitEntry());\n  return fetch('/addEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      date,\n      time,\n      direction,\n      engines,\n      id,\n      notes,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const addTrainLine = ({ lineName, lineShortName, lineColor, id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitTrainLine());\n  return fetch('/addTrainLine', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      lineName,\n      lineShortName,\n      lineColor,\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const logout = () => ({\n  type: LOG_OUT,\n});\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  SUBMIT_TRAIN_LINE,\n  TRAIN_LINE_ADDED,\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n  REQUEST_TRAIN_LINES,\n  RECEIVE_TRAIN_LINES,\n  SUBMIT_ENTRY,\n  ENTRY_ADDED,\n  SHOW_DETAIL,\n  HIDE_DETAIL,\n  SHOW_MENU,\n  HIDE_MENU,\n  LOG_IN,\n  LOG_OUT,\n} from '../actions';\n\n\nconst entryData = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n    case SUBMIT_ENTRY:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n    case ENTRY_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst entryDetail = (state = {\n  isOpen: false,\n  id: '',\n}, action) => {\n  switch (action.type) {\n    case SHOW_DETAIL:\n      return {\n        ...state,\n        isOpen: true,\n        id: action.data,\n      };\n    case HIDE_DETAIL:\n      return {\n        ...state,\n        isOpen: false,\n        id: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst menu = (state = {\n  isOpen: false,\n}, action) => {\n  switch (action.type) {\n    case SHOW_MENU:\n      return {\n        ...state,\n        isOpen: true,\n      };\n    case HIDE_MENU:\n      return {\n        ...state,\n        isOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userStatus = (state = {\n  isLoggedIn: false,\n  isLoginError: false,\n  response: [{ success: 'error' }],\n}, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      if (action.data[0].success === 'success') {\n        return {\n          ...state,\n          isLoggedIn: true,\n          isLoginError: false,\n          response: action.data,\n        };\n      }\n      return {\n        ...state,\n        isLoggedIn: false,\n        isLoginError: true,\n        response: action.data,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst trainLines = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_TRAIN_LINES:\n    case SUBMIT_TRAIN_LINE:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_TRAIN_LINES:\n    case TRAIN_LINE_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryData,\n  entryDetail,\n  menu,\n  trainLines,\n  userStatus,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DataFilter extends Component {\n  onFilterClick = () => {\n    const { label, onFilterClick } = this.props;\n    onFilterClick(label);\n  }\n\n  render() {\n    const { isActive, label } = this.props;\n    return (\n      <li key={label}>\n        <button className={isActive ? 'active' : ''} onClick={this.onFilterClick} type=\"button\">\n          <span>{label}</span>\n        </button>\n      </li>\n    );\n  }\n}\n\nDataFilter.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  onFilterClick: PropTypes.func.isRequired,\n};\n\nexport default DataFilter;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n    console.log('values');\n  }\n\n  render() {\n    const { dataSet, trainLineList } = this.props;\n    return (\n      <div className=\"data-table\">\n        <div className=\"y-axis\">\n          {\n            trainLineList.map(trainLine => (\n              <div className=\"y-axis-row\" key={trainLine.id}>\n                <div className=\"row-label\">{trainLine.name}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={`${item}-${Math.round(Math.random() * 1000)}`}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.defaultProps = {\n  dataSet: ['0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'],\n};\n\nEngineValues.propTypes = {\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass ResightingValues extends Component {\n  constructor(props) {\n    super(props);\n    console.log('values');\n  }\n\n  render() {\n    const { dataSet, trainLineList } = this.props;\n    return (\n      <div className=\"data-table\">\n        <div className=\"y-axis\">\n          {\n            trainLineList.map(trainLine => (\n              <div className=\"y-axis-row\" key={trainLine.id}>\n                <div className=\"row-label\">{trainLine.name}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={`${item}-${Math.round(Math.random() * 1000)}`}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nResightingValues.defaultProps = {\n  dataSet: ['3/19', '4/19', '5/19', '6/19', '7/19', '8/19', '9/19', '10/19', '11/19'],\n};\n\nResightingValues.propTypes = {\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(ResightingValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass TimeValues extends Component {\n  constructor(props) {\n    super(props);\n    console.log('values');\n  }\n\n  render() {\n    const { dataSet, trainLineList } = this.props;\n    return (\n      <div className=\"data-table\">\n        <div className=\"y-axis\">\n          {\n            trainLineList.map(trainLine => (\n              <div className=\"y-axis-row\" key={trainLine.id}>\n                <div className=\"row-label\">{trainLine.name}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={`${item}-${Math.round(Math.random() * 1000)}`}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTimeValues.defaultProps = {\n  dataSet: ['12 AM', '2 AM', '4AM', '6 AM', '8 AM', ' 10 AM', '12 PM', '2 PM', '4 PM', '6 PM', '8 PM', '10 PM'],\n};\n\nTimeValues.propTypes = {\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(TimeValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n    console.log('values');\n  }\n\n  render() {\n    const { dataSet, trainLineList } = this.props;\n    return (\n      <div className=\"data-table\">\n        <div className=\"y-axis\">\n          {\n            trainLineList.map(trainLine => (\n              <div className=\"y-axis-row\" key={trainLine.id}>\n                <div className=\"row-label\">{trainLine.name}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={`${item}-${Math.round(Math.random() * 1000)}`}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.defaultProps = {\n  dataSet: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n};\n\nEngineValues.propTypes = {\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DataFilter from './DataFilter';\nimport EngineValues from './datasets/EngineValues';\nimport ResightingValues from './datasets/ResightingValues';\nimport TimeValues from './datasets/TimeValues';\nimport WeekdayValues from './datasets/WeekdayValues';\n\nclass AtAGlance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSet: {\n        label: '',\n        values: [],\n      },\n    };\n    this.handleDataSetChange = this.handleDataSetChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { dataSets } = this.props;\n    this.setState({\n      activeSet: dataSets[0],\n    });\n  }\n\n  handleDataSetChange(value) {\n    const { dataSets } = this.props;\n    const dataSet = dataSets.find(item => item.label === value);\n    this.setState({ activeSet: dataSet });\n  }\n\n  render() {\n    const { dataSets } = this.props;\n    const { activeSet } = this.state;\n    return (\n      <div className=\"at-a-glance\">\n        <div className=\"page-heading-divider\">\n          <h2 className=\"heading-lg\">At A Glance</h2>\n        </div>\n        <div className=\"aggregate-data-visualization-module\">\n          <div className=\"module-inner\">\n            <div className=\"data-filters\">\n              <ul className=\"data-filters-inner\">\n                {\n                  dataSets.map(item => (\n                    <DataFilter\n                      isActive={item.label === activeSet.label}\n                      key={item.label}\n                      label={item.label}\n                      onFilterClick={this.handleDataSetChange}\n                    />\n                  ))\n                }\n              </ul>\n            </div>\n            <div className=\"data-visualization\">\n              {activeSet.label === 'Engines'\n                && (\n                  <EngineValues />\n                )\n              }\n              {activeSet.label === 'Resightings'\n                && (\n                  <ResightingValues />\n                )\n              }\n              {activeSet.label === 'Time'\n                && (\n                  <TimeValues />\n                )\n              }\n              {activeSet.label === 'Weekday'\n                && (\n                  <WeekdayValues />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAtAGlance.defaultProps = {\n  dataSets: [\n    {\n      label: 'Engines',\n    },\n    {\n      label: 'Time',\n    },\n    {\n      label: 'Weekday',\n    },\n    {\n      label: 'Resightings',\n    },\n  ],\n};\n\nAtAGlance.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default AtAGlance;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1 && entry.time.indexOf('12:') === -1) {\n      arr[0] = parseInt(arr[0], 10) + 12;\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') !== -1) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  render() {\n    const { entry, dispatch } = this.props;\n\n    function onEntryClick() {\n      dispatch(showDetail(entry._id)); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <button className=\"engine-manifest\" ref={this.divRef} type=\"button\" onClick={onEntryClick} onKeyDown={onEntryClick}>\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n        <span className=\"engine-details-button\">...</span>\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => { /* eslint-disable-line arrow-parens, arrow-body-style */\n  return bindActionCreators(\n    {\n      showDetail,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapDispatchToProps)(Entry);\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date } = this.props;\n    const { entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","const Months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default Months;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\nimport months from '../../utils/Months';\n\n\nconst Chart = ({ entries }) => {\n  const dates = [...new Set(entries.map(entry => entry.date))];\n  let currentMonth = -1;\n  let isMonthLabel = false;\n\n  return (\n    <div>\n      <div className=\"page-heading-divider\">\n        <h2 className=\"heading-lg\">Sightings</h2>\n      </div>\n      <div className=\"train-chart\">\n        <div className=\"x-axis-header clearfix\">\n          <ul>\n            <li><span>12 AM</span></li>\n            <li><span>2 AM</span></li>\n            <li><span>4 AM</span></li>\n            <li><span>6 AM</span></li>\n            <li><span>8 AM</span></li>\n            <li><span>10 AM</span></li>\n            <li><span>12 PM</span></li>\n            <li><span>2 PM</span></li>\n            <li><span>4 PM</span></li>\n            <li><span>6 PM</span></li>\n            <li><span>8 PM</span></li>\n            <li><span>10 PM</span></li>\n          </ul>\n        </div>\n        <div className=\"time-table\">\n          <div className=\"month-bar\" />\n          {\n            dates.map((date) => {\n              if (currentMonth !== date.split('/')[0]) {\n                currentMonth = date.split('/')[0]; /* eslint-disable-line prefer-destructuring */\n                isMonthLabel = true;\n              } else {\n                isMonthLabel = false;\n              }\n              return (\n                <div className=\"date-line\" key={date}>\n                  {isMonthLabel\n                    && (\n                      <div className=\"month-display\">\n                        <span>{`${months[date.split('/')[0] - 1]} ${date.split('/')[2]}`}</span>\n                      </div>\n                    )\n                  }\n                  <div className=\"date-display\">\n                    <span>{date.split('/')[1]}</span>\n                  </div>\n                  <EntriesForDate\n                    date={date}\n                    entries={entries}\n                  />\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      line: '',\n      location: '',\n      number: '',\n    };\n    this.handleLineChange = this.handleLineChange.bind(this);\n    this.handleNumberChange = this.handleNumberChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.isEngineValid = this.isEngineValid.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    const { line, location, number } = props;\n    this.setState({\n      line,\n      location,\n      number,\n    });\n  }\n\n  componentDidUpdate() {\n    const { id, updateEngines } = this.props;\n    const { line, location, number } = this.state;\n    updateEngines(id, this.isEngineValid(), line, location, number);\n  }\n\n  handleLineChange(event) {\n    this.setState({ line: event.target.value });\n  }\n\n  handleNumberChange(event) {\n    this.setState({ number: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleRemove() {\n    const { id, removeEngine } = this.props;\n    removeEngine(id);\n  }\n\n  isEngineValid() {\n    const { line, location, number } = this.state;\n    if (line === '' || location === '' || number === '') {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const { line, location, number } = this.state;\n    return (\n      <div className=\"flex-row add-engine-row\">\n        <label className=\"form-label form-select-label form-label-line\" htmlFor=\"line\">\n          <span>Line</span>\n          <select className=\"form-select\" id=\"line\" name=\"line\" value={line} onChange={this.handleLineChange}>\n            <option value=\"\">Select</option>\n            {\n              trainLineList.map(trainLine => (\n                <option value={trainLine.name} key={trainLine.id}>{trainLine.short}</option>\n              ))\n            }\n          </select>\n        </label>\n        <label className=\"form-label form-label-number\" htmlFor=\"number\">\n          <span>Number</span>\n          <input className=\"form-input\" id=\"number\" name=\"number\" type=\"number\" value={number} onChange={this.handleNumberChange} />\n        </label>\n        <label className=\"form-label form-select-label form-label-location\" htmlFor=\"location\">\n          <span>Location</span>\n          <select className=\"form-select\" id=\"location\" name=\"location\" value={location} onChange={this.handleLocationChange}>\n            <option value=\"\">Select</option>\n            <option value=\"front\">Front</option>\n            <option value=\"middle\">Middle</option>\n            <option value=\"end\">End</option>\n          </select>\n        </label>\n        <button className=\"remove-button\" type=\"button\" onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n\nAddEngine.propTypes = {\n  id: PropTypes.string.isRequired,\n  line: PropTypes.string,\n  location: PropTypes.string,\n  number: PropTypes.string,\n  removeEngine: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  updateEngines: PropTypes.func.isRequired,\n};\n\nexport default AddEngine;\n/* eslint-enable no-console */\n","export function formatDate(date, months) {\n  const arr = date.split('/');\n  return `${months[arr[0] - 1]} ${arr[1]}, ${arr[2]}`;\n}\n\nexport function formatTime(time) {\n  const arr = time.split(':');\n  let ampm = 'a.m.';\n  if (time.indexOf('PM') !== -1) {\n    ampm = 'p.m.';\n  }\n  return `${arr[0]}:${arr[1]} ${ampm}`;\n}\n\nexport function formatDateForDB(date) {\n  const arr = date.split('-');\n  return `${arr[1]}/${arr[2]}/${arr[0]}`;\n}\n\nexport function formatTimeForDB(time) {\n  const timeValues = time.split(':');\n  let hours = parseInt(timeValues[0], 10);\n  let amPm = 'AM';\n  if (hours > 12) {\n    hours -= 12;\n    amPm = 'PM';\n  } else if (hours === 12) {\n    amPm = 'PM';\n  } else if (hours === 0) {\n    hours = 12;\n  }\n  return `${hours}:${timeValues[1]}:00 ${amPm}`;\n}\n\nexport function formatDateForSelect(value) {\n  let date = value.getDate().toString();\n  if (date.length === 1) {\n    date = `0${date}`;\n  }\n  let month = (value.getMonth() + 1).toString();\n  if (month.length === 1) {\n    month = `0${month}`;\n  }\n  return `${value.getFullYear()}-${month}-${date}`;\n}\n\nexport function formatTimeForSelect(value) {\n  let hours = value.getHours().toString();\n  if (hours.length === 1) {\n    hours = `0${hours}`;\n  }\n  let mins = value.getMinutes().toString();\n  if (mins.length === 1) {\n    mins = `0${mins}`;\n  }\n  return `${hours}:${mins}`;\n}\n\nexport function createEntryId(date, time) {\n  const dateArr = date.split('-');\n  const timeArr = time.split(':');\n  return `${dateArr[0]}${dateArr[1]}${dateArr[2]}${timeArr[0]}${timeArr[1]}`;\n}\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from '../menu/AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass EditEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isActive: false,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n        notes: '',\n      }],\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    this.setState({ isActive: true });\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { trainLineList, entryData } = this.props;\n    const {\n      date,\n      direction,\n      engines,\n      isActive,\n      isEntryValid,\n      notes,\n      time,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    console.log(entryData);\n    return (\n      <div>\n        <button className=\"edit-entry-button\" onClick={this.displayForm} type=\"button\">\n          <span className=\"text-button\">Edit Entry</span>\n        </button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nEditEntry.propTypes = {\n  dispatch: PropTypes.func,\n  entryData: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EditEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport EditEntry from './EditEntry';\nimport months from '../../utils/Months';\nimport { formatDate, formatTime } from '../../utils/Formatting';\nimport { findMatches } from '../../utils/Lookup';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  editEntry() {\n    console.log(this);\n  }\n\n  render() {\n    const { onDetailClose, data, entries, isLoggedIn } = this.props;\n    const { loadedClass } = this.state;\n\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"entry-number\">\n                Entry No.&nbsp;\n                {data.number}\n              </span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">\n                {`${data.engines.length} engine train observed on ${formatDate(data.date, months)} at ${formatTime(data.time)} heading ${data.direction}.`}\n              </div>\n              <div className=\"detail-subhead\">Engines</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Ord.</th>\n                    <th>Line</th>\n                    <th>No.</th>\n                    <th>Pos.</th>\n                    <th>Sightings</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data.engines.map((engine) => {\n                      const bgStyle = {\n                        backgroundColor: engine.color,\n                      };\n                      return (\n                        <tr key={engine.number}>\n                          <td><span className=\"engine-color-indicator\" style={bgStyle}>{engine.order}</span></td>\n                          <td><span>{engine.line}</span></td>\n                          <td><span>{engine.number}</span></td>\n                          <td><span>{engine.location}</span></td>\n                          <td><span>{findMatches(engine.line, engine.number, entries)}</span></td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n              <div className=\"detail-subhead\">Notes</div>\n              <p className=\"detail-notes\">{data.notes}</p>\n            </div>\n          </div>\n          {isLoggedIn\n            && (\n              <EditEntry\n                entryData={data}\n              />\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  return {\n    isLoggedIn,\n  };\n};\n\nDetail.propTypes = {\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired,\n  }),\n  entries: PropTypes.arrayOf(PropTypes.object),\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps)(Detail);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\n\nexport function findMatches(line, number, entries) {\n  console.log(`${line}, ${number}, ${entries.length}`);\n  // Return filtered array of matches, if any\n  return '';\n}\n\nexport function test() {\n  return '';\n}\n\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst About = () => (\n  <div>\n    <div className=\"menu-nav-item\">About the Project</div>\n    <p>\n      Trainspotted is my home office, looking out a backyard window at the Milwaukee District North tracks across the alley.\n       During off-peak hours, freight trains are cleared to run along the Metra corridor.\n       Much like my work situation, the trains don&rsquo;t adhere to a schedule. This is an exercise in applying structure to the chaos surrounding this new phase of my life.\n    </p>\n    <p>\n      This project also brought me up to speed with React/Redux and was developed using the full MERN stack.\n    </p>\n  </div>\n);\n\nexport default About;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from './AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n        notes: '',\n      }],\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-entry');\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { isActive, trainLineList } = this.props;\n    const { date, direction, engines, isEntryValid, notes, time } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add an Entry</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddEntry.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(AddEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTrainLine } from '../../actions';\n\nclass AddLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n      isEntryValid: true,\n    };\n    this.handleLineNameChange = this.handleLineNameChange.bind(this);\n    this.handleLineShortNameChange = this.handleLineShortNameChange.bind(this);\n    this.handleLineColorChange = this.handleLineColorChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleLineNameChange(event) {\n    this.setState({ lineName: event.target.value });\n  }\n\n  handleLineShortNameChange(event) {\n    this.setState({ lineShortName: event.target.value });\n  }\n\n  handleLineColorChange(event) {\n    this.setState({ lineColor: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n    } = this.state;\n    console.log(`${lineName},`);\n    let isValid = true;\n    event.preventDefault();\n    if (lineName === '') {\n      isValid = false;\n    }\n    if (isValid) {\n      dispatch(addTrainLine({\n        lineName,\n        lineShortName,\n        lineColor,\n        id: lineName.toLowerCase().replace(/\\s/, '-'),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    this.setState({\n      lineName: '',\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-line');\n  }\n\n  render() {\n    const { isActive } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n      isEntryValid,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add a Train Line</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-line-name\" htmlFor=\"lineName\">\n            <span>Name</span>\n            <input className=\"form-input\" id=\"lineName\" name=\"lineName\" type=\"text\" value={lineName} onChange={this.handleLineNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-short-name\" htmlFor=\"lineShortName\">\n            <span>Short Name</span>\n            <input className=\"form-input\" id=\"lineShortName\" name=\"lineShortName\" type=\"text\" value={lineShortName} onChange={this.handleLineShortNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-color\" htmlFor=\"lineColor\">\n            <span>Color</span>\n            <input className=\"form-input\" id=\"lineColor\" name=\"lineColor\" type=\"text\" value={lineColor} onChange={this.handleLineColorChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Line</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddLine.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nexport default connect()(AddLine);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst Contact = () => (\n  <div>\n    <div className=\"menu-nav-item\">Contact</div>\n    <p>\n      jef.a.mayer(at)gmail.com\n      <br />\n      <a className=\"inline-link\" href=\"https://jefmayer.com\">jefmayer.com</a>\n    </p>\n  </div>\n);\n\nexport default Contact;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../actions';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleUserChange(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { user, password } = this.state;\n    event.preventDefault();\n    dispatch(login({ user, password })); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('login');\n  }\n\n  logout() {\n    const { dispatch, setActiveMenuItem } = this.props;\n    setActiveMenuItem('');\n    // Clear inputs\n    dispatch(logout());\n  }\n\n  render() {\n    const { isActive, isLoggedIn, isLoginError } = this.props;\n    const { user, password } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (isLoginError) {\n      errorDisplayClass = '';\n    }\n    return (\n      !isLoggedIn\n        ? (\n          <div>\n            <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Login</button>\n            <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n              <label className=\"form-label\" htmlFor=\"user\">\n                <span>Name</span>\n                <input className=\"form-input\" id=\"user\" name=\"user\" type=\"text\" value={user} onChange={this.handleUserChange} />\n              </label>\n              <label className=\"form-label\" htmlFor=\"password\">\n                <span>Password</span>\n                <input className=\"form-input\" id=\"password\" name=\"password\" type=\"password\" value={password} onChange={this.handlePasswordChange} />\n              </label>\n              <input className=\"submit-button\" type=\"submit\" value=\"Login\" />\n              <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n            </form>\n          </div>\n        ) : (\n          <button className=\"menu-nav-item menu-nav-button\" type=\"button\" onClick={this.logout}>Logout</button>\n        )\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isLoginError: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n    isLoginError,\n  } = userStatus;\n  return {\n    isLoggedIn,\n    isLoginError,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport About from './About';\nimport AddEntry from './AddEntry';\nimport AddLine from './AddLine';\nimport Contact from './Contact';\nimport Login from './Login';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMenuItem: '',\n    };\n    this.divRef = React.createRef();\n    this.setActiveMenuItem = this.setActiveMenuItem.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { menuDisplayClass } = this.props;\n    if (menuDisplayClass === 'closed') {\n      const timer = setTimeout(() => {\n        this.divRef.current.setAttribute('style', 'position:absolute;');\n        clearTimeout(timer);\n      }, 150);\n    } else {\n      this.divRef.current.setAttribute('style', 'position:fixed;');\n    }\n  }\n\n  setActiveMenuItem(name) {\n    this.setState({ activeMenuItem: name });\n  }\n\n  render() {\n    const { activeMenuItem } = this.state;\n    const { isLoggedIn, menuDisplayClass, onMenuClick } = this.props;\n    return (\n      <div className={`menu-container ${menuDisplayClass}`} ref={this.divRef}>\n        <button className=\"menu-button\" onClick={onMenuClick} type=\"button\">\n          <span className=\"menu-icon\">\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n          </span>\n        </button>\n        <div className=\"menu-nav\">\n          <div className=\"menu-nav-inner\">\n            <About />\n            <Contact />\n            {isLoggedIn\n              && (\n                <div>\n                  <AddEntry\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-entry'}\n                  />\n                  <AddLine\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-line'}\n                  />\n                </div>\n              )\n            }\n            <Login\n              setActiveMenuItem={this.setActiveMenuItem}\n              isActive={activeMenuItem === 'login'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMenu.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  menuDisplayClass: PropTypes.string.isRequired,\n  onMenuClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  return {\n    isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(Menu);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries, fetchTrainLines, hideDetail, hideMenu, showMenu } from '../actions';\nimport AtAGlance from '../components/ataglance/AtAGlance';\nimport Chart from '../components/chart/Chart';\nimport Detail from '../components/detail/Detail';\nimport Menu from '../components/menu/Menu';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n    dispatch(fetchTrainLines());\n  }\n\n  render() {\n    const { detailId, dispatch, entries, isDetailOpen, isMenuOpen } = this.props;\n\n    function onDetailClose() {\n      dispatch(hideDetail());\n    }\n\n    function onMenuClick() {\n      if (!isMenuOpen) {\n        dispatch(showMenu());\n      } else {\n        dispatch(hideMenu());\n      }\n    }\n\n    function getEntryById(id) {\n      return entries.find(entry => entry._id === id); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <div className=\"logo-wrapper\">\n            <img src={logo} className=\"logo-graphic\" alt=\"Trainspotted Logo\" />\n            <div className=\"logo-type\">Trainspotted</div>\n          </div>\n          <Menu\n            menuDisplayClass={isMenuOpen ? 'open' : 'closed'}\n            onMenuClick={onMenuClick}\n          />\n        </header>\n        <AtAGlance />\n        <Chart\n          entries={entries}\n        />\n        {isDetailOpen\n          && (\n            <Detail\n              onDetailClose={onDetailClose}\n              data={getEntryById(detailId)}\n              entries={entries}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  detailId: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  isDetailOpen: PropTypes.bool,\n  isMenuOpen: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, entryDetail, menu } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    id: detailId,\n    isOpen: isDetailOpen,\n  } = entryDetail;\n  const {\n    isOpen: isMenuOpen,\n  } = menu;\n  return {\n    detailId,\n    entries,\n    isDetailOpen,\n    isMenuOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}