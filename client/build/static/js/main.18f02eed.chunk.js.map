{"version":3,"sources":["img/trainspotted-logo.svg","js/actions/index.js","js/reducers/index.js","js/components/ataglance/DataFilter.jsx","js/components/ataglance/datasets/EngineValues.jsx","js/utils/Formatting.js","js/selectors/index.js","js/components/ataglance/datasets/ResightingValues.jsx","js/utils/DateUtils.js","js/components/ataglance/datasets/TimeValues.jsx","js/components/ataglance/datasets/WeekdayValues.jsx","js/components/ataglance/AtAGlance.jsx","js/components/chart/Entry.jsx","js/components/chart/EntriesForDate.jsx","js/utils/Months.js","js/components/chart/DateLine.jsx","js/components/chart/Chart.jsx","js/components/menu/AddEngine.jsx","js/components/detail/EditEntry.jsx","js/components/detail/Detail.jsx","js/components/menu/About.jsx","js/components/menu/AddEntry.jsx","js/components/menu/AddLine.jsx","js/components/menu/Contact.jsx","js/components/menu/Login.jsx","js/components/menu/Menu.jsx","js/containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","entryAdded","json","type","data","showDetail","id","hideDetail","showMenu","hideMenu","addEntry","_ref2","date","direction","engines","time","notes","dispatch","fetch","method","headers","Headers","Accept","Content-Type","body","JSON","stringify","then","response","rootReducer","combineReducers","entryData","state","arguments","length","undefined","isFetching","items","action","Object","objectSpread","entryDetail","isOpen","menu","trainLines","userStatus","isLoggedIn","isLoginError","success","DataFilter","onFilterClick","_this$props","_this","props","label","_this$props2","this","isActive","react_default","a","createElement","key","className","onClick","Component","EngineValues","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tableRef","React","createRef","_this2","setTimeout","current","classList","remove","line","entries","ct","forEach","item","filter","engine","_this3","dataSet","trainLineList","ref","map","trainLine","bgStyle","backgroundColor","color","transform","concat","getEngineCountByLine","name","style","Math","round","random","defaultProps","connect","formatDateForDB","arr","split","formatTimeForDB","timeValues","hours","parseInt","amPm","formatDateForSelect","value","getDate","toString","month","getMonth","getFullYear","formatTimeForSelect","getHours","mins","getMinutes","createEntryId","dateArr","timeArr","getRandomNumberKey","getResightings","createSelector","allEntryEngines","entry","push","find","short","number","entryId","_id","duplicates","Set","size","add","reduce","acc","match","dates","sort","b","Date","ResightingValues","initialSightingDate","getInitialSightingDate","yAxis","scrollIndicatorRef","handleScroll","bind","assertThisInitialized","querySelector","addEventListener","window","removeEventListener","slice","resightings","interval","startDate","now","dayInterval","i","substr","setDate","getDatesByInterval","prevLeft","isPrevLeft","onEntryClick","left","getDatePositionInRange","lineStyle","width","onKeyDown","indexOf","bindActionCreators","TimeValues","console","log","AtAGlance","activeSet","values","handleDataSetChange","dataSets","setState","ataglance_DataFilter","datasets_EngineValues","datasets_ResightingValues","datasets_TimeValues","WeekdayValues","Entry","divRef","pct","toFixed","setAttribute","EntriesForDate","entryHeight","chart_Entry","Months","DateLine","activeMonth","isMonthLabel","months","year","data-month","chart_EntriesForDate","Chart","currentMonth","chartRef","scrollTop","pageYOffset","document","documentElement","querySelectorAll","parentNode","getBoundingClientRect","top","getAttribute","toConsumableArray","chart_DateLine","replace","AddEngine","location","handleLineChange","handleNumberChange","handleLocationChange","isEngineValid","handleRemove","updateEngines","_this$state","event","target","removeEngine","_this$state2","_this$state3","htmlFor","onChange","EditEntry","isValid","idIter","isEntryValid","handleDateChange","handleTimeChange","handleDirectionChange","handleNotesChange","handleSubmit","handleCancel","displayForm","addEngine","reset","today","preventDefault","index","order","findIndex","splice","errorDisplayClass","onSubmit","menu_AddEngine","Detail","loadedClass","timer","clearInterval","trainline","sighting","onDetailClose","role","formatDate","ampm","formatTime","cellPadding","cellSpacing","findMatches","detail_EditEntry","About","AddEntry","setActiveMenuItem","AddLine","lineName","lineShortName","lineColor","handleLineNameChange","handleLineShortNameChange","handleLineColorChange","_ref3","addTrainLine","toLowerCase","Contact","href","Login","user","password","handleUserChange","handlePasswordChange","logout","_ref","loginAttempt","login","Menu","activeMenuItem","menuDisplayClass","clearTimeout","onMenuClick","menu_About","menu_Contact","menu_AddEntry","menu_AddLine","menu_Login","App","receiveEntries","receiveTrainLines","detailId","isDetailOpen","isMenuOpen","src","logo","alt","menu_Menu","ataglance_AtAGlance","chart_Chart","detail_Detail","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","render","es","containers_App","getElementById"],"mappings":"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","file":"static/js/main.18f02eed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trainspotted-logo.f965f559.svg\";","/* eslint-disable no-console */\nexport const SUBMIT_TRAIN_LINE = 'SUBMIT_TRAIN_LINE';\nexport const TRAIN_LINE_ADDED = 'TRAIN_LINE_ADDED';\nexport const REQUEST_ENTRIES = 'REQUEST_ENTRIES';\nexport const RECEIVE_ENTRIES = 'RECEIVE_ENTRIES';\nexport const REQUEST_TRAIN_LINES = 'REQUEST_LINES';\nexport const RECEIVE_TRAIN_LINES = 'RECEIVE_LINES';\nexport const SUBMIT_ENTRY = 'SUBMIT_ENTRY';\nexport const ENTRY_ADDED = 'ENTRY_ADDED';\nexport const SHOW_DETAIL = 'SHOW_DETAIL';\nexport const HIDE_DETAIL = 'HIDE_DETAIL';\nexport const SHOW_MENU = 'SHOW_MENU';\nexport const HIDE_MENU = 'HIDE_MENU';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n\nexport const requestEntries = () => ({\n  type: REQUEST_ENTRIES,\n});\n\nexport const receiveEntries = json => ({\n  type: RECEIVE_ENTRIES,\n  data: json,\n});\n\nexport const requestTrainLines = () => ({\n  type: REQUEST_TRAIN_LINES,\n});\n\nexport const receiveTrainLines = json => ({\n  type: RECEIVE_TRAIN_LINES,\n  data: json,\n});\n\nexport const submitTrainLine = () => ({\n  type: SUBMIT_TRAIN_LINE,\n});\n\nexport const trainLineAdded = json => ({\n  type: TRAIN_LINE_ADDED,\n  data: json,\n});\n\nexport const submitEntry = () => ({\n  type: SUBMIT_ENTRY,\n});\n\nexport const entryAdded = json => ({\n  type: ENTRY_ADDED,\n  data: json,\n});\n\nexport const fetchEntries = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/getEntries')\n    .then(response => response.json())\n    .then(json => dispatch(receiveEntries(json)));\n};\n\nexport const fetchTrainLines = () => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestTrainLines());\n  return fetch('/getLines')\n    .then(response => response.json())\n    .then(json => dispatch(receiveTrainLines(json)));\n};\n\nexport const showDetail = id => ({\n  type: SHOW_DETAIL,\n  data: id,\n});\n\nexport const hideDetail = () => ({\n  type: HIDE_DETAIL,\n});\n\nexport const showMenu = () => ({\n  type: SHOW_MENU,\n});\n\nexport const hideMenu = () => ({\n  type: HIDE_MENU,\n});\n\nexport const loginAttempt = json => ({\n  type: LOG_IN,\n  data: json,\n});\n\nexport const login = ({ user, password }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(requestEntries());\n  return fetch('/login', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      user,\n      password,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(loginAttempt(json)));\n};\n\nexport const addEntry = ({ date, direction, engines, id, time, notes }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitEntry());\n  return fetch('/addEntry', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      date,\n      time,\n      direction,\n      engines,\n      id,\n      notes,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const addTrainLine = ({ lineName, lineShortName, lineColor, id }) => dispatch => { /* eslint-disable-line arrow-parens */\n  dispatch(submitTrainLine());\n  return fetch('/addTrainLine', {\n    method: 'POST',\n    headers: new Headers({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      lineName,\n      lineShortName,\n      lineColor,\n      id,\n    }),\n  })\n    .then(response => response.json())\n    .then(json => dispatch(entryAdded(json)));\n};\n\nexport const logout = () => ({\n  type: LOG_OUT,\n});\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport { combineReducers } from 'redux';\nimport {\n  SUBMIT_TRAIN_LINE,\n  TRAIN_LINE_ADDED,\n  REQUEST_ENTRIES,\n  RECEIVE_ENTRIES,\n  REQUEST_TRAIN_LINES,\n  RECEIVE_TRAIN_LINES,\n  SUBMIT_ENTRY,\n  ENTRY_ADDED,\n  SHOW_DETAIL,\n  HIDE_DETAIL,\n  SHOW_MENU,\n  HIDE_MENU,\n  LOG_IN,\n  LOG_OUT,\n} from '../actions';\n\n\nconst entryData = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_ENTRIES:\n    case SUBMIT_ENTRY:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_ENTRIES:\n    case ENTRY_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst entryDetail = (state = {\n  isOpen: false,\n  id: '',\n}, action) => {\n  switch (action.type) {\n    case SHOW_DETAIL:\n      return {\n        ...state,\n        isOpen: true,\n        id: action.data,\n      };\n    case HIDE_DETAIL:\n      return {\n        ...state,\n        isOpen: false,\n        id: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst menu = (state = {\n  isOpen: false,\n}, action) => {\n  switch (action.type) {\n    case SHOW_MENU:\n      return {\n        ...state,\n        isOpen: true,\n      };\n    case HIDE_MENU:\n      return {\n        ...state,\n        isOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userStatus = (state = {\n  isLoggedIn: false,\n  isLoginError: false,\n  response: [{ success: 'error' }],\n}, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      if (action.data[0].success === 'success') {\n        return {\n          ...state,\n          isLoggedIn: true,\n          isLoginError: false,\n          response: action.data,\n        };\n      }\n      return {\n        ...state,\n        isLoggedIn: false,\n        isLoginError: true,\n        response: action.data,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst trainLines = (state = {\n  isFetching: false,\n  items: [],\n}, action) => {\n  switch (action.type) {\n    case REQUEST_TRAIN_LINES:\n    case SUBMIT_TRAIN_LINE:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_TRAIN_LINES:\n    case TRAIN_LINE_ADDED:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  entryData,\n  entryDetail,\n  menu,\n  trainLines,\n  userStatus,\n});\n\nexport default rootReducer;\n/* eslint-enable no-console */\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DataFilter extends Component {\n  onFilterClick = () => {\n    const { label, onFilterClick } = this.props;\n    onFilterClick(label);\n  }\n\n  render() {\n    const { isActive, label } = this.props;\n    return (\n      <li key={label}>\n        <button className={isActive ? 'active' : ''} onClick={this.onFilterClick} type=\"button\">\n          <span>{label}</span>\n        </button>\n      </li>\n    );\n  }\n}\n\nDataFilter.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  onFilterClick: PropTypes.func.isRequired,\n};\n\nexport default DataFilter;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRef = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.tableRef.current.classList.remove('initial-state');\n    }, 100);\n  }\n\n  getEngineCountByLine(line) {\n    const { entries } = this.props;\n    let ct = 0;\n    entries.forEach((item) => {\n      ct += item.engines.filter(engine => engine.line === line).length;\n    });\n    return ct;\n  }\n\n  render() {\n    const { dataSet, trainLineList } = this.props;\n    return (\n      <div className=\"data-table engine-values-table initial-state\" ref={this.tableRef}>\n        <div className=\"y-axis\">\n          {\n            trainLineList.map((trainLine) => {\n              const bgStyle = {\n                backgroundColor: trainLine.color,\n                transform: `scaleX(${this.getEngineCountByLine(trainLine.name) / 500})`,\n              };\n              return (\n                <div className=\"y-axis-row\" key={trainLine.id}>\n                  <div className=\"row-label\">{trainLine.name}</div>\n                  <div className=\"row-axis\" />\n                  <div className=\"value-display\" style={bgStyle} />\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={`${item}-${Math.round(Math.random() * 1000)}`}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.defaultProps = {\n  // Should be dynamic based on max number of line w/ most entries...\n  dataSet: ['0', '50', '100', '150', '200', '250', '300', '350', '400', '450', '500'],\n};\n\nEngineValues.propTypes = {\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n  entries: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, trainLines } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    entries,\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console */\n","export function formatDate(date, months) {\n  const arr = date.split('/');\n  return `${months[arr[0] - 1]} ${arr[1]}, ${arr[2]}`;\n}\n\nexport function formatTime(time) {\n  const arr = time.split(':');\n  let ampm = 'a.m.';\n  if (time.indexOf('PM') !== -1) {\n    ampm = 'p.m.';\n  }\n  return `${arr[0]}:${arr[1]} ${ampm}`;\n}\n\nexport function formatDateForDB(date) {\n  const arr = date.split('-');\n  return `${arr[1]}/${arr[2]}/${arr[0]}`;\n}\n\nexport function formatTimeForDB(time) {\n  const timeValues = time.split(':');\n  let hours = parseInt(timeValues[0], 10);\n  let amPm = 'AM';\n  if (hours > 12) {\n    hours -= 12;\n    amPm = 'PM';\n  } else if (hours === 12) {\n    amPm = 'PM';\n  } else if (hours === 0) {\n    hours = 12;\n  }\n  return `${hours}:${timeValues[1]}:00 ${amPm}`;\n}\n\nexport function formatDateForSelect(value) {\n  let date = value.getDate().toString();\n  if (date.length === 1) {\n    date = `0${date}`;\n  }\n  let month = (value.getMonth() + 1).toString();\n  if (month.length === 1) {\n    month = `0${month}`;\n  }\n  return `${value.getFullYear()}-${month}-${date}`;\n}\n\nexport function formatTimeForSelect(value) {\n  let hours = value.getHours().toString();\n  if (hours.length === 1) {\n    hours = `0${hours}`;\n  }\n  let mins = value.getMinutes().toString();\n  if (mins.length === 1) {\n    mins = `0${mins}`;\n  }\n  return `${hours}:${mins}`;\n}\n\nexport function createEntryId(date, time) {\n  const dateArr = date.split('-');\n  const timeArr = time.split(':');\n  return `${dateArr[0]}${dateArr[1]}${dateArr[2]}${timeArr[0]}${timeArr[1]}`;\n}\n\nexport function getRandomNumberKey() {\n  return `key-${Math.round(Math.random() * 1000 * Math.random() * 1000 / Math.random() * 1000 + Math.random() * 1000)}`;\n}\n","/* eslint-disable no-console, arrow-body-style */\nimport { createSelector } from 'reselect';\n\nconst getEntryData = state => state.entryData.items;\nconst getTrainlines = state => state.trainLines.items;\n\nexport const getResightings = createSelector(\n  [getEntryData, getTrainlines],\n  (entryData, trainLines) => {\n    // Build list of all engines with entry keys, dates, colors\n    const allEntryEngines = [];\n    entryData.forEach(entry => entry.engines.forEach(engine => allEntryEngines.push({\n      engine: `${trainLines.find(line => engine.line === line.name).short}, ${engine.number}`,\n      entryId: entry._id, /* eslint-disable-line no-underscore-dangle */\n      date: entry.date,\n      color: trainLines.find(line => engine.line === line.name).color,\n    })));\n    // Find all engines seen more than once\n    const duplicates = new Set();\n    const resightings = allEntryEngines\n      .filter(entry => duplicates.size === duplicates.add(entry.engine).size)\n      // But there can be more than 2 matches... so now need to remove duplicates\n      .reduce((acc, current) => {\n        const match = acc.find(entry => entry.engine === current.engine);\n        // If match is false, then return accumulator w/ match addee\n        if (!match) {\n          return acc.concat([current]);\n        }\n        // If exists, then just return accumulator as is\n        return acc;\n      }, [])\n      .map((match) => {\n        // Find all sighting dates\n        const dates = allEntryEngines\n          .filter(entry => match.engine === entry.engine)\n          .map(entry => ({ date: entry.date, entryId: entry.entryId }))\n          .sort((a, b) => new Date(a.date) - new Date(b.date));\n        return {\n          engine: match.engine,\n          dates,\n          entryId: match.entryId,\n          color: match.color,\n        };\n      })\n      .sort((a, b) => new Date(a.dates[0].date) - new Date(b.dates[0].date));\n    return resightings;\n  },\n);\n\nexport default getResightings;\n/* eslint-enable no-console, arrow-body-style */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getDatesByInterval, getDatePositionInRange } from '../../../utils/DateUtils';\nimport { getRandomNumberKey } from '../../../utils/Formatting';\nimport { showDetail } from '../../../actions';\nimport { getResightings } from '../../../selectors';\n\nclass ResightingValues extends Component {\n  constructor(props) {\n    super(props);\n    this.initialSightingDate = this.getInitialSightingDate();\n    this.tableRef = React.createRef();\n    this.yAxis = null;\n    this.scrollIndicatorRef = React.createRef();\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.tableRef.current.classList.remove('initial-state');\n    }, 100);\n    this.yAxis = this.tableRef.current.querySelector('.y-axis');\n    this.yAxis.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  getInitialSightingDate() {\n    const { entries } = this.props;\n    const dates = entries.slice().sort((a, b) => new Date(a.date) - new Date(b.date));\n    return new Date(dates[0].date);\n  }\n\n  handleScroll() {\n    this.scrollIndicatorRef.current.classList.add('hidden');\n    this.yAxis.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const { dispatch, resightings } = this.props;\n    const dataSet = getDatesByInterval(12, new Date(this.initialSightingDate), new Date());\n    let prevLeft = '';\n    let isPrevLeft = false;\n\n    return (\n      <div className=\"data-table resightings-values-table initial-state\" ref={this.tableRef}>\n        <div className=\"y-axis\">\n          <div className=\"y-axis-header\">\n            <p className=\"body-copy\">Resightings are the engines I&rsquo;ve observed on multiple occasions. It&rsquo;s entirely possible, more so likely, that these and others have passed back and forth at off hours. Some other observations:</p>\n          </div>\n          {\n            resightings.map((entry) => {\n              prevLeft = '';\n              isPrevLeft = false;\n\n              return (\n                <div className=\"y-axis-row\" key={getRandomNumberKey()}>\n                  <div className=\"row-label\">{entry.engine}</div>\n                  <div className=\"row-axis\" />\n                  {\n                    entry.dates.map((date) => {\n                      function onEntryClick() {\n                        dispatch(showDetail(date.entryId));\n                      }\n                      const left = `${getDatePositionInRange(new Date(date.date), new Date(this.initialSightingDate), new Date()) * 100}%`;\n                      const bgStyle = {\n                        backgroundColor: entry.color,\n                        left,\n                      };\n                      const lineStyle = {\n                        backgroundColor: entry.color,\n                        left: prevLeft,\n                        width: `calc(${left} - ${prevLeft})`,\n                      };\n                      if (prevLeft !== '') {\n                        isPrevLeft = true;\n                      }\n                      prevLeft = left;\n                      return (\n                        <div key={getRandomNumberKey()}>\n                          <button\n                            className=\"sighting-marker\"\n                            onClick={onEntryClick}\n                            onKeyDown={onEntryClick}\n                            style={bgStyle}\n                            type=\"button\"\n                          >\n                            <span className=\"hidden\">{entry.engine.substr(entry.engine.indexOf(',') + 2)}</span>\n                          </button>\n                          {isPrevLeft\n                            && (\n                              <div\n                                className=\"sighting-connector\"\n                                style={lineStyle}\n                              />\n                            )\n                          }\n                        </div>\n                      );\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={getRandomNumberKey()}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"scroll-indicator-icon\" ref={this.scrollIndicatorRef}>\n          <div />\n        </div>\n      </div>\n    );\n  }\n}\n\nResightingValues.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  resightings: PropTypes.arrayOf(PropTypes.object),\n};\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  ...bindActionCreators({ showDetail }, dispatch),\n});\n\nconst mapStateToProps = (state) => {\n  const { entryData } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const resightings = getResightings(state);\n  return {\n    entries,\n    resightings,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResightingValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nexport function getDatesByInterval(interval, startDate, now) {\n  // Get number of days between dates\n  const dayInterval = Math.round((now - startDate) / (1000 * 60 * 60 * 24) / interval);\n  // Build array of m/yy based off interval\n  const arr = [];\n  let i = 0;\n  let date = startDate;\n  do {\n    arr.push(`${date.getMonth() + 1}/${date.getFullYear().toString().substr(2)}`);\n    date = new Date(date.setDate(new Date().getDate() + dayInterval));\n    i += 1;\n  }\n  while (i < interval);\n  return arr;\n}\n\nexport function getDatePositionInRange(date, startDate, now) {\n  return ((date - startDate) / (now - startDate));\n}\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass TimeValues extends Component {\n  constructor(props) {\n    super(props);\n    console.log('TimeValues');\n  }\n\n  render() {\n    const { dataSet, trainLineList } = this.props;\n    return (\n      <div className=\"data-table time-values-table\">\n        <div className=\"y-axis\">\n          {\n            trainLineList.map(trainLine => (\n              <div className=\"y-axis-row\" key={trainLine.id}>\n                <div className=\"row-label\">{trainLine.name}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={`${item}-${Math.round(Math.random() * 1000)}`}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTimeValues.defaultProps = {\n  dataSet: ['12 AM', '2 AM', '4AM', '6 AM', '8 AM', ' 10 AM', '12 PM', '2 PM', '4 PM', '6 PM', '8 PM', '10 PM'],\n};\n\nTimeValues.propTypes = {\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(TimeValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass EngineValues extends Component {\n  constructor(props) {\n    super(props);\n    console.log('values');\n  }\n\n  render() {\n    const { dataSet, trainLineList } = this.props;\n    return (\n      <div className=\"data-table\">\n        <div className=\"y-axis\">\n          {\n            trainLineList.map(trainLine => (\n              <div className=\"y-axis-row\" key={trainLine.id}>\n                <div className=\"row-label\">{trainLine.name}</div>\n                <div className=\"row-axis\" />\n              </div>\n            ))\n          }\n        </div>\n        <div className=\"x-axis\">\n          <div className=\"data-set\">\n            <ul className=\"data-set-values\">\n              {\n                dataSet.map(item => (\n                  <li key={`${item}-${Math.round(Math.random() * 1000)}`}>{item}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEngineValues.defaultProps = {\n  dataSet: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n};\n\nEngineValues.propTypes = {\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  dataSet: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EngineValues);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DataFilter from './DataFilter';\nimport EngineValues from './datasets/EngineValues';\nimport ResightingValues from './datasets/ResightingValues';\nimport TimeValues from './datasets/TimeValues';\nimport WeekdayValues from './datasets/WeekdayValues';\n\nclass AtAGlance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSet: {\n        label: '',\n        values: [],\n      },\n    };\n    this.handleDataSetChange = this.handleDataSetChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { dataSets } = this.props;\n    this.setState({\n      activeSet: dataSets[0],\n    });\n  }\n\n  handleDataSetChange(value) {\n    const { dataSets } = this.props;\n    const dataSet = dataSets.find(item => item.label === value);\n    this.setState({ activeSet: dataSet });\n  }\n\n  render() {\n    const { dataSets } = this.props;\n    const { activeSet } = this.state;\n    return (\n      <div className=\"at-a-glance\">\n        <div className=\"page-heading-divider\">\n          <h2 className=\"heading-lg\">At A Glance</h2>\n        </div>\n        <div className=\"aggregate-data-visualization-module\">\n          <div className=\"module-inner\">\n            <div className=\"data-filters\">\n              <ul className=\"data-filters-inner\">\n                {\n                  dataSets.map(item => (\n                    <DataFilter\n                      isActive={item.label === activeSet.label}\n                      key={item.label}\n                      label={item.label}\n                      onFilterClick={this.handleDataSetChange}\n                    />\n                  ))\n                }\n              </ul>\n            </div>\n            <div className=\"data-visualization\">\n              {activeSet.label === 'Engines'\n                && (\n                  <EngineValues />\n                )\n              }\n              {activeSet.label === 'Resightings'\n                && (\n                  <ResightingValues />\n                )\n              }\n              {activeSet.label === 'Time'\n                && (\n                  <TimeValues />\n                )\n              }\n              {activeSet.label === 'Weekday'\n                && (\n                  <WeekdayValues />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAtAGlance.defaultProps = {\n  dataSets: [\n    {\n      label: 'Overview',\n    },\n    {\n      label: 'Engines',\n    },\n    {\n      label: 'Time',\n    },\n    {\n      label: 'Weekday',\n    },\n    {\n      label: 'Resightings',\n    },\n  ],\n};\n\nAtAGlance.propTypes = {\n  dataSets: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default AtAGlance;\n/* eslint-enable no-console */\n","/* eslint-disable prefer-destructuring, no-console */\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { showDetail } from '../../actions';\n\nclass Entry extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { entry } = this.props;\n    // Look at time to create percentage offset\n    // Add 12, not to 12PM\n    const arr = entry.time.split(':');\n    if (entry.time.indexOf('PM') !== -1) {\n      if (entry.time.indexOf('12:') === -1 || entry.time.indexOf('12:') > 0) {\n        arr[0] = parseInt(arr[0], 10) + 12;\n      }\n    }\n    // Set 12AM to 0\n    if (entry.time.indexOf('AM') !== -1 && entry.time.indexOf('12:') === 0) {\n      arr[0] = parseInt(arr[0], 10) - 12;\n    }\n    const pct = ((arr[0] * 3600 + parseInt(arr[1], 10) * 60) / 864).toFixed(2);\n    this.divRef.current.setAttribute('style', `left:${pct}%;`);\n  }\n\n  render() {\n    const { entry, dispatch } = this.props;\n\n    function onEntryClick() {\n      dispatch(showDetail(entry._id)); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <button className=\"engine-manifest\" ref={this.divRef} type=\"button\" onClick={onEntryClick} onKeyDown={onEntryClick}>\n        {\n          entry.engines.map((engine) => {\n            const bgStyle = {\n              backgroundColor: engine.color,\n            };\n            return (\n              <span className=\"engine-number\" style={bgStyle} key={engine.number}>\n                {engine.number}\n              </span>\n            );\n          })\n        }\n        <span className=\"engine-details-button\">...</span>\n      </button>\n    );\n  }\n}\n\nEntry.propTypes = {\n  entry: PropTypes.shape({\n    time: PropTypes.string.isRequired,\n    engines: PropTypes.arrayOf(PropTypes.object),\n  }),\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => { /* eslint-disable-line arrow-body-style */\n  return bindActionCreators(\n    {\n      showDetail,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(mapDispatchToProps)(Entry);\n/* eslint-enable prefer-destructuring, no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Entry from './Entry';\n\nclass EntriesForDate extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n    this.entryHeight = 0;\n  }\n\n  componentDidMount() {\n    this.divRef.current.setAttribute('style', `height:${this.entryHeight}px;`);\n  }\n\n  render() {\n    const { date, entries } = this.props;\n\n    return (\n      <div className=\"entries-for-date\" ref={this.divRef}>\n        {\n          entries.map((entry) => {\n            if (entry.date === date) {\n              if (this.entryHeight < 20 * entry.engines.length) {\n                this.entryHeight = 20 * (entry.engines.length + 1);\n              }\n              return <Entry key={entry._id} entry={entry} />; /* eslint-disable-line no-underscore-dangle */\n            }\n            return '';\n          })\n        }\n      </div>\n    );\n  }\n}\n\nEntriesForDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EntriesForDate;\n/* eslint-enable no-console */\n","const Months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default Months;\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EntriesForDate from './EntriesForDate';\nimport months from '../../utils/Months';\n\nclass DateLine extends Component {\n  constructor(props) {\n    super(props);\n    this.divRef = React.createRef();\n  }\n\n  render() {\n    const {\n      activeMonth,\n      date,\n      entries,\n      isMonthLabel,\n    } = this.props;\n    const month = months[date.split('/')[0] - 1];\n    const year = date.split('/')[2];\n\n    return (\n      <div className=\"date-line\" ref={this.divRef}>\n        {isMonthLabel\n          && (\n            <div className={`month-display ${month === activeMonth ? 'sticky' : ''}`} data-month={month}>\n              <span>{`${month} ${year}`}</span>\n            </div>\n          )\n        }\n        <div className=\"date-display\">\n          <span>{date.split('/')[1]}</span>\n        </div>\n        <EntriesForDate\n          date={date}\n          entries={entries}\n        />\n      </div>\n    );\n  }\n}\n\nDateLine.propTypes = {\n  activeMonth: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isMonthLabel: PropTypes.bool.isRequired,\n};\n\nexport default DateLine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DateLine from './DateLine';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMonth: '',\n    };\n    this.handleScroll = this.handleScroll.bind(this);\n    this.currentMonth = -1;\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    let month = '';\n    [].map.call(document.querySelectorAll('.month-display'), (item) => {\n      if (item.parentNode.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        // Should set the active month to whatever the last item less than scrollTop is...\n        month = item.getAttribute('data-month');\n      }\n    });\n    this.setState({ activeMonth: month });\n    //\n    if (this.chartRef !== null) {\n      if (this.chartRef.current.getBoundingClientRect().top + scrollTop < window.pageYOffset) {\n        this.chartRef.current.classList.add('sticky');\n      } else {\n        this.chartRef.current.classList.remove('sticky');\n      }\n    }\n  }\n\n  render() {\n    const { entries } = this.props;\n    const { activeMonth } = this.state;\n    const dates = [...new Set(entries.map(entry => entry.date))];\n    let isMonthLabel = false;\n\n    return (\n      <div>\n        <div className=\"train-chart\" ref={this.chartRef}>\n          <div className=\"x-axis-header clearfix\">\n            <div className=\"page-heading-divider\">\n              <h2 className=\"heading-lg\">Sightings</h2>\n            </div>\n            <ul>\n              <li><span>12 AM</span></li>\n              <li><span>2 AM</span></li>\n              <li><span>4 AM</span></li>\n              <li><span>6 AM</span></li>\n              <li><span>8 AM</span></li>\n              <li><span>10 AM</span></li>\n              <li><span>12 PM</span></li>\n              <li><span>2 PM</span></li>\n              <li><span>4 PM</span></li>\n              <li><span>6 PM</span></li>\n              <li><span>8 PM</span></li>\n              <li><span>10 PM</span></li>\n            </ul>\n          </div>\n          <div className=\"time-table\">\n            <div className=\"month-bar\" />\n            {\n              dates.map((date) => {\n                if (this.currentMonth !== date.split('/')[0]) {\n                  this.currentMonth = date.split('/')[0]; /* eslint-disable-line prefer-destructuring */\n                  isMonthLabel = true;\n                } else {\n                  isMonthLabel = false;\n                }\n                return (\n                  <DateLine\n                    activeMonth={activeMonth}\n                    key={date.replace(/\\//, '')}\n                    date={date}\n                    entries={entries}\n                    isMonthLabel={isMonthLabel}\n                  />\n                );\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nChart.propTypes = {\n  entries: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Chart;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      line: '',\n      location: '',\n      number: '',\n    };\n    this.handleLineChange = this.handleLineChange.bind(this);\n    this.handleNumberChange = this.handleNumberChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.isEngineValid = this.isEngineValid.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    const { line, location, number } = props;\n    this.setState({\n      line,\n      location,\n      number,\n    });\n  }\n\n  componentDidUpdate() {\n    const { id, updateEngines } = this.props;\n    const { line, location, number } = this.state;\n    updateEngines(id, this.isEngineValid(), line, location, number);\n  }\n\n  handleLineChange(event) {\n    this.setState({ line: event.target.value });\n  }\n\n  handleNumberChange(event) {\n    this.setState({ number: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleRemove() {\n    const { id, removeEngine } = this.props;\n    removeEngine(id);\n  }\n\n  isEngineValid() {\n    const { line, location, number } = this.state;\n    if (line === '' || location === '' || number === '') {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { trainLineList } = this.props;\n    const { line, location, number } = this.state;\n    return (\n      <div className=\"flex-row add-engine-row\">\n        <label className=\"form-label form-select-label form-label-line\" htmlFor=\"line\">\n          <span>Line</span>\n          <select className=\"form-select\" id=\"line\" name=\"line\" value={line} onChange={this.handleLineChange}>\n            <option value=\"\">Select</option>\n            {\n              trainLineList.map(trainLine => (\n                <option value={trainLine.name} key={trainLine.id}>{trainLine.short}</option>\n              ))\n            }\n          </select>\n        </label>\n        <label className=\"form-label form-label-number\" htmlFor=\"number\">\n          <span>Number</span>\n          <input className=\"form-input\" id=\"number\" name=\"number\" type=\"number\" value={number} onChange={this.handleNumberChange} />\n        </label>\n        <label className=\"form-label form-select-label form-label-location\" htmlFor=\"location\">\n          <span>Location</span>\n          <select className=\"form-select\" id=\"location\" name=\"location\" value={location} onChange={this.handleLocationChange}>\n            <option value=\"\">Select</option>\n            <option value=\"front\">Front</option>\n            <option value=\"middle\">Middle</option>\n            <option value=\"end\">End</option>\n          </select>\n        </label>\n        <button className=\"remove-button\" type=\"button\" onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n\nAddEngine.propTypes = {\n  id: PropTypes.string.isRequired,\n  line: PropTypes.string,\n  location: PropTypes.string,\n  number: PropTypes.string,\n  removeEngine: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n  updateEngines: PropTypes.func.isRequired,\n};\n\nexport default AddEngine;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from '../menu/AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass EditEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isActive: false,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n        notes: '',\n      }],\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    this.setState({ isActive: true });\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { trainLineList, entryData } = this.props;\n    const {\n      date,\n      direction,\n      engines,\n      isActive,\n      isEntryValid,\n      notes,\n      time,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    console.log(entryData);\n    return (\n      <div>\n        <button className=\"edit-entry-button\" onClick={this.displayForm} type=\"button\">\n          <span className=\"text-button\">Edit Entry</span>\n        </button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nEditEntry.propTypes = {\n  dispatch: PropTypes.func,\n  entryData: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(EditEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport EditEntry from './EditEntry';\nimport months from '../../utils/Months';\nimport { formatDate, formatTime } from '../../utils/Formatting';\nimport { getResightings } from '../../selectors';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedClass: '',\n    };\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.setState({ loadedClass: 'detail-loaded' });\n      clearInterval(timer);\n    }, 250);\n  }\n\n  editEntry() {\n    console.log(this);\n  }\n\n  findMatches(trainline, number) {\n    const { resightings, trainLineList } = this.props;\n    const engine = `${trainLineList.find(line => trainline === line.name).short}, ${number}`;\n    const sighting = resightings.find(entry => entry.engine === engine);\n    if (sighting) {\n      return sighting.dates.length;\n    }\n    return 1;\n  }\n\n  render() {\n    const { onDetailClose, data, isLoggedIn } = this.props;\n    const { loadedClass } = this.state;\n\n    return (\n      <div className={`detail-overlay ${loadedClass}`}>\n        <div className=\"detail-bg\" role=\"none\" onClick={onDetailClose} />\n        <div className=\"detail-panel\">\n          <div className=\"detail-header\">\n            <div className=\"detail-header-inner\">\n              <span className=\"entry-number\">\n                Entry No.&nbsp;\n                {data.number}\n              </span>\n              <button className=\"close-button\" type=\"button\" onClick={onDetailClose} />\n            </div>\n          </div>\n          <div className=\"detail-body\">\n            <div className=\"detail-body-inner\">\n              <div className=\"detail-headline\">\n                {`${data.engines.length} engine train observed on ${formatDate(data.date, months)} at ${formatTime(data.time)} heading ${data.direction}.`}\n              </div>\n              <div className=\"detail-subhead\">Engines</div>\n              <table className=\"detail-table\" cellPadding=\"0\" cellSpacing=\"0\">\n                <thead>\n                  <tr>\n                    <th>Ord.</th>\n                    <th>Line</th>\n                    <th>No.</th>\n                    <th>Pos.</th>\n                    <th>Sightings</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data.engines.map((engine) => {\n                      const bgStyle = {\n                        backgroundColor: engine.color,\n                      };\n                      return (\n                        <tr key={engine.number}>\n                          <td><span className=\"engine-color-indicator\" style={bgStyle}>{engine.order}</span></td>\n                          <td><span>{engine.line}</span></td>\n                          <td><span>{engine.number}</span></td>\n                          <td><span>{engine.location}</span></td>\n                          <td><span>{this.findMatches(engine.line, engine.number)}</span></td>\n                        </tr>\n                      );\n                    })\n                  }\n                </tbody>\n              </table>\n              <div className=\"detail-subhead\">Notes</div>\n              <p className=\"detail-notes\">{data.notes}</p>\n            </div>\n          </div>\n          {isLoggedIn\n            && (\n              <EditEntry\n                entryData={data}\n              />\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { trainLines, userStatus } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  const resightings = getResightings(state);\n  return {\n    isLoggedIn,\n    resightings,\n    trainLineList,\n  };\n};\n\nDetail.propTypes = {\n  onDetailClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired,\n  }),\n  isLoggedIn: PropTypes.bool.isRequired,\n  resightings: PropTypes.arrayOf(PropTypes.object),\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps)(Detail);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst About = () => (\n  <div>\n    <div className=\"menu-nav-item\">About the Project</div>\n    <p>\n      The Milwaukee District North tracks sit just beyond the alley in my backyard.\n       During off-peak hours, freight trains are cleared to run along this stretch of the Metra corridor.\n       They rumble past my home office window at seemingly random intervals while I work and attempt to apply structure to this new phase of my career.\n    </p>\n    <p>\n      This project also brought me up to speed with React/Redux and was developed using the full MERN stack.\n    </p>\n  </div>\n);\n\nexport default About;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddEngine from './AddEngine';\nimport { addEntry } from '../../actions';\nimport { createEntryId, formatDateForDB, formatTimeForDB, formatDateForSelect, formatTimeForSelect } from '../../utils/Formatting';\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      direction: 'north',\n      engines: [{\n        id: 'engine-no-0',\n        line: '',\n        number: '',\n        location: '',\n        isValid: false,\n      }],\n      idIter: 0,\n      isEntryValid: true,\n      notes: '',\n      time: '',\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleDirectionChange = this.handleDirectionChange.bind(this);\n    this.handleNotesChange = this.handleNotesChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n    this.addEngine = this.addEngine.bind(this);\n    this.removeEngine = this.removeEngine.bind(this);\n    this.updateEngines = this.updateEngines.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  componentDidMount() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  handleDateChange(event) {\n    this.setState({ date: event.target.value });\n  }\n\n  handleTimeChange(event) {\n    this.setState({ time: event.target.value });\n  }\n\n  handleDirectionChange(event) {\n    this.setState({ direction: event.target.value });\n  }\n\n  handleNotesChange(event) {\n    this.setState({ notes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { date, direction, engines, notes, time } = this.state;\n    let isValid = true;\n    event.preventDefault();\n    engines.forEach((engine) => {\n      if (!engine.isValid) {\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      dispatch(addEntry({\n        date: formatDateForDB(date),\n        direction,\n        engines: engines.map((engine, index) => (\n          {\n            line: engine.line,\n            number: engine.number,\n            order: index + 1,\n            location: engine.location,\n          }\n        )),\n        id: createEntryId(date, time),\n        notes,\n        time: formatTimeForDB(time),\n      }));\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    const today = new Date();\n    this.setState({\n      date: formatDateForSelect(today),\n      direction: 'north',\n      idIter: 0,\n      isEntryValid: true,\n      engines: [{\n        id: 'engine-no-0',\n        isValid: false,\n        line: '',\n        location: '',\n        number: '',\n      }],\n      notes: '',\n      time: formatTimeForSelect(today),\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-entry');\n  }\n\n  addEngine() {\n    const { engines, idIter } = this.state;\n    const id = idIter + 1;\n    engines.push({\n      id: `engine-no-${id}`,\n      line: '',\n      number: '',\n      location: '',\n      isValid: false,\n    });\n    this.setState({ idIter: id });\n    this.setState({ engines });\n  }\n\n  removeEngine(id) {\n    const { engines } = this.state;\n    const index = engines.findIndex(engine => engine.id === id);\n    engines.splice(index, 1);\n    this.setState({ engines });\n  }\n\n  updateEngines(id, isValid, line, location, number) {\n    const { engines } = this.state;\n    const item = engines.find(engine => engine.id === id);\n    if (item !== null) {\n      item.line = line;\n      item.location = location;\n      item.number = number;\n      item.isValid = isValid;\n    }\n  }\n\n  render() {\n    const { isActive, trainLineList } = this.props;\n    const { date, direction, engines, isEntryValid, notes, time } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add an Entry</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-date\" htmlFor=\"date\">\n            <span>Date</span>\n            <input className=\"form-input\" id=\"date\" name=\"date\" type=\"date\" value={date} onChange={this.handleDateChange} />\n          </label>\n          <div className=\"flex-row\">\n            <label className=\"form-label form-label-time\" htmlFor=\"time\">\n              <span>Time</span>\n              <input className=\"form-input\" id=\"time\" name=\"time\" type=\"time\" value={time} onChange={this.handleTimeChange} />\n            </label>\n            <label className=\"form-label form-select-label form-label-direction\" htmlFor=\"direction\">\n              <span>Direction</span>\n              <select className=\"form-select\" id=\"direction\" name=\"direction\" value={direction} onChange={this.handleDirectionChange}>\n                <option value=\"north\">North</option>\n                <option value=\"south\">South</option>\n              </select>\n            </label>\n          </div>\n          {\n            engines.map(engine => (\n              <AddEngine\n                id={engine.id}\n                key={engine.id}\n                line={engine.line}\n                location={engine.location}\n                number={engine.number}\n                removeEngine={this.removeEngine}\n                trainLineList={trainLineList}\n                updateEngines={this.updateEngines}\n              />\n            ))\n          }\n          <button className=\"text-button add-engine-button\" type=\"button\" onClick={this.addEngine}>Add Another Engine</button>\n          <label className=\"form-label form-label-notes\" htmlFor=\"notes\">\n            <span>Notes</span>\n            <textarea className=\"form-textarea\" id=\"notes\" name=\"notes\" value={notes} onChange={this.handleNotesChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Entry</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error adding the entry. Please try again.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddEntry.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n  trainLineList: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => {\n  const { trainLines } = state;\n  const {\n    items: trainLineList,\n  } = trainLines;\n  return {\n    trainLineList,\n  };\n};\n\nexport default connect(mapStateToProps)(AddEntry);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTrainLine } from '../../actions';\n\nclass AddLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n      isEntryValid: true,\n    };\n    this.handleLineNameChange = this.handleLineNameChange.bind(this);\n    this.handleLineShortNameChange = this.handleLineShortNameChange.bind(this);\n    this.handleLineColorChange = this.handleLineColorChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleLineNameChange(event) {\n    this.setState({ lineName: event.target.value });\n  }\n\n  handleLineShortNameChange(event) {\n    this.setState({ lineShortName: event.target.value });\n  }\n\n  handleLineColorChange(event) {\n    this.setState({ lineColor: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n    } = this.state;\n    console.log(`${lineName},`);\n    let isValid = true;\n    event.preventDefault();\n    if (lineName === '') {\n      isValid = false;\n    }\n    if (isValid) {\n      dispatch(addTrainLine({\n        lineName,\n        lineShortName,\n        lineColor,\n        id: lineName.toLowerCase().replace(/\\s/, '-'),\n      }));\n      // Should wait for callback...\n      this.reset();\n    }\n    this.setState({ isEntryValid: isValid });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.reset();\n  }\n\n  reset() {\n    this.setState({\n      lineName: '',\n      lineShortName: '',\n      lineColor: '',\n    });\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('add-line');\n  }\n\n  render() {\n    const { isActive } = this.props;\n    const {\n      lineName,\n      lineShortName,\n      lineColor,\n      isEntryValid,\n    } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (!isEntryValid) {\n      errorDisplayClass = '';\n    }\n    return (\n      <div>\n        <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Add a Train Line</button>\n        <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n          <label className=\"form-label form-label-line-name\" htmlFor=\"lineName\">\n            <span>Name</span>\n            <input className=\"form-input\" id=\"lineName\" name=\"lineName\" type=\"text\" value={lineName} onChange={this.handleLineNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-short-name\" htmlFor=\"lineShortName\">\n            <span>Short Name</span>\n            <input className=\"form-input\" id=\"lineShortName\" name=\"lineShortName\" type=\"text\" value={lineShortName} onChange={this.handleLineShortNameChange} />\n          </label>\n          <label className=\"form-label form-label-line-color\" htmlFor=\"lineColor\">\n            <span>Color</span>\n            <input className=\"form-input\" id=\"lineColor\" name=\"lineColor\" type=\"text\" value={lineColor} onChange={this.handleLineColorChange} />\n          </label>\n          <div className=\"form-action-buttons\">\n            <button className=\"submit-button add-button\" type=\"submit\">Add Line</button>\n            <button className=\"cancel-button\" type=\"button\" onClick={this.handleCancel} />\n          </div>\n          <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddLine.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nexport default connect()(AddLine);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\n\nconst Contact = () => (\n  <div>\n    <div className=\"menu-nav-item\">Contact</div>\n    <p>\n      jef.a.mayer(at)gmail.com\n      <br />\n      <a className=\"inline-link\" href=\"https://jefmayer.com\">jefmayer.com</a>\n    </p>\n  </div>\n);\n\nexport default Contact;\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../actions';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: '',\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayForm = this.displayForm.bind(this);\n  }\n\n  handleUserChange(event) {\n    this.setState({ user: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleSubmit(event) {\n    const { dispatch } = this.props;\n    const { user, password } = this.state;\n    event.preventDefault();\n    dispatch(login({ user, password })); /* eslint-disable-line no-underscore-dangle */\n  }\n\n  displayForm() {\n    const { setActiveMenuItem } = this.props;\n    setActiveMenuItem('login');\n  }\n\n  logout() {\n    const { dispatch, setActiveMenuItem } = this.props;\n    setActiveMenuItem('');\n    // Clear inputs\n    dispatch(logout());\n  }\n\n  render() {\n    const { isActive, isLoggedIn, isLoginError } = this.props;\n    const { user, password } = this.state;\n    let errorDisplayClass = 'hidden';\n    if (isLoginError) {\n      errorDisplayClass = '';\n    }\n    return (\n      !isLoggedIn\n        ? (\n          <div>\n            <button className=\"menu-nav-item menu-nav-button\" onClick={this.displayForm} type=\"button\">Login</button>\n            <form className={`login-form app-form ${isActive ? '' : 'hidden'}`} onSubmit={this.handleSubmit}>\n              <label className=\"form-label\" htmlFor=\"user\">\n                <span>Name</span>\n                <input className=\"form-input\" id=\"user\" name=\"user\" type=\"text\" value={user} onChange={this.handleUserChange} />\n              </label>\n              <label className=\"form-label\" htmlFor=\"password\">\n                <span>Password</span>\n                <input className=\"form-input\" id=\"password\" name=\"password\" type=\"password\" value={password} onChange={this.handlePasswordChange} />\n              </label>\n              <input className=\"submit-button\" type=\"submit\" value=\"Login\" />\n              <div className={`form-error ${errorDisplayClass}`}>There was an error signing in. Please recheck.</div>\n            </form>\n          </div>\n        ) : (\n          <button className=\"menu-nav-item menu-nav-button\" type=\"button\" onClick={this.logout}>Logout</button>\n        )\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func,\n  isActive: PropTypes.bool.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  isLoginError: PropTypes.bool.isRequired,\n  setActiveMenuItem: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n    isLoginError,\n  } = userStatus;\n  return {\n    isLoggedIn,\n    isLoginError,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport About from './About';\nimport AddEntry from './AddEntry';\nimport AddLine from './AddLine';\nimport Contact from './Contact';\nimport Login from './Login';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMenuItem: '',\n    };\n    this.divRef = React.createRef();\n    this.setActiveMenuItem = this.setActiveMenuItem.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { menuDisplayClass } = this.props;\n    if (menuDisplayClass === 'closed') {\n      const timer = setTimeout(() => {\n        this.divRef.current.setAttribute('style', 'position:absolute;');\n        clearTimeout(timer);\n      }, 150);\n    } else {\n      this.divRef.current.setAttribute('style', 'position:fixed;');\n    }\n  }\n\n  setActiveMenuItem(name) {\n    this.setState({ activeMenuItem: name });\n  }\n\n  render() {\n    const { activeMenuItem } = this.state;\n    const { isLoggedIn, menuDisplayClass, onMenuClick } = this.props;\n    return (\n      <div className={`menu-container ${menuDisplayClass}`} ref={this.divRef}>\n        <button className=\"menu-button\" onClick={onMenuClick} type=\"button\">\n          <span className=\"menu-icon\">\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n            <span className=\"menu-bar\" />\n          </span>\n        </button>\n        <div className=\"menu-nav\">\n          <div className=\"menu-nav-inner\">\n            <About />\n            <Contact />\n            {isLoggedIn\n              && (\n                <div>\n                  <AddEntry\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-entry'}\n                  />\n                  <AddLine\n                    setActiveMenuItem={this.setActiveMenuItem}\n                    isActive={activeMenuItem === 'add-line'}\n                  />\n                </div>\n              )\n            }\n            <Login\n              setActiveMenuItem={this.setActiveMenuItem}\n              isActive={activeMenuItem === 'login'}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMenu.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  menuDisplayClass: PropTypes.string.isRequired,\n  onMenuClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { userStatus } = state;\n  const {\n    isLoggedIn,\n  } = userStatus;\n  return {\n    isLoggedIn,\n  };\n};\n\nexport default connect(mapStateToProps)(Menu);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchEntries, fetchTrainLines, hideDetail, hideMenu, showMenu } from '../actions';\nimport AtAGlance from '../components/ataglance/AtAGlance';\nimport Chart from '../components/chart/Chart';\nimport Detail from '../components/detail/Detail';\nimport Menu from '../components/menu/Menu';\nimport logo from '../../img/trainspotted-logo.svg';\nimport '../../scss/App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchEntries());\n    dispatch(fetchTrainLines());\n  }\n\n  render() {\n    const { detailId, dispatch, entries, isDetailOpen, isMenuOpen } = this.props;\n\n    function onDetailClose() {\n      dispatch(hideDetail());\n    }\n\n    function onMenuClick() {\n      if (!isMenuOpen) {\n        dispatch(showMenu());\n      } else {\n        dispatch(hideMenu());\n      }\n    }\n\n    function getEntryById(id) {\n      return entries.find(entry => entry._id === id); /* eslint-disable-line no-underscore-dangle */\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"app-header\">\n          <div className=\"logo-wrapper\">\n            <img src={logo} className=\"logo-graphic\" alt=\"Trainspotted Logo\" />\n            <div className=\"logo-type\">Trainspotted</div>\n          </div>\n          <Menu\n            menuDisplayClass={isMenuOpen ? 'open' : 'closed'}\n            onMenuClick={onMenuClick}\n          />\n        </header>\n        <AtAGlance />\n        <Chart\n          entries={entries}\n        />\n        {isDetailOpen\n          && (\n            <Detail\n              onDetailClose={onDetailClose}\n              data={getEntryById(detailId)}\n              entries={entries}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  detailId: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.object),\n  isDetailOpen: PropTypes.bool,\n  isMenuOpen: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => {\n  const { entryData, entryDetail, menu } = state;\n  const {\n    items: entries,\n  } = entryData;\n  const {\n    id: detailId,\n    isOpen: isDetailOpen,\n  } = entryDetail;\n  const {\n    isOpen: isMenuOpen,\n  } = menu;\n  return {\n    detailId,\n    entries,\n    isDetailOpen,\n    isMenuOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n/* eslint-enable no-console */\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './js/reducers';\nimport App from './js/containers/App';\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware),\n);\n\n// console.log(store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n/* eslint-enable no-console */\n"],"sourceRoot":""}